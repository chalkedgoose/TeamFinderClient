{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MOHAM\\\\Desktop\\\\TeamFClient\\\\src\\\\Components\\\\Chatscreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport socketIOClient from 'socket.io-client';\nconst ENDPOINT = 'http://localhost:4000';\n\nconst Chatscreen = () => {\n  _s();\n\n  // Make connection\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n  }, []); // Query DOM\n\n  var message = document.getElementById('message'),\n      handle = document.getElementById('handle'),\n      btn = document.getElementById('send'),\n      output = document.getElementById('output'),\n      feedback = document.getElementById('feedback'); // Emit events\n  // message.addEventListener('keypress', function () {\n  //     socket.emit('typing', handle.value)\n  // })\n  // Listen for events\n\n  socket.on('chat', function (data) {\n    feedback.innerHTML = '';\n    output.innerHTML += '<p><strong>' + data.handle + ': </strong>' + data.message + '</p>';\n  });\n  socket.on('typing', function (data) {\n    feedback.innerHTML = '<p><em>' + data + ' is typing a message...</em></p>';\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mario-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mario Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"handle\",\n        type: \"text\",\n        placeholder: \"Handle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"message\",\n        type: \"text\",\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: () => {\n          socket.emit('chat', {\n            message: message.value,\n            handle: handle.value\n          });\n          message.value = '';\n        },\n        id: \"send\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chatscreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chatscreen;\nexport default Chatscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatscreen\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/TeamFClient/src/Components/Chatscreen.js"],"names":["React","socketIOClient","ENDPOINT","Chatscreen","useEffect","socket","message","document","getElementById","handle","btn","output","feedback","on","data","innerHTML","emit","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,MAAM,GAAGJ,cAAc,CAACC,QAAD,CAA7B;AACH,GAFQ,EAEN,EAFM,CAAT,CAFqB,CAMrB;;AACA,MAAII,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AAAA,MACIC,MAAM,GAAGF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADb;AAAA,MAEIE,GAAG,GAAGH,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFV;AAAA,MAGIG,MAAM,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAHb;AAAA,MAIII,QAAQ,GAAGL,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAJf,CAPqB,CAarB;AACA;AACA;AACA;AAEA;;AACAH,EAAAA,MAAM,CAACQ,EAAP,CAAU,MAAV,EAAkB,UAAUC,IAAV,EAAgB;AAC9BF,IAAAA,QAAQ,CAACG,SAAT,GAAqB,EAArB;AACAJ,IAAAA,MAAM,CAACI,SAAP,IACI,gBAAgBD,IAAI,CAACL,MAArB,GAA8B,aAA9B,GAA8CK,IAAI,CAACR,OAAnD,GAA6D,MADjE;AAEH,GAJD;AAMAD,EAAAA,MAAM,CAACQ,EAAP,CAAU,QAAV,EAAoB,UAAUC,IAAV,EAAgB;AAChCF,IAAAA,QAAQ,CAACG,SAAT,GACI,YAAYD,IAAZ,GAAmB,kCADvB;AAEH,GAHD;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AACI,QAAA,OAAO,EAAE,MAAM;AACXT,UAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoB;AAChBV,YAAAA,OAAO,EAAEA,OAAO,CAACW,KADD;AAEhBR,YAAAA,MAAM,EAAEA,MAAM,CAACQ;AAFC,WAApB;AAIAX,UAAAA,OAAO,CAACW,KAAR,GAAgB,EAAhB;AACH,SAPL;AAQI,QAAA,EAAE,EAAC,MARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAvDD;;GAAMd,U;;KAAAA,U;AAyDN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport socketIOClient from 'socket.io-client'\r\nconst ENDPOINT = 'http://localhost:4000'\r\n\r\nconst Chatscreen = () => {\r\n    // Make connection\r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT)\r\n    }, [])\r\n\r\n    // Query DOM\r\n    var message = document.getElementById('message'),\r\n        handle = document.getElementById('handle'),\r\n        btn = document.getElementById('send'),\r\n        output = document.getElementById('output'),\r\n        feedback = document.getElementById('feedback')\r\n\r\n    // Emit events\r\n    // message.addEventListener('keypress', function () {\r\n    //     socket.emit('typing', handle.value)\r\n    // })\r\n\r\n    // Listen for events\r\n    socket.on('chat', function (data) {\r\n        feedback.innerHTML = ''\r\n        output.innerHTML +=\r\n            '<p><strong>' + data.handle + ': </strong>' + data.message + '</p>'\r\n    })\r\n\r\n    socket.on('typing', function (data) {\r\n        feedback.innerHTML =\r\n            '<p><em>' + data + ' is typing a message...</em></p>'\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"mario-chat\">\r\n                <h2>Mario Chat</h2>\r\n                <div id=\"chat-window\">\r\n                    <div id=\"output\"></div>\r\n                    <div id=\"feedback\"></div>\r\n                </div>\r\n                <input id=\"handle\" type=\"text\" placeholder=\"Handle\" />\r\n                <input id=\"message\" type=\"text\" placeholder=\"Message\" />\r\n                <button\r\n                    onCLick={() => {\r\n                        socket.emit('chat', {\r\n                            message: message.value,\r\n                            handle: handle.value,\r\n                        })\r\n                        message.value = ''\r\n                    }}\r\n                    id=\"send\"\r\n                >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatscreen\r\n"]},"metadata":{},"sourceType":"module"}