{"ast":null,"code":"import { POST_ID, GET_ID, GETMY_ID } from '../actions/types';\nconst initialState = {\n  UserId: [],\n  UserInfo: []\n};\naxios.get(`https://jobs-xmmtw.ondigitalocean.app/player/{ _id: ${initialState.UserId._id}, __v: 0 }`, {\n  headers: {\n    authorization: token\n  }\n}).then(res => {\n  dispatch({\n    type: GETMY_ID,\n    payload: res.data\n  });\n});\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ID:\n      return { ...state,\n        UserId: action.payload\n      };\n\n    case GETMY_ID:\n      return { ...state,\n        UserInfo: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/TeamFClient/src/reducers/UserReducer.js"],"names":["POST_ID","GET_ID","GETMY_ID","initialState","UserId","UserInfo","axios","get","_id","headers","authorization","token","then","res","dispatch","type","payload","data","state","action"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAIAC,KAAK,CACAC,GADL,CAES,uDAAsDJ,YAAY,CAACC,MAAb,CAAoBI,GAAI,YAFvF,EAGQ;AACIC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAEC;AADV;AADb,CAHR,EASKC,IATL,CASWC,GAAD,IAAS;AACXC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb,QAAR;AAAkBc,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAA/B,GAAD,CAAR;AACH,CAXL;AAaA,eAAe,UAAUC,KAAK,GAAGf,YAAlB,EAAgCgB,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKd,MAAL;AACI,aAAO,EACH,GAAGiB,KADA;AAEHd,QAAAA,MAAM,EAAEe,MAAM,CAACH;AAFZ,OAAP;;AAKJ,SAAKd,QAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHb,QAAAA,QAAQ,EAAEc,MAAM,CAACH;AAFd,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAbR;AAeH","sourcesContent":["import { POST_ID, GET_ID, GETMY_ID } from '../actions/types'\r\n\r\nconst initialState = {\r\n    UserId: [],\r\n    UserInfo: [],\r\n}\r\naxios\r\n    .get(\r\n        `https://jobs-xmmtw.ondigitalocean.app/player/{ _id: ${initialState.UserId._id}, __v: 0 }`,\r\n        {\r\n            headers: {\r\n                authorization: token,\r\n            },\r\n        }\r\n    )\r\n    .then((res) => {\r\n        dispatch({ type: GETMY_ID, payload: res.data })\r\n    })\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ID:\r\n            return {\r\n                ...state,\r\n                UserId: action.payload,\r\n            }\r\n\r\n        case GETMY_ID:\r\n            return {\r\n                ...state,\r\n                UserInfo: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}