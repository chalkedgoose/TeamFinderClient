{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar HTMLElement = require(\"../generated/HTMLElement\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require = require(\"../helpers/node\"),\n    nodeRoot = _require.nodeRoot;\n\nvar _require2 = require(\"../helpers/shadow-dom\"),\n    assignSlotableForTree = _require2.assignSlotableForTree,\n    findFlattenedSlotables = _require2.findFlattenedSlotables;\n\nvar HTMLSlotElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLSlotElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLSlotElementImpl);\n\n  function HTMLSlotElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLSlotElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._assignedNodes = [];\n    return _this;\n  } // https://dom.spec.whatwg.org/#slot-name\n\n\n  _createClass(HTMLSlotElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLSlotElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue); // https://dom.spec.whatwg.org/#slot-name\n\n\n      if (name === \"name\") {\n        if (value === oldValue) {\n          return;\n        }\n\n        if (value === null && oldValue === \"\") {\n          return;\n        }\n\n        if (value === \"\" && oldValue === null) {\n          return;\n        }\n\n        assignSlotableForTree(nodeRoot(this));\n      }\n    } // https://html.spec.whatwg.org/#dom-slot-assignednodes\n\n  }, {\n    key: \"assignedNodes\",\n    value: function assignedNodes(options) {\n      if (!options || !options.flatten) {\n        return this._assignedNodes.map(idlUtils.wrapperForImpl);\n      }\n\n      return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\n    } // https://html.spec.whatwg.org/#dom-slot-assignedelements\n\n  }, {\n    key: \"assignedElements\",\n    value: function assignedElements(options) {\n      return this.assignedNodes(options).filter(HTMLElement.is);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this.getAttributeNS(null, \"name\") || \"\";\n    }\n  }]);\n\n  return HTMLSlotElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLSlotElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSlotElement-impl.js"],"names":["idlUtils","require","HTMLElement","HTMLElementImpl","implementation","nodeRoot","assignSlotableForTree","findFlattenedSlotables","HTMLSlotElementImpl","globalObject","args","privateData","_assignedNodes","name","value","oldValue","options","flatten","map","wrapperForImpl","assignedNodes","filter","is","getAttributeNS","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AACA,IAAME,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BG,cAAtD;;eAEqBH,OAAO,CAAC,iBAAD,C;IAApBI,Q,YAAAA,Q;;gBACkDJ,OAAO,CAAC,uBAAD,C;IAAzDK,qB,aAAAA,qB;IAAuBC,sB,aAAAA,sB;;IAEzBC,mB;;;;;AACJ,+BAAYC,YAAZ,EAA0BC,IAA1B,EAAgCC,WAAhC,EAA6C;AAAA;;AAAA;;AAC3C,8BAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;AACA,UAAKC,cAAL,GAAsB,EAAtB;AAF2C;AAG5C,G,CAED;;;;;kCAKcC,I,EAAMC,K,EAAOC,Q,EAAU;AACnC,6FAAoBF,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EADmC,CAGnC;;;AACA,UAAIF,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAIC,KAAK,KAAKC,QAAd,EAAwB;AACtB;AACD;;AAED,YAAID,KAAK,KAAK,IAAV,IAAkBC,QAAQ,KAAK,EAAnC,EAAuC;AACrC;AACD;;AAED,YAAID,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,IAAjC,EAAuC;AACrC;AACD;;AAEDT,QAAAA,qBAAqB,CAACD,QAAQ,CAAC,IAAD,CAAT,CAArB;AACD;AACF,K,CAED;;;;kCACcW,O,EAAS;AACrB,UAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACC,OAAzB,EAAkC;AAChC,eAAO,KAAKL,cAAL,CAAoBM,GAApB,CAAwBlB,QAAQ,CAACmB,cAAjC,CAAP;AACD;;AAED,aAAOZ,sBAAsB,CAAC,IAAD,CAAtB,CAA6BW,GAA7B,CAAiClB,QAAQ,CAACmB,cAA1C,CAAP;AACD,K,CAED;;;;qCACiBH,O,EAAS;AACxB,aAAO,KAAKI,aAAL,CAAmBJ,OAAnB,EAA4BK,MAA5B,CAAmCnB,WAAW,CAACoB,EAA/C,CAAP;AACD;;;wBArCU;AACT,aAAO,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,KAAqC,EAA5C;AACD;;;;EAT+BpB,e;;AA+ClCqB,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst HTMLElement = require(\"../generated/HTMLElement\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst { nodeRoot } = require(\"../helpers/node\");\nconst { assignSlotableForTree, findFlattenedSlotables } = require(\"../helpers/shadow-dom\");\n\nclass HTMLSlotElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._assignedNodes = [];\n  }\n\n  // https://dom.spec.whatwg.org/#slot-name\n  get name() {\n    return this.getAttributeNS(null, \"name\") || \"\";\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    // https://dom.spec.whatwg.org/#slot-name\n    if (name === \"name\") {\n      if (value === oldValue) {\n        return;\n      }\n\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n\n      assignSlotableForTree(nodeRoot(this));\n    }\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignednodes\n  assignedNodes(options) {\n    if (!options || !options.flatten) {\n      return this._assignedNodes.map(idlUtils.wrapperForImpl);\n    }\n\n    return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignedelements\n  assignedElements(options) {\n    return this.assignedNodes(options).filter(HTMLElement.is);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLSlotElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}