{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"../helpers/selectors\"),\n    addNwsapi = _require.addNwsapi;\n\nvar _require2 = require(\"../helpers/namespaces\"),\n    HTML_NS = _require2.HTML_NS;\n\nvar _require3 = require(\"../../utils\"),\n    mixin = _require3.mixin,\n    memoizeQuery = _require3.memoizeQuery;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar NodeImpl = require(\"./Node-impl\").implementation;\n\nvar ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nvar ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\n\nvar attributes = require(\"../attributes\");\n\nvar namedPropertiesWindow = require(\"../named-properties-window\");\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require4 = require(\"../../browser/parser\"),\n    parseFragment = _require4.parseFragment;\n\nvar _require5 = require(\"../domparsing/serialization\"),\n    fragmentSerialization = _require5.fragmentSerialization;\n\nvar _require6 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require6.domSymbolTree;\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar DOMTokenList = require(\"../generated/DOMTokenList\");\n\nvar NamedNodeMap = require(\"../generated/NamedNodeMap\");\n\nvar validateNames = require(\"../helpers/validate-names\");\n\nvar _require7 = require(\"../helpers/strings\"),\n    asciiLowercase = _require7.asciiLowercase,\n    asciiUppercase = _require7.asciiUppercase;\n\nvar _require8 = require(\"../node\"),\n    listOfElementsWithQualifiedName = _require8.listOfElementsWithQualifiedName,\n    listOfElementsWithNamespaceAndLocalName = _require8.listOfElementsWithNamespaceAndLocalName,\n    listOfElementsWithClassNames = _require8.listOfElementsWithClassNames;\n\nvar SlotableMixinImpl = require(\"./Slotable-impl\").implementation;\n\nvar NonDocumentTypeChildNode = require(\"./NonDocumentTypeChildNode-impl\").implementation;\n\nvar ShadowRoot = require(\"../generated/ShadowRoot\");\n\nvar Text = require(\"../generated/Text\");\n\nvar _require9 = require(\"../helpers/shadow-dom\"),\n    isValidHostElementName = _require9.isValidHostElementName;\n\nvar _require10 = require(\"../helpers/custom-elements\"),\n    isValidCustomElementName = _require10.isValidCustomElementName,\n    lookupCEDefinition = _require10.lookupCEDefinition;\n\nfunction attachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (!doc._ids[id]) {\n      doc._ids[id] = [];\n    }\n\n    doc._ids[id].push(elm);\n  }\n}\n\nfunction detachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (doc._ids && doc._ids[id]) {\n      var elms = doc._ids[id];\n\n      for (var i = 0; i < elms.length; i++) {\n        if (elms[i] === elm) {\n          elms.splice(i, 1);\n          --i;\n        }\n      }\n\n      if (elms.length === 0) {\n        delete doc._ids[id];\n      }\n    }\n  }\n}\n\nvar ElementImpl = /*#__PURE__*/function (_NodeImpl) {\n  _inherits(ElementImpl, _NodeImpl);\n\n  var _super = _createSuper(ElementImpl);\n\n  function ElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, ElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n\n    _this._initSlotableMixin();\n\n    _this._namespaceURI = privateData.namespace;\n    _this._prefix = privateData.prefix;\n    _this._localName = privateData.localName;\n    _this._ceState = privateData.ceState;\n    _this._ceDefinition = privateData.ceDefinition;\n    _this._isValue = privateData.isValue;\n    _this._shadowRoot = null;\n    _this._ceReactionQueue = [];\n    _this.nodeType = NODE_TYPE.ELEMENT_NODE;\n    _this.scrollTop = 0;\n    _this.scrollLeft = 0;\n    _this._attributeList = []; // Used for caching.\n\n    _this._attributesByNameMap = new Map();\n    _this._attributes = NamedNodeMap.createImpl(_this._globalObject, [], {\n      element: _assertThisInitialized(_this)\n    });\n    _this._cachedTagName = null;\n    return _this;\n  }\n\n  _createClass(ElementImpl, [{\n    key: \"_attach\",\n    value: function _attach() {\n      namedPropertiesWindow.nodeAttachedToDocument(this);\n      var id = this.getAttributeNS(null, \"id\");\n\n      if (id) {\n        attachId(id, this, this._ownerDocument);\n      }\n\n      _get(_getPrototypeOf(ElementImpl.prototype), \"_attach\", this).call(this);\n    }\n  }, {\n    key: \"_detach\",\n    value: function _detach() {\n      _get(_getPrototypeOf(ElementImpl.prototype), \"_detach\", this).call(this);\n\n      namedPropertiesWindow.nodeDetachedFromDocument(this);\n      var id = this.getAttributeNS(null, \"id\");\n\n      if (id) {\n        detachId(id, this, this._ownerDocument);\n      }\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      this._modified();\n\n      namedPropertiesWindow.elementAttributeModified(this, name, value, oldValue);\n\n      if (name === \"id\" && this._attached) {\n        var doc = this._ownerDocument;\n        detachId(oldValue, this, doc);\n        attachId(value, this, doc);\n      } // update classList\n\n\n      if (name === \"class\" && this._classList !== undefined) {\n        this._classList.attrModified();\n      }\n\n      this._attrModifiedSlotableMixin(name, value, oldValue);\n    }\n  }, {\n    key: \"hasAttributes\",\n    value: function hasAttributes() {\n      return attributes.hasAttributes(this);\n    }\n  }, {\n    key: \"getAttributeNames\",\n    value: function getAttributeNames() {\n      return attributes.attributeNames(this);\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      var attr = attributes.getAttributeByName(this, name);\n\n      if (!attr) {\n        return null;\n      }\n\n      return attr._value;\n    }\n  }, {\n    key: \"getAttributeNS\",\n    value: function getAttributeNS(namespace, localName) {\n      var attr = attributes.getAttributeByNameNS(this, namespace, localName);\n\n      if (!attr) {\n        return null;\n      }\n\n      return attr._value;\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      validateNames.name(this._globalObject, name);\n\n      if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n        name = asciiLowercase(name);\n      }\n\n      var attribute = attributes.getAttributeByName(this, name);\n\n      if (attribute === null) {\n        var newAttr = this._ownerDocument._createAttribute({\n          localName: name,\n          value: value\n        });\n\n        attributes.appendAttribute(this, newAttr);\n        return;\n      }\n\n      attributes.changeAttribute(this, attribute, value);\n    }\n  }, {\n    key: \"setAttributeNS\",\n    value: function setAttributeNS(namespace, name, value) {\n      var extracted = validateNames.validateAndExtract(this._globalObject, namespace, name); // Because of widespread use of this method internally, e.g. to manually implement attribute/content reflection, we\n      // centralize the conversion to a string here, so that all call sites don't have to do it.\n\n      value = \"\".concat(value);\n      attributes.setAttributeValue(this, extracted.localName, value, extracted.prefix, extracted.namespace);\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(name) {\n      attributes.removeAttributeByName(this, name);\n    }\n  }, {\n    key: \"removeAttributeNS\",\n    value: function removeAttributeNS(namespace, localName) {\n      attributes.removeAttributeByNameNS(this, namespace, localName);\n    }\n  }, {\n    key: \"toggleAttribute\",\n    value: function toggleAttribute(qualifiedName, force) {\n      validateNames.name(this._globalObject, qualifiedName);\n\n      if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n        qualifiedName = asciiLowercase(qualifiedName);\n      }\n\n      var attribute = attributes.getAttributeByName(this, qualifiedName);\n\n      if (attribute === null) {\n        if (force === undefined || force === true) {\n          var newAttr = this._ownerDocument._createAttribute({\n            localName: qualifiedName,\n            value: \"\"\n          });\n\n          attributes.appendAttribute(this, newAttr);\n          return true;\n        }\n\n        return false;\n      }\n\n      if (force === undefined || force === false) {\n        attributes.removeAttributeByName(this, qualifiedName);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(name) {\n      if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n        name = asciiLowercase(name);\n      }\n\n      return attributes.hasAttributeByName(this, name);\n    }\n  }, {\n    key: \"hasAttributeNS\",\n    value: function hasAttributeNS(namespace, localName) {\n      if (namespace === \"\") {\n        namespace = null;\n      }\n\n      return attributes.hasAttributeByNameNS(this, namespace, localName);\n    }\n  }, {\n    key: \"getAttributeNode\",\n    value: function getAttributeNode(name) {\n      return attributes.getAttributeByName(this, name);\n    }\n  }, {\n    key: \"getAttributeNodeNS\",\n    value: function getAttributeNodeNS(namespace, localName) {\n      return attributes.getAttributeByNameNS(this, namespace, localName);\n    }\n  }, {\n    key: \"setAttributeNode\",\n    value: function setAttributeNode(attr) {\n      // eslint-disable-next-line no-restricted-properties\n      return attributes.setAttribute(this, attr);\n    }\n  }, {\n    key: \"setAttributeNodeNS\",\n    value: function setAttributeNodeNS(attr) {\n      // eslint-disable-next-line no-restricted-properties\n      return attributes.setAttribute(this, attr);\n    }\n  }, {\n    key: \"removeAttributeNode\",\n    value: function removeAttributeNode(attr) {\n      // eslint-disable-next-line no-restricted-properties\n      if (!attributes.hasAttribute(this, attr)) {\n        throw DOMException.create(this._globalObject, [\"Tried to remove an attribute that was not present\", \"NotFoundError\"]);\n      } // eslint-disable-next-line no-restricted-properties\n\n\n      attributes.removeAttribute(this, attr);\n      return attr;\n    }\n  }, {\n    key: \"getBoundingClientRect\",\n    value: function getBoundingClientRect() {\n      return {\n        bottom: 0,\n        height: 0,\n        left: 0,\n        right: 0,\n        top: 0,\n        width: 0\n      };\n    }\n  }, {\n    key: \"getClientRects\",\n    value: function getClientRects() {\n      return [];\n    }\n  }, {\n    key: \"attachShadow\",\n    // https://dom.spec.whatwg.org/#dom-element-attachshadow\n    value: function attachShadow(init) {\n      var _ownerDocument = this._ownerDocument,\n          _namespaceURI = this._namespaceURI,\n          _localName = this._localName,\n          _isValue = this._isValue;\n\n      if (this.namespaceURI !== HTML_NS) {\n        throw DOMException.create(this._globalObject, [\"This element does not support attachShadow. This element is not part of the HTML namespace.\", \"NotSupportedError\"]);\n      }\n\n      if (!isValidHostElementName(_localName) && !isValidCustomElementName(_localName)) {\n        var message = \"This element does not support attachShadow. This element is not a custom element nor \" + \"a standard element supporting a shadow root.\";\n        throw DOMException.create(this._globalObject, [message, \"NotSupportedError\"]);\n      }\n\n      if (isValidCustomElementName(_localName) || _isValue) {\n        var definition = lookupCEDefinition(_ownerDocument, _namespaceURI, _localName, _isValue);\n\n        if (definition && definition.disableShadow) {\n          throw DOMException.create(this._globalObject, [\"Shadow root cannot be create on a custom element with disabled shadow\", \"NotSupportedError\"]);\n        }\n      }\n\n      if (this._shadowRoot !== null) {\n        throw DOMException.create(this._globalObject, [\"Shadow root cannot be created on a host which already hosts a shadow tree.\", \"NotSupportedError\"]);\n      }\n\n      var shadow = ShadowRoot.createImpl(this._globalObject, [], {\n        ownerDocument: this.ownerDocument,\n        mode: init.mode,\n        host: this\n      });\n      this._shadowRoot = shadow;\n      return shadow;\n    } // https://dom.spec.whatwg.org/#dom-element-shadowroot\n\n  }, {\n    key: \"_insertAdjacent\",\n    // https://dom.spec.whatwg.org/#insert-adjacent\n    value: function _insertAdjacent(element, where, node) {\n      where = asciiLowercase(where);\n\n      if (where === \"beforebegin\") {\n        if (element.parentNode === null) {\n          return null;\n        }\n\n        return element.parentNode._preInsert(node, element);\n      }\n\n      if (where === \"afterbegin\") {\n        return element._preInsert(node, element.firstChild);\n      }\n\n      if (where === \"beforeend\") {\n        return element._preInsert(node, null);\n      }\n\n      if (where === \"afterend\") {\n        if (element.parentNode === null) {\n          return null;\n        }\n\n        return element.parentNode._preInsert(node, element.nextSibling);\n      }\n\n      throw DOMException.create(this._globalObject, ['Must provide one of \"beforebegin\", \"afterbegin\", \"beforeend\", or \"afterend\".', \"SyntaxError\"]);\n    }\n  }, {\n    key: \"insertAdjacentElement\",\n    value: function insertAdjacentElement(where, element) {\n      return this._insertAdjacent(this, where, element);\n    }\n  }, {\n    key: \"insertAdjacentText\",\n    value: function insertAdjacentText(where, data) {\n      var text = Text.createImpl(this._globalObject, [], {\n        data: data,\n        ownerDocument: this._ownerDocument\n      });\n\n      this._insertAdjacent(this, where, text);\n    } // https://w3c.github.io/DOM-Parsing/#dom-element-insertadjacenthtml\n\n  }, {\n    key: \"insertAdjacentHTML\",\n    value: function insertAdjacentHTML(position, text) {\n      position = asciiLowercase(position);\n      var context;\n\n      switch (position) {\n        case \"beforebegin\":\n        case \"afterend\":\n          {\n            context = this.parentNode;\n\n            if (context === null || context.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n              throw DOMException.create(this._globalObject, [\"Cannot insert HTML adjacent to parent-less nodes or children of document nodes.\", \"NoModificationAllowedError\"]);\n            }\n\n            break;\n          }\n\n        case \"afterbegin\":\n        case \"beforeend\":\n          {\n            context = this;\n            break;\n          }\n\n        default:\n          {\n            throw DOMException.create(this._globalObject, ['Must provide one of \"beforebegin\", \"afterbegin\", \"beforeend\", or \"afterend\".', \"SyntaxError\"]);\n          }\n      }\n\n      if (context.nodeType !== NODE_TYPE.ELEMENT_NODE || context._ownerDocument._parsingMode === \"html\" && context._localName === \"html\" && context._namespaceURI === HTML_NS) {\n        context = context._ownerDocument.createElement(\"body\");\n      }\n\n      var fragment = parseFragment(text, context);\n\n      switch (position) {\n        case \"beforebegin\":\n          {\n            this.parentNode._insert(fragment, this);\n\n            break;\n          }\n\n        case \"afterbegin\":\n          {\n            this._insert(fragment, this.firstChild);\n\n            break;\n          }\n\n        case \"beforeend\":\n          {\n            this._append(fragment);\n\n            break;\n          }\n\n        case \"afterend\":\n          {\n            this.parentNode._insert(fragment, this.nextSibling);\n\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"closest\",\n    value: function closest(selectors) {\n      var matcher = addNwsapi(this);\n      return matcher.closest(selectors, idlUtils.wrapperForImpl(this));\n    }\n  }, {\n    key: \"namespaceURI\",\n    get: function get() {\n      return this._namespaceURI;\n    }\n  }, {\n    key: \"prefix\",\n    get: function get() {\n      return this._prefix;\n    }\n  }, {\n    key: \"localName\",\n    get: function get() {\n      return this._localName;\n    }\n  }, {\n    key: \"_qualifiedName\",\n    get: function get() {\n      return this._prefix !== null ? this._prefix + \":\" + this._localName : this._localName;\n    }\n  }, {\n    key: \"tagName\",\n    get: function get() {\n      // This getter can be a hotpath in getComputedStyle.\n      // All these are invariants during the instance lifetime so we can safely cache the computed tagName.\n      // We could create it during construction but since we already identified this as potentially slow we do it lazily.\n      if (this._cachedTagName === null) {\n        if (this.namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n          this._cachedTagName = asciiUppercase(this._qualifiedName);\n        } else {\n          this._cachedTagName = this._qualifiedName;\n        }\n      }\n\n      return this._cachedTagName;\n    }\n  }, {\n    key: \"attributes\",\n    get: function get() {\n      return this._attributes;\n    } // https://w3c.github.io/DOM-Parsing/#dom-element-outerhtml\n\n  }, {\n    key: \"outerHTML\",\n    get: function get() {\n      // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n      // https://github.com/inikulin/parse5/issues/230\n      // Alternatively, if we can create a virtual node in domSymbolTree, that'd also work.\n      // It's currently prevented by the fact that a node can't be duplicated in the same tree.\n      // Then we could get rid of all the code for childNodesForSerializing.\n      return fragmentSerialization({\n        childNodesForSerializing: [this],\n        _ownerDocument: this._ownerDocument\n      }, {\n        requireWellFormed: true,\n        globalObject: this._globalObject\n      });\n    },\n    set: function set(markup) {\n      var parent = domSymbolTree.parent(this);\n      var document = this._ownerDocument;\n\n      if (!parent) {\n        return;\n      }\n\n      if (parent.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n        throw DOMException.create(this._globalObject, [\"Modifications are not allowed for this document\", \"NoModificationAllowedError\"]);\n      }\n\n      if (parent.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n        parent = document.createElementNS(HTML_NS, \"body\");\n      }\n\n      var fragment = parseFragment(markup, parent);\n      var contextObjectParent = domSymbolTree.parent(this);\n\n      contextObjectParent._replace(fragment, this);\n    } // https://w3c.github.io/DOM-Parsing/#dfn-innerhtml\n\n  }, {\n    key: \"innerHTML\",\n    get: function get() {\n      return fragmentSerialization(this, {\n        requireWellFormed: true,\n        globalObject: this._globalObject\n      });\n    },\n    set: function set(markup) {\n      var fragment = parseFragment(markup, this);\n      var contextObject = this;\n\n      if (this.localName === \"template\" && this.namespaceURI === HTML_NS) {\n        contextObject = contextObject._templateContents;\n      }\n\n      contextObject._replaceAll(fragment);\n    }\n  }, {\n    key: \"classList\",\n    get: function get() {\n      if (this._classList === undefined) {\n        this._classList = DOMTokenList.createImpl(this._globalObject, [], {\n          element: this,\n          attributeLocalName: \"class\"\n        });\n      }\n\n      return this._classList;\n    }\n  }, {\n    key: \"scrollWidth\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"clientTop\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"clientLeft\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"clientWidth\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"clientHeight\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"shadowRoot\",\n    get: function get() {\n      var shadow = this._shadowRoot;\n\n      if (shadow === null || shadow.mode === \"closed\") {\n        return null;\n      }\n\n      return shadow;\n    }\n  }]);\n\n  return ElementImpl;\n}(NodeImpl);\n\nmixin(ElementImpl.prototype, NonDocumentTypeChildNode.prototype);\nmixin(ElementImpl.prototype, ParentNodeImpl.prototype);\nmixin(ElementImpl.prototype, ChildNodeImpl.prototype);\nmixin(ElementImpl.prototype, SlotableMixinImpl.prototype);\nElementImpl.prototype.getElementsByTagName = memoizeQuery(function (qualifiedName) {\n  return listOfElementsWithQualifiedName(qualifiedName, this);\n});\nElementImpl.prototype.getElementsByTagNameNS = memoizeQuery(function (namespace, localName) {\n  return listOfElementsWithNamespaceAndLocalName(namespace, localName, this);\n});\nElementImpl.prototype.getElementsByClassName = memoizeQuery(function (classNames) {\n  return listOfElementsWithClassNames(classNames, this);\n});\n\nElementImpl.prototype.matches = function (selectors) {\n  var matcher = addNwsapi(this);\n  return matcher.match(selectors, idlUtils.wrapperForImpl(this));\n};\n\nElementImpl.prototype.webkitMatchesSelector = ElementImpl.prototype.matches;\nmodule.exports = {\n  implementation: ElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/Element-impl.js"],"names":["require","addNwsapi","HTML_NS","mixin","memoizeQuery","idlUtils","NodeImpl","implementation","ParentNodeImpl","ChildNodeImpl","attributes","namedPropertiesWindow","NODE_TYPE","parseFragment","fragmentSerialization","domSymbolTree","DOMException","DOMTokenList","NamedNodeMap","validateNames","asciiLowercase","asciiUppercase","listOfElementsWithQualifiedName","listOfElementsWithNamespaceAndLocalName","listOfElementsWithClassNames","SlotableMixinImpl","NonDocumentTypeChildNode","ShadowRoot","Text","isValidHostElementName","isValidCustomElementName","lookupCEDefinition","attachId","id","elm","doc","_ids","push","detachId","elms","i","length","splice","ElementImpl","globalObject","args","privateData","_initSlotableMixin","_namespaceURI","namespace","_prefix","prefix","_localName","localName","_ceState","ceState","_ceDefinition","ceDefinition","_isValue","isValue","_shadowRoot","_ceReactionQueue","nodeType","ELEMENT_NODE","scrollTop","scrollLeft","_attributeList","_attributesByNameMap","Map","_attributes","createImpl","_globalObject","element","_cachedTagName","nodeAttachedToDocument","getAttributeNS","_ownerDocument","nodeDetachedFromDocument","name","value","oldValue","_modified","elementAttributeModified","_attached","_classList","undefined","attrModified","_attrModifiedSlotableMixin","hasAttributes","attributeNames","attr","getAttributeByName","_value","getAttributeByNameNS","_parsingMode","attribute","newAttr","_createAttribute","appendAttribute","changeAttribute","extracted","validateAndExtract","setAttributeValue","removeAttributeByName","removeAttributeByNameNS","qualifiedName","force","hasAttributeByName","hasAttributeByNameNS","setAttribute","hasAttribute","create","removeAttribute","bottom","height","left","right","top","width","init","namespaceURI","message","definition","disableShadow","shadow","ownerDocument","mode","host","where","node","parentNode","_preInsert","firstChild","nextSibling","_insertAdjacent","data","text","position","context","DOCUMENT_NODE","createElement","fragment","_insert","_append","selectors","matcher","closest","wrapperForImpl","_qualifiedName","childNodesForSerializing","requireWellFormed","markup","parent","document","DOCUMENT_FRAGMENT_NODE","createElementNS","contextObjectParent","_replace","contextObject","_templateContents","_replaceAll","attributeLocalName","prototype","getElementsByTagName","getElementsByTagNameNS","getElementsByClassName","classNames","matches","match","webkitMatchesSelector","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;eACsBA,OAAO,CAAC,sBAAD,C;IAArBC,S,YAAAA,S;;gBACYD,OAAO,CAAC,uBAAD,C;IAAnBE,O,aAAAA,O;;gBACwBF,OAAO,CAAC,aAAD,C;IAA/BG,K,aAAAA,K;IAAOC,Y,aAAAA,Y;;AACf,IAAMC,QAAQ,GAAGL,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,aAAD,CAAP,CAAuBO,cAAxC;;AACA,IAAMC,cAAc,GAAGR,OAAO,CAAC,mBAAD,CAAP,CAA6BO,cAApD;;AACA,IAAME,aAAa,GAAGT,OAAO,CAAC,kBAAD,CAAP,CAA4BO,cAAlD;;AACA,IAAMG,UAAU,GAAGV,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMW,qBAAqB,GAAGX,OAAO,CAAC,4BAAD,CAArC;;AACA,IAAMY,SAAS,GAAGZ,OAAO,CAAC,cAAD,CAAzB;;gBAC0BA,OAAO,CAAC,sBAAD,C;IAAzBa,a,aAAAA,a;;gBAC0Bb,OAAO,CAAC,6BAAD,C;IAAjCc,qB,aAAAA,qB;;gBACkBd,OAAO,CAAC,+BAAD,C;IAAzBe,a,aAAAA,a;;AACR,IAAMC,YAAY,GAAGhB,OAAO,CAAC,gCAAD,CAA5B;;AACA,IAAMiB,YAAY,GAAGjB,OAAO,CAAC,2BAAD,CAA5B;;AACA,IAAMkB,YAAY,GAAGlB,OAAO,CAAC,2BAAD,CAA5B;;AACA,IAAMmB,aAAa,GAAGnB,OAAO,CAAC,2BAAD,CAA7B;;gBAC2CA,OAAO,CAAC,oBAAD,C;IAA1CoB,c,aAAAA,c;IAAgBC,c,aAAAA,c;;gBAEWrB,OAAO,CAAC,SAAD,C;IADlCsB,+B,aAAAA,+B;IAAiCC,uC,aAAAA,uC;IACvCC,4B,aAAAA,4B;;AACF,IAAMC,iBAAiB,GAAGzB,OAAO,CAAC,iBAAD,CAAP,CAA2BO,cAArD;;AACA,IAAMmB,wBAAwB,GAAG1B,OAAO,CAAC,iCAAD,CAAP,CAA2CO,cAA5E;;AACA,IAAMoB,UAAU,GAAG3B,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAM4B,IAAI,GAAG5B,OAAO,CAAC,mBAAD,CAApB;;gBACmCA,OAAO,CAAC,uBAAD,C;IAAlC6B,sB,aAAAA,sB;;iBACiD7B,OAAO,CAAC,4BAAD,C;IAAxD8B,wB,cAAAA,wB;IAA0BC,kB,cAAAA,kB;;AAElC,SAASC,QAAT,CAAkBC,EAAlB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIF,EAAE,IAAIC,GAAN,IAAaC,GAAjB,EAAsB;AACpB,QAAI,CAACA,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAL,EAAmB;AACjBE,MAAAA,GAAG,CAACC,IAAJ,CAASH,EAAT,IAAe,EAAf;AACD;;AACDE,IAAAA,GAAG,CAACC,IAAJ,CAASH,EAAT,EAAaI,IAAb,CAAkBH,GAAlB;AACD;AACF;;AAED,SAASI,QAAT,CAAkBL,EAAlB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,MAAIF,EAAE,IAAIC,GAAN,IAAaC,GAAjB,EAAsB;AACpB,QAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAhB,EAA8B;AAC5B,UAAMM,IAAI,GAAGJ,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAb;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAID,IAAI,CAACC,CAAD,CAAJ,KAAYN,GAAhB,EAAqB;AACnBK,UAAAA,IAAI,CAACG,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACA,YAAEA,CAAF;AACD;AACF;;AACD,UAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACrB,eAAON,GAAG,CAACC,IAAJ,CAASH,EAAT,CAAP;AACD;AACF;AACF;AACF;;IAEKU,W;;;;;AACJ,uBAAYC,YAAZ,EAA0BC,IAA1B,EAAgCC,WAAhC,EAA6C;AAAA;;AAAA;;AAC3C,8BAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;;AAEA,UAAKC,kBAAL;;AAEA,UAAKC,aAAL,GAAqBF,WAAW,CAACG,SAAjC;AACA,UAAKC,OAAL,GAAeJ,WAAW,CAACK,MAA3B;AACA,UAAKC,UAAL,GAAkBN,WAAW,CAACO,SAA9B;AACA,UAAKC,QAAL,GAAgBR,WAAW,CAACS,OAA5B;AACA,UAAKC,aAAL,GAAqBV,WAAW,CAACW,YAAjC;AACA,UAAKC,QAAL,GAAgBZ,WAAW,CAACa,OAA5B;AAEA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,gBAAL,GAAwB,EAAxB;AAEA,UAAKC,QAAL,GAAgBlD,SAAS,CAACmD,YAA1B;AACA,UAAKC,SAAL,GAAiB,CAAjB;AACA,UAAKC,UAAL,GAAkB,CAAlB;AAEA,UAAKC,cAAL,GAAsB,EAAtB,CAnB2C,CAoB3C;;AACA,UAAKC,oBAAL,GAA4B,IAAIC,GAAJ,EAA5B;AACA,UAAKC,WAAL,GAAmBnD,YAAY,CAACoD,UAAb,CAAwB,MAAKC,aAA7B,EAA4C,EAA5C,EAAgD;AACjEC,MAAAA,OAAO;AAD0D,KAAhD,CAAnB;AAIA,UAAKC,cAAL,GAAsB,IAAtB;AA1B2C;AA2B5C;;;;8BAES;AACR9D,MAAAA,qBAAqB,CAAC+D,sBAAtB,CAA6C,IAA7C;AAEA,UAAMzC,EAAE,GAAG,KAAK0C,cAAL,CAAoB,IAApB,EAA0B,IAA1B,CAAX;;AACA,UAAI1C,EAAJ,EAAQ;AACND,QAAAA,QAAQ,CAACC,EAAD,EAAK,IAAL,EAAW,KAAK2C,cAAhB,CAAR;AACD;;AAED;AACD;;;8BAES;AACR;;AAEAjE,MAAAA,qBAAqB,CAACkE,wBAAtB,CAA+C,IAA/C;AAEA,UAAM5C,EAAE,GAAG,KAAK0C,cAAL,CAAoB,IAApB,EAA0B,IAA1B,CAAX;;AACA,UAAI1C,EAAJ,EAAQ;AACNK,QAAAA,QAAQ,CAACL,EAAD,EAAK,IAAL,EAAW,KAAK2C,cAAhB,CAAR;AACD;AACF;;;kCAEaE,I,EAAMC,K,EAAOC,Q,EAAU;AACnC,WAAKC,SAAL;;AACAtE,MAAAA,qBAAqB,CAACuE,wBAAtB,CAA+C,IAA/C,EAAqDJ,IAArD,EAA2DC,KAA3D,EAAkEC,QAAlE;;AAEA,UAAIF,IAAI,KAAK,IAAT,IAAiB,KAAKK,SAA1B,EAAqC;AACnC,YAAMhD,GAAG,GAAG,KAAKyC,cAAjB;AACAtC,QAAAA,QAAQ,CAAC0C,QAAD,EAAW,IAAX,EAAiB7C,GAAjB,CAAR;AACAH,QAAAA,QAAQ,CAAC+C,KAAD,EAAQ,IAAR,EAAc5C,GAAd,CAAR;AACD,OARkC,CAUnC;;;AACA,UAAI2C,IAAI,KAAK,OAAT,IAAoB,KAAKM,UAAL,KAAoBC,SAA5C,EAAuD;AACrD,aAAKD,UAAL,CAAgBE,YAAhB;AACD;;AAED,WAAKC,0BAAL,CAAgCT,IAAhC,EAAsCC,KAAtC,EAA6CC,QAA7C;AACD;;;oCAiGe;AACd,aAAOtE,UAAU,CAAC8E,aAAX,CAAyB,IAAzB,CAAP;AACD;;;wCAEmB;AAClB,aAAO9E,UAAU,CAAC+E,cAAX,CAA0B,IAA1B,CAAP;AACD;;;iCAEYX,I,EAAM;AACjB,UAAMY,IAAI,GAAGhF,UAAU,CAACiF,kBAAX,CAA8B,IAA9B,EAAoCb,IAApC,CAAb;;AACA,UAAI,CAACY,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AACD,aAAOA,IAAI,CAACE,MAAZ;AACD;;;mCAEc3C,S,EAAWI,S,EAAW;AACnC,UAAMqC,IAAI,GAAGhF,UAAU,CAACmF,oBAAX,CAAgC,IAAhC,EAAsC5C,SAAtC,EAAiDI,SAAjD,CAAb;;AACA,UAAI,CAACqC,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AACD,aAAOA,IAAI,CAACE,MAAZ;AACD;;;iCAEYd,I,EAAMC,K,EAAO;AACxB5D,MAAAA,aAAa,CAAC2D,IAAd,CAAmB,KAAKP,aAAxB,EAAuCO,IAAvC;;AAEA,UAAI,KAAK9B,aAAL,KAAuB9C,OAAvB,IAAkC,KAAK0E,cAAL,CAAoBkB,YAApB,KAAqC,MAA3E,EAAmF;AACjFhB,QAAAA,IAAI,GAAG1D,cAAc,CAAC0D,IAAD,CAArB;AACD;;AAED,UAAMiB,SAAS,GAAGrF,UAAU,CAACiF,kBAAX,CAA8B,IAA9B,EAAoCb,IAApC,CAAlB;;AAEA,UAAIiB,SAAS,KAAK,IAAlB,EAAwB;AACtB,YAAMC,OAAO,GAAG,KAAKpB,cAAL,CAAoBqB,gBAApB,CAAqC;AACnD5C,UAAAA,SAAS,EAAEyB,IADwC;AAEnDC,UAAAA,KAAK,EAALA;AAFmD,SAArC,CAAhB;;AAIArE,QAAAA,UAAU,CAACwF,eAAX,CAA2B,IAA3B,EAAiCF,OAAjC;AACA;AACD;;AAEDtF,MAAAA,UAAU,CAACyF,eAAX,CAA2B,IAA3B,EAAiCJ,SAAjC,EAA4ChB,KAA5C;AACD;;;mCAEc9B,S,EAAW6B,I,EAAMC,K,EAAO;AACrC,UAAMqB,SAAS,GAAGjF,aAAa,CAACkF,kBAAd,CAAiC,KAAK9B,aAAtC,EAAqDtB,SAArD,EAAgE6B,IAAhE,CAAlB,CADqC,CAGrC;AACA;;AACAC,MAAAA,KAAK,aAAMA,KAAN,CAAL;AAEArE,MAAAA,UAAU,CAAC4F,iBAAX,CAA6B,IAA7B,EAAmCF,SAAS,CAAC/C,SAA7C,EAAwD0B,KAAxD,EAA+DqB,SAAS,CAACjD,MAAzE,EAAiFiD,SAAS,CAACnD,SAA3F;AACD;;;oCAEe6B,I,EAAM;AACpBpE,MAAAA,UAAU,CAAC6F,qBAAX,CAAiC,IAAjC,EAAuCzB,IAAvC;AACD;;;sCAEiB7B,S,EAAWI,S,EAAW;AACtC3C,MAAAA,UAAU,CAAC8F,uBAAX,CAAmC,IAAnC,EAAyCvD,SAAzC,EAAoDI,SAApD;AACD;;;oCAEeoD,a,EAAeC,K,EAAO;AACpCvF,MAAAA,aAAa,CAAC2D,IAAd,CAAmB,KAAKP,aAAxB,EAAuCkC,aAAvC;;AAEA,UAAI,KAAKzD,aAAL,KAAuB9C,OAAvB,IAAkC,KAAK0E,cAAL,CAAoBkB,YAApB,KAAqC,MAA3E,EAAmF;AACjFW,QAAAA,aAAa,GAAGrF,cAAc,CAACqF,aAAD,CAA9B;AACD;;AAED,UAAMV,SAAS,GAAGrF,UAAU,CAACiF,kBAAX,CAA8B,IAA9B,EAAoCc,aAApC,CAAlB;;AAEA,UAAIV,SAAS,KAAK,IAAlB,EAAwB;AACtB,YAAIW,KAAK,KAAKrB,SAAV,IAAuBqB,KAAK,KAAK,IAArC,EAA2C;AACzC,cAAMV,OAAO,GAAG,KAAKpB,cAAL,CAAoBqB,gBAApB,CAAqC;AACnD5C,YAAAA,SAAS,EAAEoD,aADwC;AAEnD1B,YAAAA,KAAK,EAAE;AAF4C,WAArC,CAAhB;;AAIArE,UAAAA,UAAU,CAACwF,eAAX,CAA2B,IAA3B,EAAiCF,OAAjC;AACA,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD;;AAED,UAAIU,KAAK,KAAKrB,SAAV,IAAuBqB,KAAK,KAAK,KAArC,EAA4C;AAC1ChG,QAAAA,UAAU,CAAC6F,qBAAX,CAAiC,IAAjC,EAAuCE,aAAvC;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;;iCAEY3B,I,EAAM;AACjB,UAAI,KAAK9B,aAAL,KAAuB9C,OAAvB,IAAkC,KAAK0E,cAAL,CAAoBkB,YAApB,KAAqC,MAA3E,EAAmF;AACjFhB,QAAAA,IAAI,GAAG1D,cAAc,CAAC0D,IAAD,CAArB;AACD;;AAED,aAAOpE,UAAU,CAACiG,kBAAX,CAA8B,IAA9B,EAAoC7B,IAApC,CAAP;AACD;;;mCAEc7B,S,EAAWI,S,EAAW;AACnC,UAAIJ,SAAS,KAAK,EAAlB,EAAsB;AACpBA,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,aAAOvC,UAAU,CAACkG,oBAAX,CAAgC,IAAhC,EAAsC3D,SAAtC,EAAiDI,SAAjD,CAAP;AACD;;;qCAEgByB,I,EAAM;AACrB,aAAOpE,UAAU,CAACiF,kBAAX,CAA8B,IAA9B,EAAoCb,IAApC,CAAP;AACD;;;uCAEkB7B,S,EAAWI,S,EAAW;AACvC,aAAO3C,UAAU,CAACmF,oBAAX,CAAgC,IAAhC,EAAsC5C,SAAtC,EAAiDI,SAAjD,CAAP;AACD;;;qCAEgBqC,I,EAAM;AACrB;AACA,aAAOhF,UAAU,CAACmG,YAAX,CAAwB,IAAxB,EAA8BnB,IAA9B,CAAP;AACD;;;uCAEkBA,I,EAAM;AACvB;AACA,aAAOhF,UAAU,CAACmG,YAAX,CAAwB,IAAxB,EAA8BnB,IAA9B,CAAP;AACD;;;wCAEmBA,I,EAAM;AACxB;AACA,UAAI,CAAChF,UAAU,CAACoG,YAAX,CAAwB,IAAxB,EAA8BpB,IAA9B,CAAL,EAA0C;AACxC,cAAM1E,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,mDAD4C,EAE5C,eAF4C,CAAxC,CAAN;AAID,OAPuB,CASxB;;;AACA7D,MAAAA,UAAU,CAACsG,eAAX,CAA2B,IAA3B,EAAiCtB,IAAjC;AAEA,aAAOA,IAAP;AACD;;;4CAEuB;AACtB,aAAO;AACLuB,QAAAA,MAAM,EAAE,CADH;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILC,QAAAA,KAAK,EAAE,CAJF;AAKLC,QAAAA,GAAG,EAAE,CALA;AAMLC,QAAAA,KAAK,EAAE;AANF,OAAP;AAQD;;;qCAEgB;AACf,aAAO,EAAP;AACD;;;AA0BD;iCACaC,I,EAAM;AAAA,UACT3C,cADS,GAC+C,IAD/C,CACTA,cADS;AAAA,UACO5B,aADP,GAC+C,IAD/C,CACOA,aADP;AAAA,UACsBI,UADtB,GAC+C,IAD/C,CACsBA,UADtB;AAAA,UACkCM,QADlC,GAC+C,IAD/C,CACkCA,QADlC;;AAGjB,UAAI,KAAK8D,YAAL,KAAsBtH,OAA1B,EAAmC;AACjC,cAAMc,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,6FAD4C,EAE5C,mBAF4C,CAAxC,CAAN;AAID;;AAED,UAAI,CAAC1C,sBAAsB,CAACuB,UAAD,CAAvB,IAAuC,CAACtB,wBAAwB,CAACsB,UAAD,CAApE,EAAkF;AAChF,YAAMqE,OAAO,GAAG,0FACd,8CADF;AAEA,cAAMzG,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAACkD,OAAD,EAAU,mBAAV,CAAxC,CAAN;AACD;;AAED,UAAI3F,wBAAwB,CAACsB,UAAD,CAAxB,IAAwCM,QAA5C,EAAsD;AACpD,YAAMgE,UAAU,GAAG3F,kBAAkB,CAAC6C,cAAD,EAAiB5B,aAAjB,EAAgCI,UAAhC,EAA4CM,QAA5C,CAArC;;AAEA,YAAIgE,UAAU,IAAIA,UAAU,CAACC,aAA7B,EAA4C;AAC1C,gBAAM3G,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,uEAD4C,EAE5C,mBAF4C,CAAxC,CAAN;AAID;AACF;;AAED,UAAI,KAAKX,WAAL,KAAqB,IAAzB,EAA+B;AAC7B,cAAM5C,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,4EAD4C,EAE5C,mBAF4C,CAAxC,CAAN;AAID;;AAED,UAAMqD,MAAM,GAAGjG,UAAU,CAAC2C,UAAX,CAAsB,KAAKC,aAA3B,EAA0C,EAA1C,EAA8C;AAC3DsD,QAAAA,aAAa,EAAE,KAAKA,aADuC;AAE3DC,QAAAA,IAAI,EAAEP,IAAI,CAACO,IAFgD;AAG3DC,QAAAA,IAAI,EAAE;AAHqD,OAA9C,CAAf;AAMA,WAAKnE,WAAL,GAAmBgE,MAAnB;AAEA,aAAOA,MAAP;AACD,K,CAED;;;;AAWA;oCACgBpD,O,EAASwD,K,EAAOC,I,EAAM;AACpCD,MAAAA,KAAK,GAAG5G,cAAc,CAAC4G,KAAD,CAAtB;;AAEA,UAAIA,KAAK,KAAK,aAAd,EAA6B;AAC3B,YAAIxD,OAAO,CAAC0D,UAAR,KAAuB,IAA3B,EAAiC;AAC/B,iBAAO,IAAP;AACD;;AACD,eAAO1D,OAAO,CAAC0D,UAAR,CAAmBC,UAAnB,CAA8BF,IAA9B,EAAoCzD,OAApC,CAAP;AACD;;AACD,UAAIwD,KAAK,KAAK,YAAd,EAA4B;AAC1B,eAAOxD,OAAO,CAAC2D,UAAR,CAAmBF,IAAnB,EAAyBzD,OAAO,CAAC4D,UAAjC,CAAP;AACD;;AACD,UAAIJ,KAAK,KAAK,WAAd,EAA2B;AACzB,eAAOxD,OAAO,CAAC2D,UAAR,CAAmBF,IAAnB,EAAyB,IAAzB,CAAP;AACD;;AACD,UAAID,KAAK,KAAK,UAAd,EAA0B;AACxB,YAAIxD,OAAO,CAAC0D,UAAR,KAAuB,IAA3B,EAAiC;AAC/B,iBAAO,IAAP;AACD;;AACD,eAAO1D,OAAO,CAAC0D,UAAR,CAAmBC,UAAnB,CAA8BF,IAA9B,EAAoCzD,OAAO,CAAC6D,WAA5C,CAAP;AACD;;AAED,YAAMrH,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,8EAD4C,EAE5C,aAF4C,CAAxC,CAAN;AAID;;;0CAEqByD,K,EAAOxD,O,EAAS;AACpC,aAAO,KAAK8D,eAAL,CAAqB,IAArB,EAA2BN,KAA3B,EAAkCxD,OAAlC,CAAP;AACD;;;uCAEkBwD,K,EAAOO,I,EAAM;AAC9B,UAAMC,IAAI,GAAG5G,IAAI,CAAC0C,UAAL,CAAgB,KAAKC,aAArB,EAAoC,EAApC,EAAwC;AAAEgE,QAAAA,IAAI,EAAJA,IAAF;AAAQV,QAAAA,aAAa,EAAE,KAAKjD;AAA5B,OAAxC,CAAb;;AAEA,WAAK0D,eAAL,CAAqB,IAArB,EAA2BN,KAA3B,EAAkCQ,IAAlC;AACD,K,CAED;;;;uCACmBC,Q,EAAUD,I,EAAM;AACjCC,MAAAA,QAAQ,GAAGrH,cAAc,CAACqH,QAAD,CAAzB;AAEA,UAAIC,OAAJ;;AACA,cAAQD,QAAR;AACE,aAAK,aAAL;AACA,aAAK,UAAL;AAAiB;AACfC,YAAAA,OAAO,GAAG,KAAKR,UAAf;;AACA,gBAAIQ,OAAO,KAAK,IAAZ,IAAoBA,OAAO,CAAC5E,QAAR,KAAqBlD,SAAS,CAAC+H,aAAvD,EAAsE;AACpE,oBAAM3H,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,iFAD4C,EAE5C,4BAF4C,CAAxC,CAAN;AAID;;AACD;AACD;;AACD,aAAK,YAAL;AACA,aAAK,WAAL;AAAkB;AAChBmE,YAAAA,OAAO,GAAG,IAAV;AACA;AACD;;AACD;AAAS;AACP,kBAAM1H,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,8EAD4C,EAE5C,aAF4C,CAAxC,CAAN;AAID;AAtBH;;AAyBA,UACEmE,OAAO,CAAC5E,QAAR,KAAqBlD,SAAS,CAACmD,YAA/B,IAEE2E,OAAO,CAAC9D,cAAR,CAAuBkB,YAAvB,KAAwC,MAAxC,IACA4C,OAAO,CAACtF,UAAR,KAAuB,MADvB,IAEAsF,OAAO,CAAC1F,aAAR,KAA0B9C,OAL9B,EAOE;AACAwI,QAAAA,OAAO,GAAGA,OAAO,CAAC9D,cAAR,CAAuBgE,aAAvB,CAAqC,MAArC,CAAV;AACD;;AAED,UAAMC,QAAQ,GAAGhI,aAAa,CAAC2H,IAAD,EAAOE,OAAP,CAA9B;;AAEA,cAAQD,QAAR;AACE,aAAK,aAAL;AAAoB;AAClB,iBAAKP,UAAL,CAAgBY,OAAhB,CAAwBD,QAAxB,EAAkC,IAAlC;;AACA;AACD;;AACD,aAAK,YAAL;AAAmB;AACjB,iBAAKC,OAAL,CAAaD,QAAb,EAAuB,KAAKT,UAA5B;;AACA;AACD;;AACD,aAAK,WAAL;AAAkB;AAChB,iBAAKW,OAAL,CAAaF,QAAb;;AACA;AACD;;AACD,aAAK,UAAL;AAAiB;AACf,iBAAKX,UAAL,CAAgBY,OAAhB,CAAwBD,QAAxB,EAAkC,KAAKR,WAAvC;;AACA;AACD;AAhBH;AAkBD;;;4BAEOW,S,EAAW;AACjB,UAAMC,OAAO,GAAGhJ,SAAS,CAAC,IAAD,CAAzB;AACA,aAAOgJ,OAAO,CAACC,OAAR,CAAgBF,SAAhB,EAA2B3I,QAAQ,CAAC8I,cAAT,CAAwB,IAAxB,CAA3B,CAAP;AACD;;;wBArbkB;AACjB,aAAO,KAAKnG,aAAZ;AACD;;;wBACY;AACX,aAAO,KAAKE,OAAZ;AACD;;;wBACe;AACd,aAAO,KAAKE,UAAZ;AACD;;;wBACoB;AACnB,aAAO,KAAKF,OAAL,KAAiB,IAAjB,GAAwB,KAAKA,OAAL,GAAe,GAAf,GAAqB,KAAKE,UAAlD,GAA+D,KAAKA,UAA3E;AACD;;;wBACa;AACZ;AACA;AACA;AACA,UAAI,KAAKqB,cAAL,KAAwB,IAA5B,EAAkC;AAChC,YAAI,KAAK+C,YAAL,KAAsBtH,OAAtB,IAAiC,KAAK0E,cAAL,CAAoBkB,YAApB,KAAqC,MAA1E,EAAkF;AAChF,eAAKrB,cAAL,GAAsBpD,cAAc,CAAC,KAAK+H,cAAN,CAApC;AACD,SAFD,MAEO;AACL,eAAK3E,cAAL,GAAsB,KAAK2E,cAA3B;AACD;AACF;;AACD,aAAO,KAAK3E,cAAZ;AACD;;;wBAEgB;AACf,aAAO,KAAKJ,WAAZ;AACD,K,CAED;;;;wBACgB;AACd;AACA;AACA;AACA;AACA;AACA,aAAOvD,qBAAqB,CAAC;AAAEuI,QAAAA,wBAAwB,EAAE,CAAC,IAAD,CAA5B;AAAoCzE,QAAAA,cAAc,EAAE,KAAKA;AAAzD,OAAD,EAA4E;AACtG0E,QAAAA,iBAAiB,EAAE,IADmF;AAEtG1G,QAAAA,YAAY,EAAE,KAAK2B;AAFmF,OAA5E,CAA5B;AAID,K;sBACagF,M,EAAQ;AACpB,UAAIC,MAAM,GAAGzI,aAAa,CAACyI,MAAd,CAAqB,IAArB,CAAb;AACA,UAAMC,QAAQ,GAAG,KAAK7E,cAAtB;;AAEA,UAAI,CAAC4E,MAAL,EAAa;AACX;AACD;;AAED,UAAIA,MAAM,CAAC1F,QAAP,KAAoBlD,SAAS,CAAC+H,aAAlC,EAAiD;AAC/C,cAAM3H,YAAY,CAAC+F,MAAb,CAAoB,KAAKxC,aAAzB,EAAwC,CAC5C,iDAD4C,EAE5C,4BAF4C,CAAxC,CAAN;AAID;;AAED,UAAIiF,MAAM,CAAC1F,QAAP,KAAoBlD,SAAS,CAAC8I,sBAAlC,EAA0D;AACxDF,QAAAA,MAAM,GAAGC,QAAQ,CAACE,eAAT,CAAyBzJ,OAAzB,EAAkC,MAAlC,CAAT;AACD;;AAED,UAAM2I,QAAQ,GAAGhI,aAAa,CAAC0I,MAAD,EAASC,MAAT,CAA9B;AAEA,UAAMI,mBAAmB,GAAG7I,aAAa,CAACyI,MAAd,CAAqB,IAArB,CAA5B;;AACAI,MAAAA,mBAAmB,CAACC,QAApB,CAA6BhB,QAA7B,EAAuC,IAAvC;AACD,K,CAED;;;;wBACgB;AACd,aAAO/H,qBAAqB,CAAC,IAAD,EAAO;AACjCwI,QAAAA,iBAAiB,EAAE,IADc;AAEjC1G,QAAAA,YAAY,EAAE,KAAK2B;AAFc,OAAP,CAA5B;AAID,K;sBACagF,M,EAAQ;AACpB,UAAMV,QAAQ,GAAGhI,aAAa,CAAC0I,MAAD,EAAS,IAAT,CAA9B;AAEA,UAAIO,aAAa,GAAG,IAApB;;AACA,UAAI,KAAKzG,SAAL,KAAmB,UAAnB,IAAiC,KAAKmE,YAAL,KAAsBtH,OAA3D,EAAoE;AAClE4J,QAAAA,aAAa,GAAGA,aAAa,CAACC,iBAA9B;AACD;;AAEDD,MAAAA,aAAa,CAACE,WAAd,CAA0BnB,QAA1B;AACD;;;wBAEe;AACd,UAAI,KAAKzD,UAAL,KAAoBC,SAAxB,EAAmC;AACjC,aAAKD,UAAL,GAAkBnE,YAAY,CAACqD,UAAb,CAAwB,KAAKC,aAA7B,EAA4C,EAA5C,EAAgD;AAChEC,UAAAA,OAAO,EAAE,IADuD;AAEhEyF,UAAAA,kBAAkB,EAAE;AAF4C,SAAhD,CAAlB;AAID;;AACD,aAAO,KAAK7E,UAAZ;AACD;;;wBA8JiB;AAChB,aAAO,CAAP;AACD;;;wBAEkB;AACjB,aAAO,CAAP;AACD;;;wBAEe;AACd,aAAO,CAAP;AACD;;;wBAEgB;AACf,aAAO,CAAP;AACD;;;wBAEiB;AAChB,aAAO,CAAP;AACD;;;wBAEkB;AACjB,aAAO,CAAP;AACD;;;wBAiDgB;AACf,UAAMwC,MAAM,GAAG,KAAKhE,WAApB;;AAEA,UAAIgE,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,IAAP,KAAgB,QAAvC,EAAiD;AAC/C,eAAO,IAAP;AACD;;AAED,aAAOF,MAAP;AACD;;;;EAhZuBtH,Q;;AA8f1BH,KAAK,CAACwC,WAAW,CAACuH,SAAb,EAAwBxI,wBAAwB,CAACwI,SAAjD,CAAL;AACA/J,KAAK,CAACwC,WAAW,CAACuH,SAAb,EAAwB1J,cAAc,CAAC0J,SAAvC,CAAL;AACA/J,KAAK,CAACwC,WAAW,CAACuH,SAAb,EAAwBzJ,aAAa,CAACyJ,SAAtC,CAAL;AACA/J,KAAK,CAACwC,WAAW,CAACuH,SAAb,EAAwBzI,iBAAiB,CAACyI,SAA1C,CAAL;AAEAvH,WAAW,CAACuH,SAAZ,CAAsBC,oBAAtB,GAA6C/J,YAAY,CAAC,UAAUqG,aAAV,EAAyB;AACjF,SAAOnF,+BAA+B,CAACmF,aAAD,EAAgB,IAAhB,CAAtC;AACD,CAFwD,CAAzD;AAIA9D,WAAW,CAACuH,SAAZ,CAAsBE,sBAAtB,GAA+ChK,YAAY,CAAC,UAAU6C,SAAV,EAAqBI,SAArB,EAAgC;AAC1F,SAAO9B,uCAAuC,CAAC0B,SAAD,EAAYI,SAAZ,EAAuB,IAAvB,CAA9C;AACD,CAF0D,CAA3D;AAIAV,WAAW,CAACuH,SAAZ,CAAsBG,sBAAtB,GAA+CjK,YAAY,CAAC,UAAUkK,UAAV,EAAsB;AAChF,SAAO9I,4BAA4B,CAAC8I,UAAD,EAAa,IAAb,CAAnC;AACD,CAF0D,CAA3D;;AAIA3H,WAAW,CAACuH,SAAZ,CAAsBK,OAAtB,GAAgC,UAAUvB,SAAV,EAAqB;AACnD,MAAMC,OAAO,GAAGhJ,SAAS,CAAC,IAAD,CAAzB;AAEA,SAAOgJ,OAAO,CAACuB,KAAR,CAAcxB,SAAd,EAAyB3I,QAAQ,CAAC8I,cAAT,CAAwB,IAAxB,CAAzB,CAAP;AACD,CAJD;;AAMAxG,WAAW,CAACuH,SAAZ,CAAsBO,qBAAtB,GAA8C9H,WAAW,CAACuH,SAAZ,CAAsBK,OAApE;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfpK,EAAAA,cAAc,EAAEoC;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { HTML_NS } = require(\"../helpers/namespaces\");\nconst { mixin, memoizeQuery } = require(\"../../utils\");\nconst idlUtils = require(\"../generated/utils\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\nconst ChildNodeImpl = require(\"./ChildNode-impl\").implementation;\nconst attributes = require(\"../attributes\");\nconst namedPropertiesWindow = require(\"../named-properties-window\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { parseFragment } = require(\"../../browser/parser\");\nconst { fragmentSerialization } = require(\"../domparsing/serialization\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\nconst NamedNodeMap = require(\"../generated/NamedNodeMap\");\nconst validateNames = require(\"../helpers/validate-names\");\nconst { asciiLowercase, asciiUppercase } = require(\"../helpers/strings\");\nconst { listOfElementsWithQualifiedName, listOfElementsWithNamespaceAndLocalName,\n  listOfElementsWithClassNames } = require(\"../node\");\nconst SlotableMixinImpl = require(\"./Slotable-impl\").implementation;\nconst NonDocumentTypeChildNode = require(\"./NonDocumentTypeChildNode-impl\").implementation;\nconst ShadowRoot = require(\"../generated/ShadowRoot\");\nconst Text = require(\"../generated/Text\");\nconst { isValidHostElementName } = require(\"../helpers/shadow-dom\");\nconst { isValidCustomElementName, lookupCEDefinition } = require(\"../helpers/custom-elements\");\n\nfunction attachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (!doc._ids[id]) {\n      doc._ids[id] = [];\n    }\n    doc._ids[id].push(elm);\n  }\n}\n\nfunction detachId(id, elm, doc) {\n  if (id && elm && doc) {\n    if (doc._ids && doc._ids[id]) {\n      const elms = doc._ids[id];\n      for (let i = 0; i < elms.length; i++) {\n        if (elms[i] === elm) {\n          elms.splice(i, 1);\n          --i;\n        }\n      }\n      if (elms.length === 0) {\n        delete doc._ids[id];\n      }\n    }\n  }\n}\n\nclass ElementImpl extends NodeImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._initSlotableMixin();\n\n    this._namespaceURI = privateData.namespace;\n    this._prefix = privateData.prefix;\n    this._localName = privateData.localName;\n    this._ceState = privateData.ceState;\n    this._ceDefinition = privateData.ceDefinition;\n    this._isValue = privateData.isValue;\n\n    this._shadowRoot = null;\n    this._ceReactionQueue = [];\n\n    this.nodeType = NODE_TYPE.ELEMENT_NODE;\n    this.scrollTop = 0;\n    this.scrollLeft = 0;\n\n    this._attributeList = [];\n    // Used for caching.\n    this._attributesByNameMap = new Map();\n    this._attributes = NamedNodeMap.createImpl(this._globalObject, [], {\n      element: this\n    });\n\n    this._cachedTagName = null;\n  }\n\n  _attach() {\n    namedPropertiesWindow.nodeAttachedToDocument(this);\n\n    const id = this.getAttributeNS(null, \"id\");\n    if (id) {\n      attachId(id, this, this._ownerDocument);\n    }\n\n    super._attach();\n  }\n\n  _detach() {\n    super._detach();\n\n    namedPropertiesWindow.nodeDetachedFromDocument(this);\n\n    const id = this.getAttributeNS(null, \"id\");\n    if (id) {\n      detachId(id, this, this._ownerDocument);\n    }\n  }\n\n  _attrModified(name, value, oldValue) {\n    this._modified();\n    namedPropertiesWindow.elementAttributeModified(this, name, value, oldValue);\n\n    if (name === \"id\" && this._attached) {\n      const doc = this._ownerDocument;\n      detachId(oldValue, this, doc);\n      attachId(value, this, doc);\n    }\n\n    // update classList\n    if (name === \"class\" && this._classList !== undefined) {\n      this._classList.attrModified();\n    }\n\n    this._attrModifiedSlotableMixin(name, value, oldValue);\n  }\n\n  get namespaceURI() {\n    return this._namespaceURI;\n  }\n  get prefix() {\n    return this._prefix;\n  }\n  get localName() {\n    return this._localName;\n  }\n  get _qualifiedName() {\n    return this._prefix !== null ? this._prefix + \":\" + this._localName : this._localName;\n  }\n  get tagName() {\n    // This getter can be a hotpath in getComputedStyle.\n    // All these are invariants during the instance lifetime so we can safely cache the computed tagName.\n    // We could create it during construction but since we already identified this as potentially slow we do it lazily.\n    if (this._cachedTagName === null) {\n      if (this.namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n        this._cachedTagName = asciiUppercase(this._qualifiedName);\n      } else {\n        this._cachedTagName = this._qualifiedName;\n      }\n    }\n    return this._cachedTagName;\n  }\n\n  get attributes() {\n    return this._attributes;\n  }\n\n  // https://w3c.github.io/DOM-Parsing/#dom-element-outerhtml\n  get outerHTML() {\n    // TODO: maybe parse5 can give us a hook where it serializes the node itself too:\n    // https://github.com/inikulin/parse5/issues/230\n    // Alternatively, if we can create a virtual node in domSymbolTree, that'd also work.\n    // It's currently prevented by the fact that a node can't be duplicated in the same tree.\n    // Then we could get rid of all the code for childNodesForSerializing.\n    return fragmentSerialization({ childNodesForSerializing: [this], _ownerDocument: this._ownerDocument }, {\n      requireWellFormed: true,\n      globalObject: this._globalObject\n    });\n  }\n  set outerHTML(markup) {\n    let parent = domSymbolTree.parent(this);\n    const document = this._ownerDocument;\n\n    if (!parent) {\n      return;\n    }\n\n    if (parent.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n      throw DOMException.create(this._globalObject, [\n        \"Modifications are not allowed for this document\",\n        \"NoModificationAllowedError\"\n      ]);\n    }\n\n    if (parent.nodeType === NODE_TYPE.DOCUMENT_FRAGMENT_NODE) {\n      parent = document.createElementNS(HTML_NS, \"body\");\n    }\n\n    const fragment = parseFragment(markup, parent);\n\n    const contextObjectParent = domSymbolTree.parent(this);\n    contextObjectParent._replace(fragment, this);\n  }\n\n  // https://w3c.github.io/DOM-Parsing/#dfn-innerhtml\n  get innerHTML() {\n    return fragmentSerialization(this, {\n      requireWellFormed: true,\n      globalObject: this._globalObject\n    });\n  }\n  set innerHTML(markup) {\n    const fragment = parseFragment(markup, this);\n\n    let contextObject = this;\n    if (this.localName === \"template\" && this.namespaceURI === HTML_NS) {\n      contextObject = contextObject._templateContents;\n    }\n\n    contextObject._replaceAll(fragment);\n  }\n\n  get classList() {\n    if (this._classList === undefined) {\n      this._classList = DOMTokenList.createImpl(this._globalObject, [], {\n        element: this,\n        attributeLocalName: \"class\"\n      });\n    }\n    return this._classList;\n  }\n\n  hasAttributes() {\n    return attributes.hasAttributes(this);\n  }\n\n  getAttributeNames() {\n    return attributes.attributeNames(this);\n  }\n\n  getAttribute(name) {\n    const attr = attributes.getAttributeByName(this, name);\n    if (!attr) {\n      return null;\n    }\n    return attr._value;\n  }\n\n  getAttributeNS(namespace, localName) {\n    const attr = attributes.getAttributeByNameNS(this, namespace, localName);\n    if (!attr) {\n      return null;\n    }\n    return attr._value;\n  }\n\n  setAttribute(name, value) {\n    validateNames.name(this._globalObject, name);\n\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    const attribute = attributes.getAttributeByName(this, name);\n\n    if (attribute === null) {\n      const newAttr = this._ownerDocument._createAttribute({\n        localName: name,\n        value\n      });\n      attributes.appendAttribute(this, newAttr);\n      return;\n    }\n\n    attributes.changeAttribute(this, attribute, value);\n  }\n\n  setAttributeNS(namespace, name, value) {\n    const extracted = validateNames.validateAndExtract(this._globalObject, namespace, name);\n\n    // Because of widespread use of this method internally, e.g. to manually implement attribute/content reflection, we\n    // centralize the conversion to a string here, so that all call sites don't have to do it.\n    value = `${value}`;\n\n    attributes.setAttributeValue(this, extracted.localName, value, extracted.prefix, extracted.namespace);\n  }\n\n  removeAttribute(name) {\n    attributes.removeAttributeByName(this, name);\n  }\n\n  removeAttributeNS(namespace, localName) {\n    attributes.removeAttributeByNameNS(this, namespace, localName);\n  }\n\n  toggleAttribute(qualifiedName, force) {\n    validateNames.name(this._globalObject, qualifiedName);\n\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      qualifiedName = asciiLowercase(qualifiedName);\n    }\n\n    const attribute = attributes.getAttributeByName(this, qualifiedName);\n\n    if (attribute === null) {\n      if (force === undefined || force === true) {\n        const newAttr = this._ownerDocument._createAttribute({\n          localName: qualifiedName,\n          value: \"\"\n        });\n        attributes.appendAttribute(this, newAttr);\n        return true;\n      }\n      return false;\n    }\n\n    if (force === undefined || force === false) {\n      attributes.removeAttributeByName(this, qualifiedName);\n      return false;\n    }\n\n    return true;\n  }\n\n  hasAttribute(name) {\n    if (this._namespaceURI === HTML_NS && this._ownerDocument._parsingMode === \"html\") {\n      name = asciiLowercase(name);\n    }\n\n    return attributes.hasAttributeByName(this, name);\n  }\n\n  hasAttributeNS(namespace, localName) {\n    if (namespace === \"\") {\n      namespace = null;\n    }\n\n    return attributes.hasAttributeByNameNS(this, namespace, localName);\n  }\n\n  getAttributeNode(name) {\n    return attributes.getAttributeByName(this, name);\n  }\n\n  getAttributeNodeNS(namespace, localName) {\n    return attributes.getAttributeByNameNS(this, namespace, localName);\n  }\n\n  setAttributeNode(attr) {\n    // eslint-disable-next-line no-restricted-properties\n    return attributes.setAttribute(this, attr);\n  }\n\n  setAttributeNodeNS(attr) {\n    // eslint-disable-next-line no-restricted-properties\n    return attributes.setAttribute(this, attr);\n  }\n\n  removeAttributeNode(attr) {\n    // eslint-disable-next-line no-restricted-properties\n    if (!attributes.hasAttribute(this, attr)) {\n      throw DOMException.create(this._globalObject, [\n        \"Tried to remove an attribute that was not present\",\n        \"NotFoundError\"\n      ]);\n    }\n\n    // eslint-disable-next-line no-restricted-properties\n    attributes.removeAttribute(this, attr);\n\n    return attr;\n  }\n\n  getBoundingClientRect() {\n    return {\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0\n    };\n  }\n\n  getClientRects() {\n    return [];\n  }\n\n  get scrollWidth() {\n    return 0;\n  }\n\n  get scrollHeight() {\n    return 0;\n  }\n\n  get clientTop() {\n    return 0;\n  }\n\n  get clientLeft() {\n    return 0;\n  }\n\n  get clientWidth() {\n    return 0;\n  }\n\n  get clientHeight() {\n    return 0;\n  }\n\n  // https://dom.spec.whatwg.org/#dom-element-attachshadow\n  attachShadow(init) {\n    const { _ownerDocument, _namespaceURI, _localName, _isValue } = this;\n\n    if (this.namespaceURI !== HTML_NS) {\n      throw DOMException.create(this._globalObject, [\n        \"This element does not support attachShadow. This element is not part of the HTML namespace.\",\n        \"NotSupportedError\"\n      ]);\n    }\n\n    if (!isValidHostElementName(_localName) && !isValidCustomElementName(_localName)) {\n      const message = \"This element does not support attachShadow. This element is not a custom element nor \" +\n        \"a standard element supporting a shadow root.\";\n      throw DOMException.create(this._globalObject, [message, \"NotSupportedError\"]);\n    }\n\n    if (isValidCustomElementName(_localName) || _isValue) {\n      const definition = lookupCEDefinition(_ownerDocument, _namespaceURI, _localName, _isValue);\n\n      if (definition && definition.disableShadow) {\n        throw DOMException.create(this._globalObject, [\n          \"Shadow root cannot be create on a custom element with disabled shadow\",\n          \"NotSupportedError\"\n        ]);\n      }\n    }\n\n    if (this._shadowRoot !== null) {\n      throw DOMException.create(this._globalObject, [\n        \"Shadow root cannot be created on a host which already hosts a shadow tree.\",\n        \"NotSupportedError\"\n      ]);\n    }\n\n    const shadow = ShadowRoot.createImpl(this._globalObject, [], {\n      ownerDocument: this.ownerDocument,\n      mode: init.mode,\n      host: this\n    });\n\n    this._shadowRoot = shadow;\n\n    return shadow;\n  }\n\n  // https://dom.spec.whatwg.org/#dom-element-shadowroot\n  get shadowRoot() {\n    const shadow = this._shadowRoot;\n\n    if (shadow === null || shadow.mode === \"closed\") {\n      return null;\n    }\n\n    return shadow;\n  }\n\n  // https://dom.spec.whatwg.org/#insert-adjacent\n  _insertAdjacent(element, where, node) {\n    where = asciiLowercase(where);\n\n    if (where === \"beforebegin\") {\n      if (element.parentNode === null) {\n        return null;\n      }\n      return element.parentNode._preInsert(node, element);\n    }\n    if (where === \"afterbegin\") {\n      return element._preInsert(node, element.firstChild);\n    }\n    if (where === \"beforeend\") {\n      return element._preInsert(node, null);\n    }\n    if (where === \"afterend\") {\n      if (element.parentNode === null) {\n        return null;\n      }\n      return element.parentNode._preInsert(node, element.nextSibling);\n    }\n\n    throw DOMException.create(this._globalObject, [\n      'Must provide one of \"beforebegin\", \"afterbegin\", \"beforeend\", or \"afterend\".',\n      \"SyntaxError\"\n    ]);\n  }\n\n  insertAdjacentElement(where, element) {\n    return this._insertAdjacent(this, where, element);\n  }\n\n  insertAdjacentText(where, data) {\n    const text = Text.createImpl(this._globalObject, [], { data, ownerDocument: this._ownerDocument });\n\n    this._insertAdjacent(this, where, text);\n  }\n\n  // https://w3c.github.io/DOM-Parsing/#dom-element-insertadjacenthtml\n  insertAdjacentHTML(position, text) {\n    position = asciiLowercase(position);\n\n    let context;\n    switch (position) {\n      case \"beforebegin\":\n      case \"afterend\": {\n        context = this.parentNode;\n        if (context === null || context.nodeType === NODE_TYPE.DOCUMENT_NODE) {\n          throw DOMException.create(this._globalObject, [\n            \"Cannot insert HTML adjacent to parent-less nodes or children of document nodes.\",\n            \"NoModificationAllowedError\"\n          ]);\n        }\n        break;\n      }\n      case \"afterbegin\":\n      case \"beforeend\": {\n        context = this;\n        break;\n      }\n      default: {\n        throw DOMException.create(this._globalObject, [\n          'Must provide one of \"beforebegin\", \"afterbegin\", \"beforeend\", or \"afterend\".',\n          \"SyntaxError\"\n        ]);\n      }\n    }\n\n    if (\n      context.nodeType !== NODE_TYPE.ELEMENT_NODE ||\n      (\n        context._ownerDocument._parsingMode === \"html\" &&\n        context._localName === \"html\" &&\n        context._namespaceURI === HTML_NS\n      )\n    ) {\n      context = context._ownerDocument.createElement(\"body\");\n    }\n\n    const fragment = parseFragment(text, context);\n\n    switch (position) {\n      case \"beforebegin\": {\n        this.parentNode._insert(fragment, this);\n        break;\n      }\n      case \"afterbegin\": {\n        this._insert(fragment, this.firstChild);\n        break;\n      }\n      case \"beforeend\": {\n        this._append(fragment);\n        break;\n      }\n      case \"afterend\": {\n        this.parentNode._insert(fragment, this.nextSibling);\n        break;\n      }\n    }\n  }\n\n  closest(selectors) {\n    const matcher = addNwsapi(this);\n    return matcher.closest(selectors, idlUtils.wrapperForImpl(this));\n  }\n}\n\nmixin(ElementImpl.prototype, NonDocumentTypeChildNode.prototype);\nmixin(ElementImpl.prototype, ParentNodeImpl.prototype);\nmixin(ElementImpl.prototype, ChildNodeImpl.prototype);\nmixin(ElementImpl.prototype, SlotableMixinImpl.prototype);\n\nElementImpl.prototype.getElementsByTagName = memoizeQuery(function (qualifiedName) {\n  return listOfElementsWithQualifiedName(qualifiedName, this);\n});\n\nElementImpl.prototype.getElementsByTagNameNS = memoizeQuery(function (namespace, localName) {\n  return listOfElementsWithNamespaceAndLocalName(namespace, localName, this);\n});\n\nElementImpl.prototype.getElementsByClassName = memoizeQuery(function (classNames) {\n  return listOfElementsWithClassNames(classNames, this);\n});\n\nElementImpl.prototype.matches = function (selectors) {\n  const matcher = addNwsapi(this);\n\n  return matcher.match(selectors, idlUtils.wrapperForImpl(this));\n};\n\nElementImpl.prototype.webkitMatchesSelector = ElementImpl.prototype.matches;\n\nmodule.exports = {\n  implementation: ElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}