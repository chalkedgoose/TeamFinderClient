{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _require = require(\"./attributes\"),\n    appendAttribute = _require.appendAttribute;\n\nvar NODE_TYPE = require(\"./node-type\");\n\nvar orderedSetParse = require(\"./helpers/ordered-set\").parse;\n\nvar _require2 = require(\"./helpers/create-element\"),\n    createElement = _require2.createElement;\n\nvar _require3 = require(\"./helpers/namespaces\"),\n    HTML_NS = _require3.HTML_NS,\n    XMLNS_NS = _require3.XMLNS_NS;\n\nvar _require4 = require(\"./helpers/internal-constants\"),\n    cloningSteps = _require4.cloningSteps,\n    domSymbolTree = _require4.domSymbolTree;\n\nvar _require5 = require(\"./helpers/strings\"),\n    asciiCaseInsensitiveMatch = _require5.asciiCaseInsensitiveMatch,\n    asciiLowercase = _require5.asciiLowercase;\n\nvar HTMLCollection = require(\"./generated/HTMLCollection\");\n\nexports.clone = function (node, document, cloneChildren) {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n\n  var copy;\n\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // Can't use a simple `Document.createImpl` because of circular dependency issues :-/\n      copy = node._cloneDocument();\n      break;\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\n      break;\n\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = createElement(document, node._localName, node._namespaceURI, node._prefix, node._isValue, false);\n\n      var _iterator = _createForOfIteratorHelper(node._attributeList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var attribute = _step.value;\n          appendAttribute(copy, exports.clone(attribute, document));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      break;\n\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      copy = document._createAttribute({\n        namespace: node._namespace,\n        namespacePrefix: node._namespacePrefix,\n        localName: node._localName,\n        value: node._value\n      });\n      break;\n\n    case NODE_TYPE.TEXT_NODE:\n      copy = document.createTextNode(node._data);\n      break;\n\n    case NODE_TYPE.CDATA_SECTION_NODE:\n      copy = document.createCDATASection(node._data);\n      break;\n\n    case NODE_TYPE.COMMENT_NODE:\n      copy = document.createComment(node._data);\n      break;\n\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = document.createProcessingInstruction(node.target, node._data);\n      break;\n\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = document.createDocumentFragment();\n      break;\n  }\n\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n\n  if (cloneChildren) {\n    var _iterator2 = _createForOfIteratorHelper(domSymbolTree.childrenIterator(node)),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var child = _step2.value;\n        var childCopy = exports.clone(child, document, true);\n\n        copy._append(childCopy);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return copy;\n}; // For the following, memoization is not applied here since the memoized results are stored on `this`.\n\n\nexports.listOfElementsWithClassNames = function (classNames, root) {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n  var classes = orderedSetParse(classNames);\n\n  if (classes.size === 0) {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return [];\n      }\n    });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: function query() {\n      var isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n      return domSymbolTree.treeToArray(root, {\n        filter: function filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          var classList = node.classList;\n\n          if (isQuirksMode) {\n            var _iterator3 = _createForOfIteratorHelper(classes),\n                _step3;\n\n            try {\n              var _loop = function _loop() {\n                var className = _step3.value;\n\n                if (!classList.tokenSet.some(function (cur) {\n                  return asciiCaseInsensitiveMatch(cur, className);\n                })) {\n                  return {\n                    v: false\n                  };\n                }\n              };\n\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _ret = _loop();\n\n                if (typeof _ret === \"object\") return _ret.v;\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          } else {\n            var _iterator4 = _createForOfIteratorHelper(classes),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var className = _step4.value;\n\n                if (!classList.tokenSet.contains(className)) {\n                  return false;\n                }\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n          }\n\n          return true;\n        }\n      });\n    }\n  });\n};\n\nexports.listOfElementsWithQualifiedName = function (qualifiedName, root) {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\n  if (qualifiedName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return domSymbolTree.treeToArray(root, {\n          filter: function filter(node) {\n            return node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root;\n          }\n        });\n      }\n    });\n  }\n\n  if (root._ownerDocument._parsingMode === \"html\") {\n    var lowerQualifiedName = asciiLowercase(qualifiedName);\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return domSymbolTree.treeToArray(root, {\n          filter: function filter(node) {\n            if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n              return false;\n            }\n\n            if (node._namespaceURI === HTML_NS) {\n              return node._qualifiedName === lowerQualifiedName;\n            }\n\n            return node._qualifiedName === qualifiedName;\n          }\n        });\n      }\n    });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: function query() {\n      return domSymbolTree.treeToArray(root, {\n        filter: function filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._qualifiedName === qualifiedName;\n        }\n      });\n    }\n  });\n};\n\nexports.listOfElementsWithNamespaceAndLocalName = function (namespace, localName, root) {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  if (namespace === \"*\" && localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return domSymbolTree.treeToArray(root, {\n          filter: function filter(node) {\n            return node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root;\n          }\n        });\n      }\n    });\n  }\n\n  if (namespace === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return domSymbolTree.treeToArray(root, {\n          filter: function filter(node) {\n            if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n              return false;\n            }\n\n            return node._localName === localName;\n          }\n        });\n      }\n    });\n  }\n\n  if (localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: function query() {\n        return domSymbolTree.treeToArray(root, {\n          filter: function filter(node) {\n            if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n              return false;\n            }\n\n            return node._namespaceURI === namespace;\n          }\n        });\n      }\n    });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: function query() {\n      return domSymbolTree.treeToArray(root, {\n        filter: function filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._localName === localName && node._namespaceURI === namespace;\n        }\n      });\n    }\n  });\n}; // https://dom.spec.whatwg.org/#converting-nodes-into-a-node\n// create a fragment (or just return a node for one item)\n\n\nexports.convertNodesIntoNode = function (document, nodes) {\n  if (nodes.length === 1) {\n    // note: I'd prefer to check instanceof Node rather than string\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\n  }\n\n  var fragment = document.createDocumentFragment();\n\n  for (var i = 0; i < nodes.length; i++) {\n    fragment._append(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\n  }\n\n  return fragment;\n}; // https://dom.spec.whatwg.org/#locate-a-namespace-prefix\n\n\nexports.locateNamespacePrefix = function (element, namespace) {\n  if (element._namespaceURI === namespace && element._prefix !== null) {\n    return element._prefix;\n  }\n\n  var _iterator5 = _createForOfIteratorHelper(element._attributeList),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var attribute = _step5.value;\n\n      if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\n        return attribute._localName;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  if (element.parentElement !== null) {\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\n  }\n\n  return null;\n}; // https://dom.spec.whatwg.org/#locate-a-namespace\n\n\nexports.locateNamespace = function (node, prefix) {\n  switch (node.nodeType) {\n    case NODE_TYPE.ELEMENT_NODE:\n      {\n        if (node._namespaceURI !== null && node._prefix === prefix) {\n          return node._namespaceURI;\n        }\n\n        if (prefix === null) {\n          var _iterator6 = _createForOfIteratorHelper(node._attributeList),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var attribute = _step6.value;\n\n              if (attribute._namespace === XMLNS_NS && attribute._namespacePrefix === null && attribute._localName === \"xmlns\") {\n                return attribute._value !== \"\" ? attribute._value : null;\n              }\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        } else {\n          var _iterator7 = _createForOfIteratorHelper(node._attributeList),\n              _step7;\n\n          try {\n            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n              var _attribute = _step7.value;\n\n              if (_attribute._namespace === XMLNS_NS && _attribute._namespacePrefix === \"xmlns\" && _attribute._localName === prefix) {\n                return _attribute._value !== \"\" ? _attribute._value : null;\n              }\n            }\n          } catch (err) {\n            _iterator7.e(err);\n          } finally {\n            _iterator7.f();\n          }\n        }\n\n        if (node.parentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n\n    case NODE_TYPE.DOCUMENT_NODE:\n      {\n        if (node.documentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.documentElement, prefix);\n      }\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      {\n        return null;\n      }\n\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      {\n        if (node._element === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node._element, prefix);\n      }\n\n    default:\n      {\n        if (node.parentElement === null) {\n          return null;\n        }\n\n        return exports.locateNamespace(node.parentElement, prefix);\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/node.js"],"names":["require","appendAttribute","NODE_TYPE","orderedSetParse","parse","createElement","HTML_NS","XMLNS_NS","cloningSteps","domSymbolTree","asciiCaseInsensitiveMatch","asciiLowercase","HTMLCollection","exports","clone","node","document","cloneChildren","undefined","_ownerDocument","copy","nodeType","DOCUMENT_NODE","_cloneDocument","DOCUMENT_TYPE_NODE","implementation","createDocumentType","name","publicId","systemId","ELEMENT_NODE","_localName","_namespaceURI","_prefix","_isValue","_attributeList","attribute","ATTRIBUTE_NODE","_createAttribute","namespace","_namespace","namespacePrefix","_namespacePrefix","localName","value","_value","TEXT_NODE","createTextNode","_data","CDATA_SECTION_NODE","createCDATASection","COMMENT_NODE","createComment","PROCESSING_INSTRUCTION_NODE","createProcessingInstruction","target","DOCUMENT_FRAGMENT_NODE","createDocumentFragment","childrenIterator","child","childCopy","_append","listOfElementsWithClassNames","classNames","root","classes","size","createImpl","_globalObject","element","query","isQuirksMode","compatMode","treeToArray","filter","classList","className","tokenSet","some","cur","contains","listOfElementsWithQualifiedName","qualifiedName","_parsingMode","lowerQualifiedName","_qualifiedName","listOfElementsWithNamespaceAndLocalName","convertNodesIntoNode","nodes","length","fragment","i","locateNamespacePrefix","parentElement","locateNamespace","prefix","documentElement","_element"],"mappings":"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","sourcesContent":["\"use strict\";\nconst { appendAttribute } = require(\"./attributes\");\nconst NODE_TYPE = require(\"./node-type\");\n\nconst orderedSetParse = require(\"./helpers/ordered-set\").parse;\nconst { createElement } = require(\"./helpers/create-element\");\nconst { HTML_NS, XMLNS_NS } = require(\"./helpers/namespaces\");\nconst { cloningSteps, domSymbolTree } = require(\"./helpers/internal-constants\");\nconst { asciiCaseInsensitiveMatch, asciiLowercase } = require(\"./helpers/strings\");\n\nconst HTMLCollection = require(\"./generated/HTMLCollection\");\n\nexports.clone = (node, document, cloneChildren) => {\n  if (document === undefined) {\n    document = node._ownerDocument;\n  }\n\n  let copy;\n  switch (node.nodeType) {\n    case NODE_TYPE.DOCUMENT_NODE:\n      // Can't use a simple `Document.createImpl` because of circular dependency issues :-/\n      copy = node._cloneDocument();\n      break;\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n      copy = document.implementation.createDocumentType(node.name, node.publicId, node.systemId);\n      break;\n\n    case NODE_TYPE.ELEMENT_NODE:\n      copy = createElement(\n        document,\n        node._localName,\n        node._namespaceURI,\n        node._prefix,\n        node._isValue,\n        false\n      );\n\n      for (const attribute of node._attributeList) {\n        appendAttribute(copy, exports.clone(attribute, document));\n      }\n      break;\n\n    case NODE_TYPE.ATTRIBUTE_NODE:\n      copy = document._createAttribute({\n        namespace: node._namespace,\n        namespacePrefix: node._namespacePrefix,\n        localName: node._localName,\n        value: node._value\n      });\n      break;\n\n    case NODE_TYPE.TEXT_NODE:\n      copy = document.createTextNode(node._data);\n      break;\n\n    case NODE_TYPE.CDATA_SECTION_NODE:\n      copy = document.createCDATASection(node._data);\n      break;\n\n    case NODE_TYPE.COMMENT_NODE:\n      copy = document.createComment(node._data);\n      break;\n\n    case NODE_TYPE.PROCESSING_INSTRUCTION_NODE:\n      copy = document.createProcessingInstruction(node.target, node._data);\n      break;\n\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE:\n      copy = document.createDocumentFragment();\n      break;\n  }\n\n  if (node[cloningSteps]) {\n    node[cloningSteps](copy, node, document, cloneChildren);\n  }\n\n  if (cloneChildren) {\n    for (const child of domSymbolTree.childrenIterator(node)) {\n      const childCopy = exports.clone(child, document, true);\n      copy._append(childCopy);\n    }\n  }\n\n  return copy;\n};\n\n// For the following, memoization is not applied here since the memoized results are stored on `this`.\n\nexports.listOfElementsWithClassNames = (classNames, root) => {\n  // https://dom.spec.whatwg.org/#concept-getElementsByClassName\n\n  const classes = orderedSetParse(classNames);\n\n  if (classes.size === 0) {\n    return HTMLCollection.createImpl(root._globalObject, [], { element: root, query: () => [] });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => {\n      const isQuirksMode = root._ownerDocument.compatMode === \"BackCompat\";\n\n      return domSymbolTree.treeToArray(root, { filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        const { classList } = node;\n        if (isQuirksMode) {\n          for (const className of classes) {\n            if (!classList.tokenSet.some(cur => asciiCaseInsensitiveMatch(cur, className))) {\n              return false;\n            }\n          }\n        } else {\n          for (const className of classes) {\n            if (!classList.tokenSet.contains(className)) {\n              return false;\n            }\n          }\n        }\n\n        return true;\n      } });\n    }\n  });\n};\n\nexports.listOfElementsWithQualifiedName = (qualifiedName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagname\n\n  if (qualifiedName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (root._ownerDocument._parsingMode === \"html\") {\n    const lowerQualifiedName = asciiLowercase(qualifiedName);\n\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          if (node._namespaceURI === HTML_NS) {\n            return node._qualifiedName === lowerQualifiedName;\n          }\n\n          return node._qualifiedName === qualifiedName;\n        }\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._qualifiedName === qualifiedName;\n      }\n    })\n  });\n};\n\nexports.listOfElementsWithNamespaceAndLocalName = (namespace, localName, root) => {\n  // https://dom.spec.whatwg.org/#concept-getelementsbytagnamens\n\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  if (namespace === \"*\" && localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE && node !== root\n      })\n    });\n  }\n\n  if (namespace === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._localName === localName;\n        }\n      })\n    });\n  }\n\n  if (localName === \"*\") {\n    return HTMLCollection.createImpl(root._globalObject, [], {\n      element: root,\n      query: () => domSymbolTree.treeToArray(root, {\n        filter(node) {\n          if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n            return false;\n          }\n\n          return node._namespaceURI === namespace;\n        }\n      })\n    });\n  }\n\n  return HTMLCollection.createImpl(root._globalObject, [], {\n    element: root,\n    query: () => domSymbolTree.treeToArray(root, {\n      filter(node) {\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE || node === root) {\n          return false;\n        }\n\n        return node._localName === localName && node._namespaceURI === namespace;\n      }\n    })\n  });\n};\n\n// https://dom.spec.whatwg.org/#converting-nodes-into-a-node\n// create a fragment (or just return a node for one item)\nexports.convertNodesIntoNode = (document, nodes) => {\n  if (nodes.length === 1) { // note: I'd prefer to check instanceof Node rather than string\n    return typeof nodes[0] === \"string\" ? document.createTextNode(nodes[0]) : nodes[0];\n  }\n  const fragment = document.createDocumentFragment();\n  for (let i = 0; i < nodes.length; i++) {\n    fragment._append(typeof nodes[i] === \"string\" ? document.createTextNode(nodes[i]) : nodes[i]);\n  }\n  return fragment;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace-prefix\nexports.locateNamespacePrefix = (element, namespace) => {\n  if (element._namespaceURI === namespace && element._prefix !== null) {\n    return element._prefix;\n  }\n\n  for (const attribute of element._attributeList) {\n    if (attribute._namespacePrefix === \"xmlns\" && attribute._value === namespace) {\n      return attribute._localName;\n    }\n  }\n\n  if (element.parentElement !== null) {\n    return exports.locateNamespacePrefix(element.parentElement, namespace);\n  }\n\n  return null;\n};\n\n// https://dom.spec.whatwg.org/#locate-a-namespace\nexports.locateNamespace = (node, prefix) => {\n  switch (node.nodeType) {\n    case NODE_TYPE.ELEMENT_NODE: {\n      if (node._namespaceURI !== null && node._prefix === prefix) {\n        return node._namespaceURI;\n      }\n\n      if (prefix === null) {\n        for (const attribute of node._attributeList) {\n          if (attribute._namespace === XMLNS_NS &&\n              attribute._namespacePrefix === null &&\n              attribute._localName === \"xmlns\") {\n            return attribute._value !== \"\" ? attribute._value : null;\n          }\n        }\n      } else {\n        for (const attribute of node._attributeList) {\n          if (attribute._namespace === XMLNS_NS &&\n              attribute._namespacePrefix === \"xmlns\" &&\n              attribute._localName === prefix) {\n            return attribute._value !== \"\" ? attribute._value : null;\n          }\n        }\n      }\n\n      if (node.parentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.parentElement, prefix);\n    }\n\n    case NODE_TYPE.DOCUMENT_NODE: {\n      if (node.documentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.documentElement, prefix);\n    }\n\n    case NODE_TYPE.DOCUMENT_TYPE_NODE:\n    case NODE_TYPE.DOCUMENT_FRAGMENT_NODE: {\n      return null;\n    }\n\n    case NODE_TYPE.ATTRIBUTE_NODE: {\n      if (node._element === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node._element, prefix);\n    }\n\n    default: {\n      if (node.parentElement === null) {\n        return null;\n      }\n\n      return exports.locateNamespace(node.parentElement, prefix);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}