[{"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/index.js":"1","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reportWebVitals.js":"2","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/store.js":"3","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/App.js":"4","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Nav.js":"5","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/NotFound.js":"6","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/PrivateRoute.js":"7","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Edit.js":"8","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/PlayerCard.js":"9","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Animation.js":"10","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/axiosWithAuth.js":"11","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/MyPlayer.js":"12","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Home.js":"13","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/MessageData.js":"14","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/ForgotPassword.js":"15","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Forum.js":"16","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Reset.js":"17","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/BadgeGrinders.js":"18","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Auth/Login.js":"19","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Auth/Signup.js":"20","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/actions/postActions.js":"21","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reducers/index.js":"22","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Search.js":"23","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/actions/types.js":"24","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reducers/UserReducer.js":"25"},{"size":595,"mtime":1615829173573,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1615829173573,"results":"28","hashOfConfig":"27"},{"size":482,"mtime":1615829173574,"results":"29","hashOfConfig":"27"},{"size":2939,"mtime":1615829173513,"results":"30","hashOfConfig":"27"},{"size":9398,"mtime":1615829173516,"results":"31","hashOfConfig":"27"},{"size":354,"mtime":1615829173516,"results":"32","hashOfConfig":"27"},{"size":400,"mtime":1615829173516,"results":"33","hashOfConfig":"27"},{"size":7981,"mtime":1615829173516,"results":"34","hashOfConfig":"27"},{"size":24902,"mtime":1615838102761,"results":"35","hashOfConfig":"27"},{"size":606,"mtime":1615829173514,"results":"36","hashOfConfig":"27"},{"size":277,"mtime":1615829173515,"results":"37","hashOfConfig":"27"},{"size":18579,"mtime":1615829173515,"results":"38","hashOfConfig":"27"},{"size":1041,"mtime":1615829173514,"results":"39","hashOfConfig":"27"},{"size":754,"mtime":1615829173515,"results":"40","hashOfConfig":"27"},{"size":2051,"mtime":1615829173514,"results":"41","hashOfConfig":"27"},{"size":3014,"mtime":1615829173514,"results":"42","hashOfConfig":"27"},{"size":2273,"mtime":1615829173515,"results":"43","hashOfConfig":"27"},{"size":617,"mtime":1615829173514,"results":"44","hashOfConfig":"27"},{"size":2674,"mtime":1615829173514,"results":"45","hashOfConfig":"27"},{"size":3211,"mtime":1615829173514,"results":"46","hashOfConfig":"27"},{"size":908,"mtime":1615829173516,"results":"47","hashOfConfig":"27"},{"size":141,"mtime":1615829173573,"results":"48","hashOfConfig":"27"},{"size":209,"mtime":1615829173515,"results":"49","hashOfConfig":"27"},{"size":64,"mtime":1615829173516,"results":"50","hashOfConfig":"27"},{"size":368,"mtime":1615829173573,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1frk55",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/index.js",[],["120","121"],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reportWebVitals.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/store.js",["122"],"import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\nconst initialState = {}\n\nconst middleware = [thunk]\n\n// const store = createStore(rootReducer,initialState,applyMiddleware(...middleware))\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/App.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import './App.css'\nimport {\n    BrowserRouter,\n    Route,\n    withRouter,\n    Link,\n    useHistory,\n    Switch,\n} from 'react-router-dom'\nimport PlayerCard from './Components/PlayerCard'\nimport Forum from './Components/Forum'\n\nimport { browserHistory, Redirect } from 'react-router'\nimport logo from './images/Logo.png'\nimport Login from './Auth/Login'\nimport Signup from './Auth/Signup'\nimport { useState, useEffect } from 'react'\nimport MyPlayer from './Components/MyPlayer'\nimport axios from 'axios'\nimport { axiosWithAuth } from './Components/axiosWithAuth'\nimport Home from './Components/Home'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { connect } from 'react-redux'\nimport PrivateRoute from './PrivateRoute'\nimport { getId } from './actions/postActions'\nimport Nav from './Nav'\nimport Animation from './Components/Animation'\nimport Edit from './Edit'\nimport NotFound from './NotFound'\nimport BadgeGrinders from './Components/BadgeGrinders'\nimport ForgotPassword from './Components/ForgotPassword'\nimport MessageData from './Components/MessageData'\nimport Reset from './Components/Reset'\nconst App = (props) => {\n    const token = window.localStorage.getItem('token')\n    const [user, setUser] = useState([])\n    useEffect(() => {\n        props.getId()\n    }, [])\n\n    const Cred = {\n        Status: 'online',\n    }\n    const userId = props.One._id\n\n    useEffect(() => {\n        if (token !== null && token !== '') {\n            axiosWithAuth()\n                .patch(`/player/{ _id: ${props.One._id}, __v: 0 }`, Cred)\n                .then((res) => {})\n                .catch((err) => {})\n        }\n    })\n\n    let history = useHistory()\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Nav />\n                <Switch>\n                    <Route exact path=\"/\" exact component={Home} />\n                    <Route path=\"/Login\" exact component={Login} />\n                    <Route exact path=\"/Signup\" exact component={Signup} />\n                    <PrivateRoute path=\"/myPlayer\" exact component={MyPlayer} />\n                    <PrivateRoute path=\"/edit/:id\" exact component={Edit} />\n                    <PrivateRoute path=\"/find\" exact component={PlayerCard} />\n                    <PrivateRoute path=\"/forum\" exact component={Forum} />\n\n                    <PrivateRoute\n                        path=\"/badge\"\n                        exact\n                        component={BadgeGrinders}\n                    />\n                    <Route path=\"/forgot\" exact component={ForgotPassword} />\n\n                    <Route path=\"/Reset/:id/:token\" exact component={Reset} />\n\n                    <Route component={NotFound} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    One: state.getId.UserId,\n})\n\nexport default connect(mapStateToProps, { getId })(App)\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Nav.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport {\n    BrowserRouter,\n    Route,\n    withRouter,\n    Link,\n    useHistory,\n} from 'react-router-dom'\nimport logo from './images/Logo.png'\nimport { axiosWithAuth } from './Components/axiosWithAuth'\nimport { getId } from './actions/postActions'\nimport { connect } from 'react-redux'\nimport Home from './images/Home.png'\nconst Nav = (props) => {\n    const [color1, setColor1] = useState('')\n    const [color2, setColor2] = useState('')\n    const [color3, setColor3] = useState('')\n    const [color4, setColor4] = useState('')\n    const [view, setView] = useState('')\n\n    const [active1, setActive1] = useState('')\n    const [active2, setActive2] = useState('')\n    const [active3, setActive3] = useState('')\n    const [active4, setActive4] = useState('')\n\n    const CredOff = {\n        Status: 'offline',\n    }\n    const Logout = async (e) => {\n        e.preventDefault()\n        try {\n            axiosWithAuth()\n                .patch(`/player/{ _id: ${props.One._id}, __v: 0 }`, CredOff)\n                .then(window.localStorage.setItem('token', ''))\n                .then(window.location.reload())\n        } catch (err) {\n            //  (err)\n            //  ('didnt work')\n        }\n    }\n    const token = window.localStorage.getItem('token')\n    useEffect(() => {\n        if (token == null || token === '') {\n            setView('none')\n        } else {\n            setView('homeCont4')\n        }\n    })\n\n    // (window.location.href)\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/'\n            ? setActive1('find')\n            : setActive1('')\n    })\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/'\n            ? setColor1('rgb(0, 255, 179)')\n            : setColor1('#fff')\n    })\n\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/myPlayer/' + props.One._id\n            ? setActive2('find')\n            : setActive2('')\n    })\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/myPlayer/' + props.One._id\n            ? setColor2('rgb(0, 255, 179)')\n            : setColor2('#fff')\n    })\n\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/find'\n            ? setColor3('rgb(0, 255, 179)')\n            : setColor3('#fff')\n    })\n    useEffect(() => {\n        window.location.href === 'teamfinder.team/find'\n            ? setActive3('find')\n            : setActive3('')\n    })\n\n    return (\n        <div className=\"navi\">\n            <BrowserRouter>\n                <nav>\n                    <div className=\"navCont\">\n                        <div className=\"logo-cont\">\n                            <img src={logo} className=\"logo\" />\n                        </div>\n                        <div className=\"homeCont1\">\n                            <a className={active1} href=\"/\">\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-home-2\"\n                                    width=\"30\"\n                                    height=\"30\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"1\"\n                                    stroke={color1}\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <polyline points=\"5 12 3 12 12 3 21 12 19 12\" />\n                                    <path d=\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\" />\n                                    <rect x=\"10\" y=\"12\" width=\"4\" height=\"4\" />\n                                </svg>\n                            </a>\n                            <p>\n                                {' '}\n                                <a className={active1} href=\"/\">\n                                    Home\n                                </a>{' '}\n                            </p>\n                        </div>\n\n                        <div className=\"homeCont2\">\n                            <a className={active3} href=\"/find\">\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-rocket\"\n                                    width=\"30\"\n                                    height=\"30\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"1\"\n                                    stroke={color3}\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <path d=\"M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3\" />\n                                    <path d=\"M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3\" />\n                                    <circle cx=\"15\" cy=\"9\" r=\"1\" />\n                                </svg>\n                            </a>\n                            <p>\n                                <a className={active3} href=\"/find\">\n                                    {' '}\n                                    Explore{' '}\n                                </a>{' '}\n                            </p>\n                        </div>\n\n                        <div className=\"homeCont3\">\n                            <a className={active2} href={`/myPlayer`}>\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-user\"\n                                    width=\"30\"\n                                    height=\"30\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"1\"\n                                    stroke={color2}\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <circle cx=\"12\" cy=\"7\" r=\"4\" />\n                                    <path d=\"M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\n                                </svg>\n                            </a>\n                            <p>\n                                {' '}\n                                <a className={active2} href={`/myPlayer`}>\n                                    My Stats\n                                </a>{' '}\n                            </p>\n                        </div>\n\n                        <div className={view}>\n                            <a href=\"/login\" onClick={Logout}>\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-logout\"\n                                    width=\"30\"\n                                    height=\"30\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"1\"\n                                    stroke=\"#fff\"\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <path d=\"M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2\" />\n                                    <path d=\"M7 12h14l-3 -3m0 6l3 -3\" />\n                                </svg>\n                            </a>\n\n                            <p>\n                                <a href=\"/login\" onClick={Logout}>\n                                    {' '}\n                                    Logout{' '}\n                                </a>{' '}\n                            </p>\n                        </div>\n                    </div>\n                </nav>\n            </BrowserRouter>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    One: state.getId.UserId,\n})\n\nexport default connect(mapStateToProps, { getId })(Nav)\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/NotFound.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/PrivateRoute.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Edit.js",["158","159","160","161","162","163","164","165","166"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { axiosWithAuth } from './Components/axiosWithAuth'\nimport { getId } from './actions/postActions'\nimport Animation from './Components/Animation'\nconst Edit = (props) => {\n    const token = window.localStorage.getItem('token')\n    const [overallRange, setOverallRange] = useState()\n    const [wpRange, setWpRange] = useState()\n    const [alert, setAlert] = useState('')\n    const [alerts, setAlerts] = useState('')\n\n    const [myPlayer, setMyPlayer] = useState('')\n    const [saved, setSaved] = useState('')\n    const [state, setState] = useState({\n        Archetype: '',\n        Overall: '',\n        Position: '',\n        Rep: '',\n        System: '',\n        Type: '',\n        Winpercentage: '',\n        Gamertag: '',\n        Bio: '',\n        Youtube: '',\n        Instagram: '',\n        Twitter: '',\n        Twitch: '',\n        Status: 'online',\n    })\n\n    //   \"http://https://jobs-xmmtw.ondigitalocean.app//player/{ _id: 5fd9811cc0cd184690c65f07, __v: 0 }\"\n    const Info = window.localStorage.getItem('userInfo')\n\n    useEffect(async () => {\n        try {\n            const one = await axios.get(\n                `https://jobs-xmmtw.ondigitalocean.app/player/{ _id: ${Info}, __v: 0 }`,\n                {\n                    headers: {\n                        authorization: token,\n                    },\n                }\n            )\n            setMyPlayer(one.data)\n            setState((state) => ({\n                ...state,\n                Archetype: one.data.Archetype,\n                Overall: one.data.Overall,\n                Position: one.data.Position,\n                Rep: one.data.Rep,\n                System: one.data.System,\n                Type: one.data.Type,\n                Winpercentage: one.data.Winpercentage,\n                Gamertag: one.data.Gamertag,\n                Bio: one.data.Bio,\n                Youtube: one.data.Youtube,\n                Instagram: one.data.Instagram,\n                Twitter: one.data.Twitter,\n                Twitch: one.data.Twitch,\n            }))\n        } catch (err) {}\n    }, [])\n    useEffect(() => {\n        props.getId()\n    }, [])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        axiosWithAuth()\n            .put(`/player/{ _id: ${props.One._id}, __v: 0 }`, state)\n            .then((res) => {\n                setAlert(res.data._message)\n                if (alert !== 'info validation failed') {\n                    window.location.replace('/find')\n                }\n            })\n            .catch((err) => {})\n    }\n\n    const onChange = (e) => {\n        let name = e.target.value\n        if (name.length < 3) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n    const onChange2 = (e) => {\n        let name = e.target.value\n        if (name.length < 30) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n    const onChange3 = (e) => {\n        let name = e.target.value\n        if (name.length < 200) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n    const SelectChange = (e) => {\n        setState((state) => ({\n            ...state,\n            [e.target.name]: e.target[e.target.selectedIndex].value,\n        }))\n    }\n\n    const overallRanges = (e) => {\n        setOverallRange(e.target.value)\n        setState((state) => ({\n            ...state,\n            Overall: e.target.value,\n        }))\n    }\n\n    const wpRanges = (e) => {\n        setWpRange(e.target.value)\n        setState((state) => ({\n            ...state,\n            Winpercentage: e.target.value,\n        }))\n    }\n    return (\n        <div className=\"EditContainer\">\n            <form onSubmit={handleSubmit}>\n                <h2> Edit your Player Card</h2>\n                <div className={alert}>\n                    <p> {alert}</p>\n                </div>\n\n                <Animation />\n                <select name=\"Rep\" onChange={SelectChange}>\n                    <option defaultValue>{state.Rep}</option>\n                    <option> Pro </option>\n                    <option> Allstar </option>\n                    <option> Superstar </option>\n                    <option> Elite </option>\n                    <option> Legend </option>\n                </select>\n                <select name=\"Type\" onChange={SelectChange}>\n                    <option defaultValue>{state.Type} </option>\n                    <option> Casual </option>\n                    <option> Competetive </option>\n                </select>\n                <select name=\"System\" onChange={SelectChange}>\n                    <option> What console are you on? </option>\n                    <option> PS5 </option>\n                    <option> PS4 </option>\n                    <option> XBOX SERIES </option>\n                    <option> XBOX ONE </option>\n                </select>\n                <select name=\"Position\" onChange={SelectChange}>\n                    <option> What position do you play?</option>\n                    <option> Point Gaurd </option>\n                    <option> Shooting Gaurd </option>\n                    <option> Small Forward </option>\n                    <option> Power Forward </option>\n                    <option> Center </option>\n                </select>\n                <input\n                    value={state.Gamertag}\n                    name=\"Gamertag\"\n                    onChange={onChange2}\n                    placeholder=\"Gamertag\"\n                />\n                <input\n                    value={state.Archetype}\n                    name=\"Archetype\"\n                    onChange={onChange2}\n                    placeholder=\"Archetype\"\n                />\n\n                <textarea\n                    className=\"bio\"\n                    placeholder=\"Bio\"\n                    value={state.Bio}\n                    name=\"Bio\"\n                    onChange={onChange3}\n                />\n\n                <input\n                    value={state.Twitter}\n                    name=\"Twitter\"\n                    onChange={onChange3}\n                    placeholder=\"*optional Twitter link \"\n                />\n\n                <input\n                    value={state.Instagram}\n                    name=\"Instagram\"\n                    onChange={onChange3}\n                    placeholder=\"*optional Instagram link  \"\n                />\n\n                <input\n                    value={state.Youtube}\n                    name=\"Youtube\"\n                    onChange={onChange3}\n                    placeholder=\"*optional Youtube link \"\n                />\n\n                <input\n                    value={state.Twitch}\n                    name=\"Twitch\"\n                    onChange={onChange3}\n                    placeholder=\" *optional Twitch link  \"\n                />\n\n                <div>\n                    <input\n                        className=\"range\"\n                        type=\"range\"\n                        onChange={overallRanges}\n                        min=\"60\"\n                        max=\"99\"\n                    />{' '}\n                    {overallRange} OVR\n                </div>\n\n                <div>\n                    <input\n                        className=\"range\"\n                        type=\"range\"\n                        onChange={wpRanges}\n                        min=\"0\"\n                        max=\"99\"\n                    />{' '}\n                    {wpRange} WP%\n                </div>\n\n                <button onClick={handleSubmit}>Submit </button>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    One: state.getId.UserId,\n})\n\nexport default connect(mapStateToProps, { getId })(Edit)\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/PlayerCard.js",["167","168","169","170","171","172","173","174","175","176","177","178","179"],"import React from 'react'\nimport { useState, useEffect, useReducer } from 'react'\nimport axios from 'axios'\nimport Search from './Search'\nimport { connect } from 'react-redux'\nimport { axiosWithAuth } from './axiosWithAuth'\nimport search from '../images/search.png'\nimport Animation from './Animation'\nimport { getId } from '../actions/postActions'\nimport { Redirect } from 'react-router'\nconst PlayerCard = (props) => {\n    useEffect(() => {\n        props.getId()\n    }, [])\n\n    const [playerInfo, setPlayerInfo] = useState([])\n    const [userInfo, setUserInfo] = useState()\n\n    const [view, setView] = useState()\n    const [searchQuery, setSearchQuery] = useState([])\n    const [searchQuery2, setSearchQuery2] = useState([])\n    const [searchQuery3, setSearchQuery3] = useState([])\n    const [searchQuery4, setSearchQuery4] = useState([])\n    const [searchQuery5, setSearchQuery5] = useState([])\n    const [searchQuery6, setSearchQuery6] = useState([])\n    const [searchQuery7, setSearchQuery7] = useState([])\n    const [playercardcreated, setPlayercardcreated] = useState(true)\n    const token = window.localStorage.getItem('token')\n\n    useEffect(() => {\n        axios\n            .get('https://jobs-xmmtw.ondigitalocean.app/player', {\n                headers: {\n                    authorization: token,\n                },\n            })\n            .then((res) => {\n                setPlayerInfo(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        axiosWithAuth()\n            .get('/login')\n            .then((res) => {\n                setUserInfo(res.data)\n            })\n    }, [])\n\n    const Info = window.localStorage.getItem('userInfo')\n    useEffect(() => {\n        if (token !== null && token !== '') {\n            axiosWithAuth()\n                .get(`/player/{ _id: ${Info}, __v: 0 }`)\n                .then((res) => {\n                    if (res.data === null) {\n                        setPlayercardcreated(false)\n                    }\n                })\n                .catch((err) => {})\n        }\n    })\n    // (playercardcreated)\n\n    if (playercardcreated === false) {\n        return <Redirect to={`/myPlayer`} />\n    }\n\n    const Change = (e) => {\n        setSearchQuery(e.target.value.toLowerCase())\n    }\n\n    const Change2 = (e) => {\n        setSearchQuery2(e.target.value.toLowerCase())\n    }\n    const Change3 = (e) => {\n        setSearchQuery3(e.target.value.toLowerCase())\n    }\n    const Change4 = (e) => {\n        setSearchQuery4(e.target.value.toLowerCase())\n    }\n\n    const Change5 = (e) => {\n        setSearchQuery5(e.target.value.toLowerCase())\n    }\n\n    const Change6 = (e) => {\n        setSearchQuery6(e.target.value.toLowerCase())\n    }\n\n    const Change7 = (e) => {\n        setSearchQuery7(e.target.value.toLowerCase())\n    }\n\n    const j = playerInfo.filter(\n        (item) =>\n            item.Archetype.toLowerCase().includes(searchQuery) &&\n            item.Overall.toLowerCase().includes(searchQuery2) &&\n            item.Rep.toLowerCase().includes(searchQuery3) &&\n            item.Position.toLowerCase().includes(searchQuery4) &&\n            item.Winpercentage.toLowerCase().includes(searchQuery5) &&\n            item.Type.toLowerCase().includes(searchQuery6) &&\n            item.System.toLowerCase().includes(searchQuery7)\n    )\n\n    function shuffle(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex)\n            currentIndex -= 1\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex]\n            array[currentIndex] = array[randomIndex]\n            array[randomIndex] = temporaryValue\n        }\n\n        return array\n    }\n\n    shuffle(j)\n    let s = j.sort((a, b) => {\n        return a.Status.length - b.Status.length\n    })\n\n    return (\n        <div>\n            <Animation />\n            <h1 className=\"featurereq\">\n                {' '}\n                <a href=\"https://twitter.com/TeamFinder2K\" target=\"_blank\">\n                    {' '}\n                    Contact Me{' '}\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"icon icon-tabler icon-tabler-mail\"\n                        width=\"44\"\n                        height=\"44\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth=\"1.5\"\n                        stroke=\"rgb(0, 255, 128)\"\n                        fill=\"none\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                    >\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" />\n                        <polyline points=\"3 7 12 13 21 7\" />\n                    </svg>\n                </a>{' '}\n            </h1>\n\n            <div className=\"searchCont\">\n                <input\n                    className=\"search\"\n                    placeholder=\"Archetype\"\n                    onChange={Change}\n                    value={searchQuery}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n                <input\n                    className=\"search\"\n                    placeholder=\"Overall\"\n                    onChange={Change2}\n                    value={searchQuery2}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n                <input\n                    className=\"search\"\n                    placeholder=\"Rep\"\n                    onChange={Change3}\n                    value={searchQuery3}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n                <input\n                    className=\"search\"\n                    placeholder=\"Position\"\n                    onChange={Change4}\n                    value={searchQuery4}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n                <input\n                    className=\"search\"\n                    placeholder=\"WP%\"\n                    onChange={Change5}\n                    value={searchQuery5}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n\n                <input\n                    className=\"search\"\n                    placeholder=\"Play Style\"\n                    onChange={Change6}\n                    value={searchQuery6}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n\n                <input\n                    className=\"search\"\n                    id=\" system\"\n                    placeholder=\"System\"\n                    onChange={Change7}\n                    value={searchQuery7}\n                />\n                <svg\n                    xmlns=\"http://www.w3.org/3000/svg\"\n                    className=\"icon icon-tabler icon-tabler-search\"\n                    width=\"30\"\n                    height=\"30\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1\"\n                    stroke=\"rgb(0, 255, 179)\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                >\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    <circle cx=\"10\" cy=\"10\" r=\"7\" />\n                    <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n                </svg>\n            </div>\n\n            {/* <Search/> */}\n            <div className=\"searchContainer\">\n                <div className=\"SearchInput\">\n                    <input\n                        className=\"one\"\n                        placeholder=\"Archetype\"\n                        onChange={Change}\n                        value={searchQuery}\n                    />\n\n                    <input\n                        placeholder=\"Overall\"\n                        onChange={Change2}\n                        value={searchQuery2}\n                    />\n\n                    <input\n                        placeholder=\"Rep\"\n                        onChange={Change3}\n                        value={searchQuery3}\n                    />\n                </div>\n\n                <div className=\"SearchInput\">\n                    <input\n                        placeholder=\"Position\"\n                        onChange={Change4}\n                        value={searchQuery4}\n                    />\n\n                    <input\n                        placeholder=\"WP%\"\n                        onChange={Change5}\n                        value={searchQuery5}\n                    />\n\n                    <input\n                        placeholder=\"Play Style\"\n                        onChange={Change6}\n                        value={searchQuery6}\n                    />\n\n                    <input\n                        placeholder=\"System\"\n                        onChange={Change7}\n                        value={searchQuery7}\n                    />\n                </div>\n            </div>\n\n            <div className=\"cont\">\n                {j.map((info) => {\n                    return (\n                        <div key={info.id} className={`infoCont`}>\n                            <div className={info.System}></div>\n\n                            <div className=\"mediaCont\">\n                                <a\n                                    className={`noneview${info.Youtube}`}\n                                    href={info.Youtube}\n                                    target=\"_blank\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"icon icon-tabler icon-tabler-brand-youtube\"\n                                        width=\"44\"\n                                        height=\"44\"\n                                        viewBox=\"0 0 24 24\"\n                                        strokeWidth=\"0.8\"\n                                        stroke=\"white\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    >\n                                        <path\n                                            stroke=\"none\"\n                                            d=\"M0 0h24v24H0z\"\n                                            fill=\"none\"\n                                        />\n                                        <rect\n                                            x=\"3\"\n                                            y=\"5\"\n                                            width=\"18\"\n                                            height=\"14\"\n                                            rx=\"4\"\n                                        />\n                                        <path d=\"M10 9l5 3l-5 3z\" />\n                                    </svg>{' '}\n                                </a>\n\n                                <a\n                                    className={`noneview${info.Instagram}`}\n                                    href={info.Instagram}\n                                    target=\"_blank\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"icon icon-tabler icon-tabler-brand-instagram\"\n                                        width=\"44\"\n                                        height=\"44\"\n                                        viewBox=\"0 0 24 24\"\n                                        strokeWidth=\"0.8\"\n                                        stroke=\"white\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    >\n                                        <path\n                                            stroke=\"none\"\n                                            d=\"M0 0h24v24H0z\"\n                                            fill=\"none\"\n                                        />\n                                        <rect\n                                            x=\"4\"\n                                            y=\"4\"\n                                            width=\"16\"\n                                            height=\"16\"\n                                            rx=\"4\"\n                                        />\n                                        <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                                        <line\n                                            x1=\"16.5\"\n                                            y1=\"7.5\"\n                                            x2=\"16.5\"\n                                            y2=\"7.501\"\n                                        />\n                                    </svg>\n                                </a>\n\n                                <a\n                                    className={`noneview${info.Twitter}`}\n                                    href={info.Twitter}\n                                    target=\"_blank\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"icon icon-tabler icon-tabler-brand-twitter\"\n                                        width=\"44\"\n                                        height=\"44\"\n                                        viewBox=\"0 0 24 24\"\n                                        strokeWidth=\"0.8\"\n                                        stroke=\"white\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    >\n                                        <path\n                                            stroke=\"none\"\n                                            d=\"M0 0h24v24H0z\"\n                                            fill=\"none\"\n                                        />\n                                        <path d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\" />\n                                    </svg>\n                                </a>\n                                <div className={view}>\n                                    <a\n                                        className={`noneview${info.Twitch}`}\n                                        href={info.Twitch}\n                                        target=\"_blank\"\n                                    >\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            className=\"icon icon-tabler icon-tabler-brand-twitch\"\n                                            width=\"44\"\n                                            height=\"44\"\n                                            viewBox=\"0 0 24 24\"\n                                            strokeWidth=\"0.5\"\n                                            stroke=\"#ff4500\"\n                                            fill=\"none\"\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                        >\n                                            <path\n                                                stroke=\"none\"\n                                                d=\"M0 0h24v24H0z\"\n                                                fill=\"none\"\n                                            />\n                                            <path d=\"M4 5v11a1 1 0 0 0 1 1h2v4l4 -4h5.584c.266 0 .52 -.105 .707 -.293l2.415 -2.414c.187 -.188 .293 -.442 .293 -.708v-8.585a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1z\" />\n                                            <line\n                                                x1=\"16\"\n                                                y1=\"8\"\n                                                x2=\"16\"\n                                                y2=\"12\"\n                                            />\n                                            <line\n                                                x1=\"12\"\n                                                y1=\"8\"\n                                                x2=\"12\"\n                                                y2=\"12\"\n                                            />\n                                        </svg>\n                                    </a>\n                                </div>\n                            </div>\n                            <div className={info.Status}></div>\n\n                            <div className=\"reps\">\n                                <div className={`repCont ${info.System}s`}>\n                                    <div className={info.Rep}></div>\n                                </div>\n                            </div>\n\n                            <div className=\"gameCont\">\n                                <p>\n                                    Gamertag\n                                    <br></br>\n                                    <span>{info.Gamertag}</span>\n                                </p>\n                            </div>\n                            <div>\n                                <div className=\"statsCont\">\n                                    <p>\n                                        {' '}\n                                        <span>Archetype</span>\n                                        <br></br> {info.Archetype}\n                                    </p>\n                                    <p>\n                                        {' '}\n                                        <span>Position</span> <br></br>{' '}\n                                        {info.Position}\n                                    </p>\n                                    <p>\n                                        {' '}\n                                        <span>PlayStyle</span>\n                                        <br></br> {info.Type}\n                                    </p>\n                                </div>\n\n                                <div className=\"rangeContainer\">\n                                    <div className=\"rangeColumn\">\n                                        <div className=\"rangeConnt\">\n                                            <p>Overall</p>\n                                            {info.Overall}\n                                            <input\n                                                className=\"range\"\n                                                type=\"range\"\n                                                value={info.Overall}\n                                                OVR\n                                                min=\"0\"\n                                                max=\"100\"\n                                            />{' '}\n                                        </div>\n                                    </div>\n                                    <div className=\"rangeColumn\">\n                                        <div className=\"rangeConnt\">\n                                            <p> Winpercentage</p>\n                                            <input\n                                                className=\"range\"\n                                                type=\"range\"\n                                                value={info.Winpercentage}\n                                                min=\"0\"\n                                                max=\"100\"\n                                            />{' '}\n                                            {info.Winpercentage}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"bioCont\">\n                                <div className={`bioView ${info.System}s`}>\n                                    <p>\n                                        {' '}\n                                        Bio <br></br>\n                                        {info.Bio}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    One: state.getId.UserId,\n})\n\nexport default connect(mapStateToProps, { getId })(PlayerCard)\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Animation.js",["180","181","182"],"import React from 'react'\nimport { gsap, TweenMax, TimelineMax, Power3 } from 'gsap'\nimport { useState, useEffect } from 'react'\nconst Animation = () => {\n    let tl = new TimelineMax()\n\n    const div = document.querySelector('.Animation')\n\n    useEffect(() => {\n        tl.to('.Animation', 0.5, { display: 'none', ease: Power3.easeOut })\n    })\n\n    // .from(div,8,{css:{\"display\":'none'}})\n\n    return (\n        <div className=\"Animation\">\n            <div className=\"spinnerCont\">\n                <div className=\"lds-dual-ring\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Animation\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/axiosWithAuth.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/MyPlayer.js",["183","184","185","186","187","188","189","190","191"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { axiosWithAuth } from './axiosWithAuth'\nimport { getId } from '../actions/postActions'\nimport Animation from './Animation'\nimport { Link } from 'react-router-dom'\n\nconst MyPlayer = ({ One: { name, email, _id } }) => {\n    const [myPlayer, setMyPlayer] = useState(null)\n    const [state, setState] = useState({\n        Archetype: '',\n        Overall: '',\n        Position: '',\n        Rep: '',\n        System: '',\n        Type: '',\n        Winpercentage: '',\n        Gamertag: '',\n        Bio: '',\n        Youtube: '',\n        Instagram: '',\n        Twitter: '',\n        Twitch: '',\n        Status: 'online',\n    })\n\n    const [overallRange, setOverallRange] = useState()\n    const [userInfo, setUserInfo] = useState()\n    const [wpRange, setWpRange] = useState()\n    const [alert, setAlert] = useState('')\n    //   \"http://https://jobs-xmmtw.ondigitalocean.app//player/{ _id: 5fd9811cc0cd184690c65f07, __v: 0 }\"\n    const Info = window.localStorage.getItem('userInfo')\n\n    useEffect(() => {\n        axiosWithAuth()\n            .get(\n                `https://jobs-xmmtw.ondigitalocean.app/player/{ _id: ${Info}, __v: 0 }`\n            )\n            .then((res) => {\n                setMyPlayer(res.data)\n            })\n            .catch((err) => {})\n    }, [])\n\n    useEffect(() => {\n        axiosWithAuth()\n            .get('/login')\n            .then((res) => {\n                setUserInfo(res.data)\n            })\n    }, [])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        axiosWithAuth()\n            .post('/player', state)\n            .then((res) => {\n                window.location.replace('/find')\n            })\n            .catch((err) => {\n                setAlert('fill out all required feilds')\n            })\n    }\n\n    const onChange = (e) => {\n        let name = e.target.value\n        if (name.length < 3) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n    const onChange2 = (e) => {\n        let name = e.target.value\n        if (name.length < 30) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n\n    const onChange3 = (e) => {\n        let name = e.target.value\n        if (name.length < 200) {\n            setState((state) => ({\n                ...state,\n                [e.target.name]: e.target.value,\n            }))\n        }\n    }\n\n    const SelectChange = (e) => {\n        setState((state) => ({\n            ...state,\n            [e.target.name]: e.target[e.target.selectedIndex].value,\n        }))\n    }\n    const Playercardcreated = window.localStorage.getItem('Playercard')\n\n    const Form = () => {\n        if (myPlayer !== null && myPlayer !== undefined) {\n            return (\n                <div className=\"cont my\">\n                    <Animation />\n                    <div className=\"infoCont\">\n                        <div className={myPlayer.System}></div>\n                        <div className=\"mediaCont\">\n                            <a\n                                className={`noneview${myPlayer.Youtube}`}\n                                href={myPlayer.Youtube}\n                                target=\"_blank\"\n                            >\n                                {' '}\n                                className={`noneview${myPlayer.Youtube}`}\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-brand-youtube\"\n                                    width=\"44\"\n                                    height=\"44\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"0.8\"\n                                    stroke=\"white\"\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <rect\n                                        x=\"3\"\n                                        y=\"5\"\n                                        width=\"18\"\n                                        height=\"14\"\n                                        rx=\"4\"\n                                    />\n                                    <path d=\"M10 9l5 3l-5 3z\" />\n                                </svg>{' '}\n                            </a>\n\n                            <a\n                                className={`noneview${myPlayer.Youtube}`}\n                                href={myPlayer.Instagram}\n                                target=\"_blank\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-brand-instagram\"\n                                    width=\"44\"\n                                    height=\"44\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"0.8\"\n                                    stroke=\"white\"\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <rect\n                                        x=\"4\"\n                                        y=\"4\"\n                                        width=\"16\"\n                                        height=\"16\"\n                                        rx=\"4\"\n                                    />\n                                    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                                    <line\n                                        x1=\"16.5\"\n                                        y1=\"7.5\"\n                                        x2=\"16.5\"\n                                        y2=\"7.501\"\n                                    />\n                                </svg>\n                            </a>\n\n                            <a\n                                className={`noneview${myPlayer.Youtube}`}\n                                href={myPlayer.Twitter}\n                                target=\"_blank\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    className=\"icon icon-tabler icon-tabler-brand-twitter\"\n                                    width=\"44\"\n                                    height=\"44\"\n                                    viewBox=\"0 0 24 24\"\n                                    strokeWidth=\"0.8\"\n                                    stroke=\"white\"\n                                    fill=\"none\"\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                >\n                                    <path\n                                        stroke=\"none\"\n                                        d=\"M0 0h24v24H0z\"\n                                        fill=\"none\"\n                                    />\n                                    <path d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\" />\n                                </svg>\n                            </a>\n                            <div>\n                                <a\n                                    className={`noneview${myPlayer.Youtube}`}\n                                    href={myPlayer.Twitch}\n                                    target=\"_blank\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        className=\"icon icon-tabler icon-tabler-brand-twitch\"\n                                        width=\"44\"\n                                        height=\"44\"\n                                        viewBox=\"0 0 24 24\"\n                                        strokeWidth=\"0.5\"\n                                        stroke=\"#ff4500\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                    >\n                                        <path\n                                            stroke=\"none\"\n                                            d=\"M0 0h24v24H0z\"\n                                            fill=\"none\"\n                                        />\n                                        <path d=\"M4 5v11a1 1 0 0 0 1 1h2v4l4 -4h5.584c.266 0 .52 -.105 .707 -.293l2.415 -2.414c.187 -.188 .293 -.442 .293 -.708v-8.585a1 1 0 0 0 -1 -1h-14a1 1 0 0 0 -1 1z\" />\n                                        <line x1=\"16\" y1=\"8\" x2=\"16\" y2=\"12\" />\n                                        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\n                                    </svg>\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"reps\">\n                            <div className={`repCont ${myPlayer.System}s`}>\n                                <div className={myPlayer.Rep}></div>\n                            </div>\n                        </div>\n\n                        <div className=\"gameCont\">\n                            <p>\n                                Gamertag\n                                <br></br>\n                                <span>{myPlayer.Gamertag}</span>\n                            </p>\n                        </div>\n                        <p>Email: {email} </p>\n                        <p>Name : {name} </p>\n\n                        <div className=\"Win\">\n                            <input\n                                className=\"range\"\n                                type=\"range\"\n                                value={myPlayer.Overall}\n                                min=\"0\"\n                                max=\"100\"\n                            />{' '}\n                            {myPlayer.Overall} OVR\n                        </div>\n                        <div className=\"Win\">\n                            <input\n                                className=\"range\"\n                                type=\"range\"\n                                value={myPlayer.Winpercentage}\n                                min=\"0\"\n                                max=\"100\"\n                            />{' '}\n                            {myPlayer.Winpercentage} WP%\n                        </div>\n                        <div className=\"statsCont\">\n                            <p>\n                                {' '}\n                                <span>Archetype</span>\n                                <br></br> {myPlayer.Archetype}\n                            </p>\n                            <p>\n                                {' '}\n                                <span>Position</span> <br></br>{' '}\n                                {myPlayer.Position}\n                            </p>\n                            <p>\n                                {' '}\n                                <span>PlayStyle</span>\n                                <br></br> {myPlayer.Type}\n                            </p>\n                        </div>\n                        <div className=\"edit\">\n                            <Link to={`/edit/${Info}`}>Edit</Link>\n                        </div>\n                        <div className=\"bioCont my\">\n                            <div className={`bioView ${myPlayer.System}s`}>\n                                <p>\n                                    {' '}\n                                    Bio <br></br>\n                                    {myPlayer.Bio}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            const overallRanges = (e) => {\n                setOverallRange(e.target.value)\n                setState((state) => ({\n                    ...state,\n                    Overall: e.target.value,\n                }))\n            }\n\n            const wpRanges = (e) => {\n                setWpRange(e.target.value)\n                setState((state) => ({\n                    ...state,\n                    Winpercentage: e.target.value,\n                }))\n            }\n            return (\n                <div className=\"EditContainer\">\n                    <Animation />\n\n                    <form className=\"createPlayerCard\" onSubmit={handleSubmit}>\n                        <div className={alert}>\n                            <p> {alert}</p>\n                        </div>\n                        <select name=\"Rep\" onChange={SelectChange}>\n                            <option defaultValue> Whats your rep?</option>\n                            <option> Pro </option>\n                            <option> Allstar </option>\n                            <option> Superstar </option>\n                            <option> Elite </option>\n                            <option> Legend </option>\n                        </select>\n                        <select name=\"Type\" onChange={SelectChange}>\n                            <option defaultValue>\n                                {' '}\n                                What kind of player are you?{' '}\n                            </option>\n                            <option> Casual </option>\n                            <option> Competetive </option>\n                        </select>\n                        <select name=\"System\" onChange={SelectChange}>\n                            <option> What console are you on? </option>\n                            <option> PS5 </option>\n                            <option> PS4 </option>\n                            <option> XBOX SERIES </option>\n                            <option> XBOX ONE </option>\n                        </select>\n                        <select name=\"Position\" onChange={SelectChange}>\n                            <option> What position do you play?</option>\n                            <option> Point Gaurd </option>\n                            <option> Shooting Gaurd </option>\n                            <option> Small Forward </option>\n                            <option> Power Forward </option>\n                            <option> Center </option>\n                        </select>\n                        <input\n                            value={state.Gamertag}\n                            name=\"Gamertag\"\n                            onChange={onChange2}\n                            placeholder=\"Gamertag\"\n                        />\n                        <input\n                            value={state.Archetype}\n                            name=\"Archetype\"\n                            onChange={onChange2}\n                            placeholder=\"Archetype\"\n                        />\n                        <textarea\n                            className=\"bio\"\n                            value={state.Bio}\n                            name=\"Bio\"\n                            onChange={onChange3}\n                            placeholder=\"Bio\"\n                        />\n\n                        <input\n                            value={state.Twitter}\n                            name=\"Twitter\"\n                            onChange={onChange3}\n                            placeholder=\"*optional Twitter link \"\n                        />\n\n                        <input\n                            value={state.Instagram}\n                            name=\"Instagram\"\n                            onChange={onChange3}\n                            placeholder=\"*optional Instagram link  \"\n                        />\n\n                        <input\n                            value={state.Youtube}\n                            name=\"Youtube\"\n                            onChange={onChange3}\n                            placeholder=\"*optional Youtube link \"\n                        />\n\n                        <input\n                            value={state.Twitch}\n                            name=\"Twitch\"\n                            onChange={onChange3}\n                            placeholder=\" *optional Twitch link  \"\n                        />\n\n                        <div>\n                            <input\n                                className=\"range\"\n                                type=\"range\"\n                                onChange={overallRanges}\n                                min=\"60\"\n                                max=\"99\"\n                            />{' '}\n                            {overallRange} OVR\n                        </div>\n\n                        <div>\n                            <input\n                                className=\"range\"\n                                type=\"range\"\n                                onChange={wpRanges}\n                                min=\"0\"\n                                max=\"99\"\n                            />{' '}\n                            {wpRange} WP%\n                        </div>\n\n                        <button onClick={handleSubmit}>Submit </button>\n                    </form>\n                </div>\n            )\n        }\n    }\n\n    return Form()\n}\nconst mapStateToProps = (state) => ({\n    One: state.getId.UserId,\n})\n\nexport default connect(mapStateToProps, { getId })(MyPlayer)\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Home.js",["192","193","194","195","196","197","198"],"import React from 'react'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport Animation from './Animation'\nimport { useState, useEffect } from 'react'\nimport Mobile from '../images/mobile.png'\nimport Hero from '../images/Hero.png'\nconst Home = () => {\n    return (\n        <div className=\"welcome-cont\">\n            <Animation />\n            <div clasName=\"welcomeMain\">\n                <h1 className=\"welcome\">\n                    {' '}\n                    Team Finder team up with like minded players{' '}\n                </h1>\n\n                <p className=\"welcome\">\n                    team finder is free for a limited time\n                </p>\n            </div>\n            <div className=\"getStartedCont\">\n                <a className=\"getStarted\" href=\"/find\">\n                    {' '}\n                    Get Started\n                </a>\n            </div>\n            <div className=\"heroCont\">\n                <img className=\"hero \" src={Hero} />\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/MessageData.js",["199","200","201"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Forum from './Forum'\nconst MessageData = () => {\n    const [message, setMessage] = useState()\n    const token = window.localStorage.getItem('token')\n    useEffect(async () => {\n        try {\n            const name = await axios.get(\n                'https://jobs-xmmtw.ondigitalocean.app/Forum/messaging',\n                {\n                    headers: {\n                        authorization: token,\n                    },\n                }\n            )\n            setMessage(name.data)\n        } catch {\n            console.log('failed')\n        }\n    })\n    return (\n        <div>\n            <Forum name=\"hey\" />\n        </div>\n    )\n}\n\nexport default MessageData\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/ForgotPassword.js",["202"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ForgotPassword = () => {\n    const [email, setEmail] = useState()\n    const [sent, setSent] = useState()\n    const [view, setView] = useState()\n    const [alert, setAlert] = useState()\n\n    const Submit = (e) => {\n        e.preventDefault()\n        axios\n            .post('https://jobs-xmmtw.ondigitalocean.app/forgot', {\n                email: email,\n            })\n            .then((res) => {\n                setView('none')\n                setSent(\n                    <div className=\"linkSent\">\n                        <div className=\"forgotCont\">\n                            <div className=\"forgot\">\n                                <h1> Reset Linked Sent</h1>\n                                <p> check your email for reset link</p>\n                                <a href=\"/\">Go Home!</a>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n            .catch((err) => {\n                setAlert(\n                    <div className=\"alert\">\n                        Makle sure this email is connected to Team Finder\n                    </div>\n                )\n            })\n    }\n\n    const Change = (e) => {\n        setEmail(e.target.value.toLowerCase())\n    }\n\n    return (\n        <div className=\"forgotCont\">\n            <div className=\"forgot\">\n                {sent}\n                <div id=\"forgot\" className={view}>\n                    <form onSubmit={Submit}>\n                        {alert}\n                        <h3> Enter your email to get a reset link</h3>\n                        <input\n                            placeholder=\"Enter your email\"\n                            onChange={Change}\n                            value={email}\n                        />\n\n                        <button onClick={Submit}> Send</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Forum.js",["203","204","205","206","207","208"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nconst Forum = (props) => {\n    const [messages, setMessages] = useState([])\n    const [message, setMessage] = useState()\n    console.log(props.name)\n    const [messageName, setMessageName] = useState('messagebubble')\n    const name = window.localStorage.getItem('name')\n    const u = window.localStorage.getItem('userInfo')\n    const token = window.localStorage.getItem('token')\n    useEffect(async () => {\n        try {\n            const name = await axios.get(\n                'https://jobs-xmmtw.ondigitalocean.app/Forum/messaging',\n                {\n                    headers: {\n                        authorization: token,\n                    },\n                }\n            )\n            setMessages(name.data)\n        } catch {\n            console.log('failed')\n        }\n    }, [])\n    const Submit = (e) => {\n        e.preventDefault()\n        axios\n            .post(\n                'https://jobs-xmmtw.ondigitalocean.app/Forum/messaging',\n                {\n                    content: message,\n                    name: name,\n                    date: Date.now(),\n                },\n                {\n                    headers: {\n                        authorization: token,\n                    },\n                },\n                {}\n            )\n            .then((res) => {})\n            .catch((err) => {\n                alert(err)\n            })\n    }\n    const Change = (e) => {\n        setMessage(e.target.value)\n    }\n\n    useEffect(() => {\n        messages.map((item) => {\n            if (item.name === name) {\n                setMessageName('messagebubble me')\n            }\n        })\n    }, [])\n\n    return (\n        <div className=\"messageCont\">\n            <div className=\"Messages\">\n                {messages.map((item) => {\n                    if (item.name === name) {\n                        return (\n                            <div className=\"mesCont\">\n                                <div className=\"message\" key={item.id}>\n                                    <p className=\"messagebubble me\">\n                                        {item.content}\n                                    </p>\n                                    <p className=\"name\">{item.name}</p>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div className=\"message\" key={item.id}>\n                                <p className=\"messagebubble\">{item.content}</p>\n                                <p className=\"name\">{item.name}</p>\n                            </div>\n                        )\n                    }\n                })}\n                <form onSubmit={Submit}>\n                    <input onChange={Change} value={message} />\n                    <button onClick={Submit}>Send</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Forum\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Reset.js",["209","210"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nconst Reset = (props) => {\n    const [password, setpassword] = useState()\n    const [alert, setAlert] = useState()\n    const [view, setView] = useState()\n    const [expired, setExpired] = useState()\n    const [success, setSuccess] = useState()\n\n    const Change = (e) => {\n        setpassword(e.target.value)\n    }\n\n    const axiosWithAuth = () => {\n        const token = props.match.params.token\n        return axios.create({\n            headers: {\n                authorization: token,\n            },\n            baseURL: 'https://jobs-xmmtw.ondigitalocean.app/',\n        })\n    }\n\n    useEffect((e) => {\n        axiosWithAuth()\n            .get('login/verify')\n            .then((res) => {\n                setAlert(res.data)\n                setExpired(res.data)\n            })\n            .catch((err) => {\n                setView('none')\n                setExpired('Link Expired')\n            })\n    })\n\n    const Submit = (e) => {\n        e.preventDefault()\n        axios\n            .post('https://jobs-xmmtw.ondigitalocean.app/login/reset', {\n                id: props.match.params.id,\n                password: password,\n            })\n            .then((res) => {\n                window.location.replace('/find')\n                setSuccess('Sucessfully Updated reset')\n            })\n            .catch((err) => {})\n    }\n\n    return (\n        <div className=\"forgotCont\">\n            <div className=\"forgot\">\n                <form onSubmit={Submit}>\n                    {expired}\n                    <div className={view}>\n                        <p>Enter your new password </p>\n                        <input\n                            className={view}\n                            onChange={Change}\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"Enter your password\"\n                        />\n                        <button className={view} onClick={Submit}>\n                            {' '}\n                            Send{' '}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Reset\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/BadgeGrinders.js",["211","212"],"import React from 'react'\nimport Will from '../images/Will.jpg'\nconst BadgeGrinders = () => {\n    return (\n        <div className=\"BadgeGrindersCont\">\n            <h1> Trusted Badge Grinders</h1>\n            {/* <h1> Coming Soon!</h1> */}\n            <div className=\"infoCont one\">\n                <img src={Will} />\n                <div>\n                    <a target=\"_blank\" href=\"https://twitter.com/WillmotsTV\">\n                        {' '}\n                        Twitter: @WillMotsTv{' '}\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BadgeGrinders\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Auth/Login.js",["213","214","215","216","217","218"],"import React from 'react'\nimport { axiosWithAuth } from '../Components/axiosWithAuth'\nimport { Link, Redirect, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { useState, useEffect, useReducer, withRouter } from 'react'\n\nconst Login = (props) => {\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n    })\n\n    const [alert, setAlert] = useState()\n\n    let history = useHistory()\n    const token = window.localStorage.getItem('token')\n    if (token !== '' && token !== null) {\n        return <Redirect to=\"/\" />\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        axiosWithAuth()\n            .post('/login', state)\n            .then((res) => {\n                window.localStorage.setItem('token', res.data.token)(res)\n                window.location.reload()\n            })\n            .catch((err) => {\n                setAlert(\n                    <div className=\"alert\">\n                        'Either your email or password is incorrect'\n                    </div>\n                )\n            })\n    }\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState((state) => ({\n            ...state,\n            [id]: value.toLowerCase(),\n        }))\n    }\n\n    const handleChange2 = (e) => {\n        const { id, value } = e.target\n        setState((state) => ({\n            ...state,\n            [id]: value,\n        }))\n    }\n\n    return (\n        <div className=\"login-cont login\">\n            <div className=\"auth-cont\">\n                {/* <h4> Welcome login!</h4> */}\n\n                <form className=\"Login\" onSubmit={handleSubmit}>\n                    <p> Login to team finder</p>\n                    {alert}\n                    <input\n                        id=\"email\"\n                        placeholder=\"email\"\n                        value={state.email}\n                        onChange={handleChange}\n                    />\n                    <input\n                        type=\"password\"\n                        value={state.password}\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        onChange={handleChange2}\n                    />\n                    <Link className=\"blue\" to=\"/forgot\">\n                        {' '}\n                        forgot password ?\n                    </Link>\n                    <Link to=\"/signup\"> dont have an account signup</Link>\n\n                    <a className=\"authSubmit\" onClick={handleSubmit}>\n                        Login\n                    </a>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Auth/Signup.js",["219","220","221","222","223","224","225","226","227","228"],"import React from 'react'\nimport { axiosWithAuth } from '../Components/axiosWithAuth'\nimport { Link, Redirect, useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { useState, useEffect, useReducer, withRouter } from 'react'\n\nconst Signup = (props) => {\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        password: '',\n    })\n    const [reserved, setReserved] = useState()\n    const [alert, setAlert] = useState('')\n\n    const [submitted, setSubmitted] = useState()\n\n    let history = useHistory()\n    const token = window.localStorage.getItem('token')\n    if (token !== null && token !== '') {\n        return <Redirect to=\"/\" />\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axiosWithAuth()\n            .post('/signup', state)\n            .then((res) => {\n                window.localStorage.setItem('token', res.data.token)(res)\n                window.location.reload()\n            })\n            .catch((err) => {\n                setAlert(\n                    <div className=\"alert\">\n                        Make sure you fill out all feilds and this email isnt\n                        registered\n                    </div>\n                )\n            })\n    }\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState((state) => ({\n            ...state,\n            [id]: value.toLowerCase(),\n        }))\n    }\n\n    const handleChange2 = (e) => {\n        const { id, value } = e.target\n        setState((state) => ({\n            ...state,\n            [id]: value,\n        }))\n    }\n    // (state);\n\n    return (\n        <div className=\"login-cont login\">\n            <div className=\"auth-cont\">\n                <form className=\"Login\" onSubmit={handleSubmit}>\n                    {/* <h4> Welcome Welcome Create A Team Finder Account</h4> */}\n\n                    <h4> Welcome Create your Team Finder Account</h4>\n                    {alert}\n                    <input\n                        id=\"name\"\n                        placeholder=\"name\"\n                        value={state.name}\n                        onChange={handleChange}\n                    />\n                    <input\n                        id=\"email\"\n                        placeholder=\"email\"\n                        value={state.email}\n                        onChange={handleChange}\n                    />\n                    <input\n                        type=\"password\"\n                        value={state.password}\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        onChange={handleChange2}\n                    />\n\n                    <Link className=\"blue\" to=\"/forgot\">\n                        {' '}\n                        Forgot Password ?\n                    </Link>\n                    <Link className=\"authLinks\" to=\"/login\">\n                        {' '}\n                        Have an account login\n                    </Link>\n                    <a className=\"authSubmit\" onClick={handleSubmit}>\n                        Signup\n                    </a>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/actions/postActions.js",["229","230"],"import { POST_ID, GET_ID } from './types'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nconst token = window.localStorage.getItem('token')\nexport const getId = () => (dispatch) => {\n    if (token !== null && token !== '') {\n        axios\n            .get('https://jobs-xmmtw.ondigitalocean.app/login', {\n                headers: {\n                    authorization: token,\n                },\n            })\n            .then((UserId) => {\n                dispatch({ type: GET_ID, payload: UserId.data })\n                if (UserId !== null && UserId !== undefined) {\n                    const u = UserId.data._id\n                    window.localStorage.setItem('userInfo', u)\n                    window.localStorage.setItem('name', UserId.data.name)\n                }\n            })\n            .catch((error) => {\n                window.localStorage.removeItem('token')\n            })\n    }\n}\n","/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reducers/index.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/Components/Search.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/actions/types.js",[],"/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/reducers/UserReducer.js",["231","232"],"import { POST_ID, GET_ID } from '../actions/types'\n\nconst initialState = {\n    UserId: [],\n    UserInfo: {},\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_ID:\n            return {\n                ...state,\n                UserId: action.payload,\n            }\n        default:\n            return state\n    }\n}\n",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":6,"column":7,"nodeType":"239","messageId":"240","endLine":6,"endColumn":17},{"ruleId":"237","severity":1,"message":"241","line":5,"column":5,"nodeType":"239","messageId":"240","endLine":5,"endColumn":15},{"ruleId":"237","severity":1,"message":"242","line":6,"column":5,"nodeType":"239","messageId":"240","endLine":6,"endColumn":9},{"ruleId":"237","severity":1,"message":"243","line":13,"column":10,"nodeType":"239","messageId":"240","endLine":13,"endColumn":24},{"ruleId":"237","severity":1,"message":"244","line":13,"column":26,"nodeType":"239","messageId":"240","endLine":13,"endColumn":34},{"ruleId":"237","severity":1,"message":"245","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":12},{"ruleId":"237","severity":1,"message":"246","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":13},{"ruleId":"237","severity":1,"message":"247","line":22,"column":10,"nodeType":"239","messageId":"240","endLine":22,"endColumn":18},{"ruleId":"237","severity":1,"message":"248","line":23,"column":10,"nodeType":"239","messageId":"240","endLine":23,"endColumn":21},{"ruleId":"237","severity":1,"message":"249","line":23,"column":23,"nodeType":"239","messageId":"240","endLine":23,"endColumn":38},{"ruleId":"237","severity":1,"message":"250","line":28,"column":8,"nodeType":"239","messageId":"240","endLine":28,"endColumn":17},{"ruleId":"237","severity":1,"message":"251","line":33,"column":8,"nodeType":"239","messageId":"240","endLine":33,"endColumn":19},{"ruleId":"237","severity":1,"message":"252","line":37,"column":12,"nodeType":"239","messageId":"240","endLine":37,"endColumn":16},{"ruleId":"237","severity":1,"message":"253","line":37,"column":18,"nodeType":"239","messageId":"240","endLine":37,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":40,"column":8,"nodeType":"256","endLine":40,"endColumn":10,"suggestions":"257"},{"ruleId":"237","severity":1,"message":"258","line":45,"column":11,"nodeType":"239","messageId":"240","endLine":45,"endColumn":17},{"ruleId":"237","severity":1,"message":"259","line":56,"column":9,"nodeType":"239","messageId":"240","endLine":56,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":63,"column":43,"nodeType":"262","endLine":63,"endColumn":48},{"ruleId":"260","severity":1,"message":"261","line":65,"column":49,"nodeType":"262","endLine":65,"endColumn":54},{"ruleId":"237","severity":1,"message":"263","line":5,"column":5,"nodeType":"239","messageId":"240","endLine":5,"endColumn":10},{"ruleId":"237","severity":1,"message":"241","line":6,"column":5,"nodeType":"239","messageId":"240","endLine":6,"endColumn":15},{"ruleId":"237","severity":1,"message":"242","line":7,"column":5,"nodeType":"239","messageId":"240","endLine":7,"endColumn":9},{"ruleId":"237","severity":1,"message":"264","line":8,"column":5,"nodeType":"239","messageId":"240","endLine":8,"endColumn":15},{"ruleId":"237","severity":1,"message":"265","line":14,"column":8,"nodeType":"239","messageId":"240","endLine":14,"endColumn":12},{"ruleId":"237","severity":1,"message":"266","line":19,"column":12,"nodeType":"239","messageId":"240","endLine":19,"endColumn":18},{"ruleId":"237","severity":1,"message":"267","line":19,"column":20,"nodeType":"239","messageId":"240","endLine":19,"endColumn":29},{"ruleId":"237","severity":1,"message":"268","line":25,"column":12,"nodeType":"239","messageId":"240","endLine":25,"endColumn":19},{"ruleId":"237","severity":1,"message":"269","line":25,"column":21,"nodeType":"239","messageId":"240","endLine":25,"endColumn":31},{"ruleId":"254","severity":1,"message":"270","line":43,"column":5,"nodeType":"239","endLine":43,"endColumn":14,"suggestions":"271"},{"ruleId":"254","severity":1,"message":"272","line":52,"column":5,"nodeType":"239","endLine":52,"endColumn":14,"suggestions":"273"},{"ruleId":"254","severity":1,"message":"274","line":57,"column":5,"nodeType":"239","endLine":57,"endColumn":14,"suggestions":"275"},{"ruleId":"254","severity":1,"message":"276","line":63,"column":5,"nodeType":"239","endLine":63,"endColumn":14,"suggestions":"277"},{"ruleId":"254","severity":1,"message":"278","line":68,"column":5,"nodeType":"239","endLine":68,"endColumn":14,"suggestions":"279"},{"ruleId":"254","severity":1,"message":"280","line":74,"column":5,"nodeType":"239","endLine":74,"endColumn":14,"suggestions":"281"},{"ruleId":"254","severity":1,"message":"282","line":79,"column":5,"nodeType":"239","endLine":79,"endColumn":14,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":91,"column":29,"nodeType":"286","endLine":91,"endColumn":64},{"ruleId":"237","severity":1,"message":"287","line":13,"column":12,"nodeType":"239","messageId":"240","endLine":13,"endColumn":18},{"ruleId":"237","severity":1,"message":"288","line":13,"column":20,"nodeType":"239","messageId":"240","endLine":13,"endColumn":29},{"ruleId":"237","severity":1,"message":"289","line":15,"column":12,"nodeType":"239","messageId":"240","endLine":15,"endColumn":20},{"ruleId":"237","severity":1,"message":"290","line":16,"column":12,"nodeType":"239","messageId":"240","endLine":16,"endColumn":17},{"ruleId":"237","severity":1,"message":"291","line":16,"column":19,"nodeType":"239","messageId":"240","endLine":16,"endColumn":27},{"ruleId":"254","severity":1,"message":"292","line":37,"column":15,"nodeType":"293","endLine":65,"endColumn":6},{"ruleId":"254","severity":1,"message":"294","line":65,"column":8,"nodeType":"256","endLine":65,"endColumn":10,"suggestions":"295"},{"ruleId":"254","severity":1,"message":"255","line":68,"column":8,"nodeType":"256","endLine":68,"endColumn":10,"suggestions":"296"},{"ruleId":"237","severity":1,"message":"297","line":83,"column":11,"nodeType":"239","messageId":"240","endLine":83,"endColumn":19},{"ruleId":"237","severity":1,"message":"298","line":2,"column":31,"nodeType":"239","messageId":"240","endLine":2,"endColumn":41},{"ruleId":"237","severity":1,"message":"299","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":14},{"ruleId":"237","severity":1,"message":"300","line":7,"column":8,"nodeType":"239","messageId":"240","endLine":7,"endColumn":14},{"ruleId":"254","severity":1,"message":"255","line":14,"column":8,"nodeType":"256","endLine":14,"endColumn":10,"suggestions":"301"},{"ruleId":"237","severity":1,"message":"302","line":17,"column":12,"nodeType":"239","messageId":"240","endLine":17,"endColumn":20},{"ruleId":"237","severity":1,"message":"303","line":19,"column":18,"nodeType":"239","messageId":"240","endLine":19,"endColumn":25},{"ruleId":"254","severity":1,"message":"304","line":40,"column":8,"nodeType":"256","endLine":40,"endColumn":10,"suggestions":"305"},{"ruleId":"237","severity":1,"message":"306","line":127,"column":9,"nodeType":"239","messageId":"240","endLine":127,"endColumn":10},{"ruleId":"307","severity":1,"message":"308","line":136,"column":60,"nodeType":"262","endLine":136,"endColumn":75},{"ruleId":"307","severity":1,"message":"308","line":378,"column":37,"nodeType":"262","endLine":378,"endColumn":52},{"ruleId":"307","severity":1,"message":"308","line":411,"column":37,"nodeType":"262","endLine":411,"endColumn":52},{"ruleId":"307","severity":1,"message":"308","line":450,"column":37,"nodeType":"262","endLine":450,"endColumn":52},{"ruleId":"307","severity":1,"message":"308","line":476,"column":41,"nodeType":"262","endLine":476,"endColumn":56},{"ruleId":"237","severity":1,"message":"309","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":14},{"ruleId":"237","severity":1,"message":"310","line":2,"column":16,"nodeType":"239","messageId":"240","endLine":2,"endColumn":24},{"ruleId":"237","severity":1,"message":"311","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":18},{"ruleId":"237","severity":1,"message":"246","line":3,"column":8,"nodeType":"239","messageId":"240","endLine":3,"endColumn":13},{"ruleId":"237","severity":1,"message":"302","line":30,"column":12,"nodeType":"239","messageId":"240","endLine":30,"endColumn":20},{"ruleId":"254","severity":1,"message":"312","line":45,"column":8,"nodeType":"256","endLine":45,"endColumn":10,"suggestions":"313"},{"ruleId":"237","severity":1,"message":"297","line":67,"column":11,"nodeType":"239","messageId":"240","endLine":67,"endColumn":19},{"ruleId":"237","severity":1,"message":"314","line":102,"column":11,"nodeType":"239","messageId":"240","endLine":102,"endColumn":28},{"ruleId":"307","severity":1,"message":"308","line":115,"column":33,"nodeType":"262","endLine":115,"endColumn":48},{"ruleId":"307","severity":1,"message":"308","line":150,"column":33,"nodeType":"262","endLine":150,"endColumn":48},{"ruleId":"307","severity":1,"message":"308","line":189,"column":33,"nodeType":"262","endLine":189,"endColumn":48},{"ruleId":"307","severity":1,"message":"308","line":215,"column":37,"nodeType":"262","endLine":215,"endColumn":52},{"ruleId":"237","severity":1,"message":"315","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":23},{"ruleId":"237","severity":1,"message":"263","line":2,"column":25,"nodeType":"239","messageId":"240","endLine":2,"endColumn":30},{"ruleId":"237","severity":1,"message":"242","line":2,"column":32,"nodeType":"239","messageId":"240","endLine":2,"endColumn":36},{"ruleId":"237","severity":1,"message":"311","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":18},{"ruleId":"237","severity":1,"message":"316","line":4,"column":20,"nodeType":"239","messageId":"240","endLine":4,"endColumn":29},{"ruleId":"237","severity":1,"message":"317","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":28,"column":17,"nodeType":"286","endLine":28,"endColumn":53},{"ruleId":"237","severity":1,"message":"318","line":5,"column":12,"nodeType":"239","messageId":"240","endLine":5,"endColumn":19},{"ruleId":"254","severity":1,"message":"319","line":7,"column":5,"nodeType":"239","endLine":7,"endColumn":14,"suggestions":"320"},{"ruleId":"254","severity":1,"message":"292","line":7,"column":15,"nodeType":"293","endLine":21,"endColumn":6},{"ruleId":"237","severity":1,"message":"316","line":2,"column":20,"nodeType":"239","messageId":"240","endLine":2,"endColumn":29},{"ruleId":"237","severity":1,"message":"321","line":7,"column":12,"nodeType":"239","messageId":"240","endLine":7,"endColumn":23},{"ruleId":"237","severity":1,"message":"322","line":9,"column":11,"nodeType":"239","messageId":"240","endLine":9,"endColumn":12},{"ruleId":"254","severity":1,"message":"292","line":11,"column":15,"nodeType":"293","endLine":25,"endColumn":6},{"ruleId":"254","severity":1,"message":"304","line":25,"column":8,"nodeType":"256","endLine":25,"endColumn":10,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":53,"column":29,"nodeType":"293","messageId":"326","endLine":53,"endColumn":31},{"ruleId":"254","severity":1,"message":"327","line":58,"column":8,"nodeType":"256","endLine":58,"endColumn":10,"suggestions":"328"},{"ruleId":"237","severity":1,"message":"329","line":6,"column":12,"nodeType":"239","messageId":"240","endLine":6,"endColumn":17},{"ruleId":"237","severity":1,"message":"330","line":9,"column":12,"nodeType":"239","messageId":"240","endLine":9,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":9,"column":17,"nodeType":"286","endLine":9,"endColumn":35},{"ruleId":"307","severity":1,"message":"308","line":11,"column":24,"nodeType":"262","endLine":11,"endColumn":39},{"ruleId":"237","severity":1,"message":"246","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"316","line":5,"column":20,"nodeType":"239","messageId":"240","endLine":5,"endColumn":29},{"ruleId":"237","severity":1,"message":"298","line":5,"column":31,"nodeType":"239","messageId":"240","endLine":5,"endColumn":41},{"ruleId":"237","severity":1,"message":"241","line":5,"column":43,"nodeType":"239","messageId":"240","endLine":5,"endColumn":53},{"ruleId":"237","severity":1,"message":"259","line":15,"column":9,"nodeType":"239","messageId":"240","endLine":15,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":81,"column":21,"nodeType":"286","endLine":81,"endColumn":70},{"ruleId":"237","severity":1,"message":"246","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":13},{"ruleId":"237","severity":1,"message":"316","line":5,"column":20,"nodeType":"239","messageId":"240","endLine":5,"endColumn":29},{"ruleId":"237","severity":1,"message":"298","line":5,"column":31,"nodeType":"239","messageId":"240","endLine":5,"endColumn":41},{"ruleId":"237","severity":1,"message":"241","line":5,"column":43,"nodeType":"239","messageId":"240","endLine":5,"endColumn":53},{"ruleId":"237","severity":1,"message":"333","line":13,"column":12,"nodeType":"239","messageId":"240","endLine":13,"endColumn":20},{"ruleId":"237","severity":1,"message":"334","line":13,"column":22,"nodeType":"239","messageId":"240","endLine":13,"endColumn":33},{"ruleId":"237","severity":1,"message":"335","line":16,"column":12,"nodeType":"239","messageId":"240","endLine":16,"endColumn":21},{"ruleId":"237","severity":1,"message":"336","line":16,"column":23,"nodeType":"239","messageId":"240","endLine":16,"endColumn":35},{"ruleId":"237","severity":1,"message":"259","line":18,"column":9,"nodeType":"239","messageId":"240","endLine":18,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":95,"column":21,"nodeType":"286","endLine":95,"endColumn":70},{"ruleId":"237","severity":1,"message":"337","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":17},{"ruleId":"237","severity":1,"message":"316","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":19},{"ruleId":"237","severity":1,"message":"337","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":17},{"ruleId":"338","severity":1,"message":"339","line":8,"column":1,"nodeType":"340","endLine":18,"endColumn":2},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],"no-unused-vars","'middleware' is assigned a value but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'Link' is defined but never used.","'browserHistory' is defined but never used.","'Redirect' is defined but never used.","'logo' is defined but never used.","'axios' is defined but never used.","'Provider' is defined but never used.","'createStore' is defined but never used.","'applyMiddleware' is defined but never used.","'Animation' is defined but never used.","'MessageData' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["343"],"'userId' is assigned a value but never used.","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Route' is defined but never used.","'useHistory' is defined but never used.","'Home' is defined but never used.","'color4' is assigned a value but never used.","'setColor4' is assigned a value but never used.","'active4' is assigned a value but never used.","'setActive4' is assigned a value but never used.","React Hook useEffect contains a call to 'setView'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["344"],"React Hook useEffect contains a call to 'setActive1'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["345"],"React Hook useEffect contains a call to 'setColor1'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["346"],"React Hook useEffect contains a call to 'setActive2'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.One._id] as a second argument to the useEffect Hook.",["347"],"React Hook useEffect contains a call to 'setColor2'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.One._id] as a second argument to the useEffect Hook.",["348"],"React Hook useEffect contains a call to 'setColor3'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["349"],"React Hook useEffect contains a call to 'setActive3'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["350"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'alerts' is assigned a value but never used.","'setAlerts' is assigned a value but never used.","'myPlayer' is assigned a value but never used.","'saved' is assigned a value but never used.","'setSaved' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'Info' and 'token'. Either include them or remove the dependency array.",["351"],["352"],"'onChange' is assigned a value but never used.","'useReducer' is defined but never used.","'Search' is defined but never used.","'search' is defined but never used.",["353"],"'userInfo' is assigned a value but never used.","'setView' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["354"],"'s' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'gsap' is defined but never used.","'TweenMax' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'Info'. Either include it or remove the dependency array.",["355"],"'Playercardcreated' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'useEffect' is defined but never used.","'Mobile' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect contains a call to 'setMessage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["356"],"'messageName' is assigned a value but never used.","'u' is assigned a value but never used.",["357"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'messages' and 'name'. Either include them or remove the dependency array.",["358"],"'alert' is assigned a value but never used.","'success' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'reserved' is assigned a value but never used.","'setReserved' is assigned a value but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'POST_ID' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"363","fix":"365"},{"desc":"366","fix":"367"},{"desc":"366","fix":"368"},{"desc":"363","fix":"369"},{"desc":"363","fix":"370"},{"desc":"371","fix":"372"},{"desc":"359","fix":"373"},{"desc":"359","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"361","fix":"379"},{"desc":"375","fix":"380"},{"desc":"381","fix":"382"},"Update the dependencies array to be: [props]",{"range":"383","text":"384"},"Add dependencies array: [token]",{"range":"385","text":"386"},"Add dependencies array: []",{"range":"387","text":"388"},{"range":"389","text":"388"},"Add dependencies array: [props.One._id]",{"range":"390","text":"391"},{"range":"392","text":"391"},{"range":"393","text":"388"},{"range":"394","text":"388"},"Update the dependencies array to be: [Info, token]",{"range":"395","text":"396"},{"range":"397","text":"384"},{"range":"398","text":"384"},"Update the dependencies array to be: [token]",{"range":"399","text":"400"},"Update the dependencies array to be: [Info]",{"range":"401","text":"402"},{"range":"403","text":"386"},{"range":"404","text":"400"},"Update the dependencies array to be: [messages, name]",{"range":"405","text":"406"},[1322,1324],"[props]",[1485,1485],", [token]",[1659,1659],", []",[1816,1816],[1985,1985],", [props.One._id]",[2167,2167],[2329,2329],[2476,2476],[2181,2183],"[Info, token]",[2236,2238],[472,474],[1436,1438],"[token]",[1399,1401],"[Info]",[641,641],[867,869],[1702,1704],"[messages, name]"]