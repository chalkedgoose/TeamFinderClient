{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"./namespaces\"),\n    HTML_NS = _require.HTML_NS;\n\nvar _require2 = require(\"./create-element\"),\n    createElement = _require2.createElement,\n    getValidTagNames = _require2.getValidTagNames;\n\nvar _require3 = require(\"../generated/utils\"),\n    implForWrapper = _require3.implForWrapper,\n    wrapperForImpl = _require3.wrapperForImpl; // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-already-constructed-marker\n\n\nvar ALREADY_CONSTRUCTED_MARKER = Symbol(\"already-constructed-marker\"); // https://html.spec.whatwg.org/multipage/dom.html#htmlconstructor\n\nfunction HTMLConstructor(globalObject, constructorName, newTarget) {\n  var registry = implForWrapper(globalObject.customElements);\n\n  if (newTarget === HTMLConstructor) {\n    throw new TypeError(\"Invalid constructor\");\n  }\n\n  var definition = registry._customElementDefinitions.find(function (entry) {\n    return entry.ctor === newTarget;\n  });\n\n  if (definition === undefined) {\n    throw new TypeError(\"Invalid constructor, the constructor is not part of the custom element registry\");\n  }\n\n  var isValue = null;\n\n  if (definition.localName === definition.name) {\n    if (constructorName !== \"HTMLElement\") {\n      throw new TypeError(\"Invalid constructor, autonomous custom element should extend from HTMLElement\");\n    }\n  } else {\n    var validLocalNames = getValidTagNames(HTML_NS, constructorName);\n\n    if (!validLocalNames.includes(definition.localName)) {\n      throw new TypeError(\"\".concat(definition.localName, \" is not valid local name for \").concat(constructorName));\n    }\n\n    isValue = definition.name;\n  }\n\n  var prototype = newTarget.prototype;\n\n  if (prototype === null || typeof prototype !== \"object\") {\n    // The following line deviates from the specification. The HTMLElement prototype should be retrieved from the realm\n    // associated with the \"new.target\". Because it is impossible to get such information in jsdom, we fallback to the\n    // HTMLElement prototype associated with the current object.\n    prototype = globalObject.HTMLElement.prototype;\n  }\n\n  if (definition.constructionStack.length === 0) {\n    var documentImpl = implForWrapper(globalObject.document);\n\n    var _elementImpl = createElement(documentImpl, definition.localName, HTML_NS);\n\n    var _element = wrapperForImpl(_elementImpl);\n\n    Object.setPrototypeOf(_element, prototype);\n    _elementImpl._ceState = \"custom\";\n    _elementImpl._ceDefinition = definition;\n    _elementImpl._isValue = isValue;\n    return _element;\n  }\n\n  var elementImpl = definition.constructionStack[definition.constructionStack.length - 1];\n  var element = wrapperForImpl(elementImpl);\n\n  if (elementImpl === ALREADY_CONSTRUCTED_MARKER) {\n    throw new TypeError(\"This instance is already constructed\");\n  }\n\n  Object.setPrototypeOf(element, prototype);\n  definition.constructionStack[definition.constructionStack.length - 1] = ALREADY_CONSTRUCTED_MARKER;\n  return element;\n}\n\nmodule.exports = {\n  HTMLConstructor: HTMLConstructor\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/helpers/html-constructor.js"],"names":["require","HTML_NS","createElement","getValidTagNames","implForWrapper","wrapperForImpl","ALREADY_CONSTRUCTED_MARKER","Symbol","HTMLConstructor","globalObject","constructorName","newTarget","registry","customElements","TypeError","definition","_customElementDefinitions","find","entry","ctor","undefined","isValue","localName","name","validLocalNames","includes","prototype","HTMLElement","constructionStack","length","documentImpl","document","elementImpl","element","Object","setPrototypeOf","_ceState","_ceDefinition","_isValue","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst { HTML_NS } = require(\"./namespaces\");\nconst { createElement, getValidTagNames } = require(\"./create-element\");\n\nconst { implForWrapper, wrapperForImpl } = require(\"../generated/utils\");\n\n// https://html.spec.whatwg.org/multipage/custom-elements.html#concept-already-constructed-marker\nconst ALREADY_CONSTRUCTED_MARKER = Symbol(\"already-constructed-marker\");\n\n// https://html.spec.whatwg.org/multipage/dom.html#htmlconstructor\nfunction HTMLConstructor(globalObject, constructorName, newTarget) {\n  const registry = implForWrapper(globalObject.customElements);\n  if (newTarget === HTMLConstructor) {\n    throw new TypeError(\"Invalid constructor\");\n  }\n\n  const definition = registry._customElementDefinitions.find(entry => entry.ctor === newTarget);\n  if (definition === undefined) {\n    throw new TypeError(\"Invalid constructor, the constructor is not part of the custom element registry\");\n  }\n\n  let isValue = null;\n\n  if (definition.localName === definition.name) {\n    if (constructorName !== \"HTMLElement\") {\n      throw new TypeError(\"Invalid constructor, autonomous custom element should extend from HTMLElement\");\n    }\n  } else {\n    const validLocalNames = getValidTagNames(HTML_NS, constructorName);\n    if (!validLocalNames.includes(definition.localName)) {\n      throw new TypeError(`${definition.localName} is not valid local name for ${constructorName}`);\n    }\n\n    isValue = definition.name;\n  }\n\n  let { prototype } = newTarget;\n\n  if (prototype === null || typeof prototype !== \"object\") {\n    // The following line deviates from the specification. The HTMLElement prototype should be retrieved from the realm\n    // associated with the \"new.target\". Because it is impossible to get such information in jsdom, we fallback to the\n    // HTMLElement prototype associated with the current object.\n    prototype = globalObject.HTMLElement.prototype;\n  }\n\n  if (definition.constructionStack.length === 0) {\n    const documentImpl = implForWrapper(globalObject.document);\n\n    const elementImpl = createElement(documentImpl, definition.localName, HTML_NS);\n\n    const element = wrapperForImpl(elementImpl);\n    Object.setPrototypeOf(element, prototype);\n\n    elementImpl._ceState = \"custom\";\n    elementImpl._ceDefinition = definition;\n    elementImpl._isValue = isValue;\n\n    return element;\n  }\n\n  const elementImpl = definition.constructionStack[definition.constructionStack.length - 1];\n  const element = wrapperForImpl(elementImpl);\n\n  if (elementImpl === ALREADY_CONSTRUCTED_MARKER) {\n    throw new TypeError(\"This instance is already constructed\");\n  }\n\n  Object.setPrototypeOf(element, prototype);\n\n  definition.constructionStack[definition.constructionStack.length - 1] = ALREADY_CONSTRUCTED_MARKER;\n\n  return element;\n}\n\nmodule.exports = {\n  HTMLConstructor\n};\n"]},"metadata":{},"sourceType":"script"}