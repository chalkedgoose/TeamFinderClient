{"ast":null,"code":"\"use strict\";\n\nfunction isLeapYear(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#number-of-days-in-month-month-of-year-year\n\n\nvar daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction numberOfDaysInMonthOfYear(month, year) {\n  if (month === 2 && isLeapYear(year)) {\n    return 29;\n  }\n\n  return daysInMonth[month - 1];\n}\n\nvar monthRe = /^([0-9]{4,})-([0-9]{2})$/; // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-month-string\n\nfunction parseMonthString(str) {\n  var matches = monthRe.exec(str);\n\n  if (!matches) {\n    return null;\n  }\n\n  var year = Number(matches[1]);\n\n  if (year <= 0) {\n    return null;\n  }\n\n  var month = Number(matches[2]);\n\n  if (month < 1 || month > 12) {\n    return null;\n  }\n\n  return {\n    year: year,\n    month: month\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-month-string\n\n\nfunction isValidMonthString(str) {\n  return parseMonthString(str) !== null;\n}\n\nfunction serializeMonth(_ref) {\n  var year = _ref.year,\n      month = _ref.month;\n  var yearStr = \"\".concat(year).padStart(4, \"0\");\n  var monthStr = \"\".concat(month).padStart(2, \"0\");\n  return \"\".concat(yearStr, \"-\").concat(monthStr);\n}\n\nvar dateRe = /^([0-9]{4,})-([0-9]{2})-([0-9]{2})$/; // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-date-string\n\nfunction parseDateString(str) {\n  var matches = dateRe.exec(str);\n\n  if (!matches) {\n    return null;\n  }\n\n  var year = Number(matches[1]);\n\n  if (year <= 0) {\n    return null;\n  }\n\n  var month = Number(matches[2]);\n\n  if (month < 1 || month > 12) {\n    return null;\n  }\n\n  var day = Number(matches[3]);\n\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, year)) {\n    return null;\n  }\n\n  return {\n    year: year,\n    month: month,\n    day: day\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-date-string\n\n\nfunction isValidDateString(str) {\n  return parseDateString(str) !== null;\n}\n\nfunction serializeDate(date) {\n  var dayStr = \"\".concat(date.day).padStart(2, \"0\");\n  return \"\".concat(serializeMonth(date), \"-\").concat(dayStr);\n}\n\nvar yearlessDateRe = /^(?:--)?([0-9]{2})-([0-9]{2})$/; // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-yearless-date-string\n\nfunction parseYearlessDateString(str) {\n  var matches = yearlessDateRe.exec(str);\n\n  if (!matches) {\n    return null;\n  }\n\n  var month = Number(matches[1]);\n\n  if (month < 1 || month > 12) {\n    return null;\n  }\n\n  var day = Number(matches[2]);\n\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, 4)) {\n    return null;\n  }\n\n  return {\n    month: month,\n    day: day\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-yearless-date-string\n\n\nfunction isValidYearlessDateString(str) {\n  return parseYearlessDateString(str) !== null;\n}\n\nfunction serializeYearlessDate(_ref2) {\n  var month = _ref2.month,\n      day = _ref2.day;\n  var monthStr = \"\".concat(month).padStart(2, \"0\");\n  var dayStr = \"\".concat(day).padStart(2, \"0\");\n  return \"\".concat(monthStr, \"-\").concat(dayStr);\n}\n\nvar timeRe = /^([0-9]{2}):([0-9]{2})(?::([0-9]{2}(?:\\.([0-9]{1,3}))?))?$/; // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-time-string\n\nfunction parseTimeString(str) {\n  var matches = timeRe.exec(str);\n\n  if (!matches) {\n    return null;\n  }\n\n  var hour = Number(matches[1]);\n\n  if (hour < 0 || hour > 23) {\n    return null;\n  }\n\n  var minute = Number(matches[2]);\n\n  if (minute < 0 || minute > 59) {\n    return null;\n  }\n\n  var second = matches[3] !== undefined ? Math.trunc(Number(matches[3])) : 0;\n\n  if (second < 0 || second >= 60) {\n    return null;\n  }\n\n  var millisecond = matches[4] !== undefined ? Number(matches[4]) : 0;\n  return {\n    hour: hour,\n    minute: minute,\n    second: second,\n    millisecond: millisecond\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-time-string\n\n\nfunction isValidTimeString(str) {\n  return parseTimeString(str) !== null;\n}\n\nfunction serializeTime(_ref3) {\n  var hour = _ref3.hour,\n      minute = _ref3.minute,\n      second = _ref3.second,\n      millisecond = _ref3.millisecond;\n  var hourStr = \"\".concat(hour).padStart(2, \"0\");\n  var minuteStr = \"\".concat(minute).padStart(2, \"0\");\n\n  if (second === 0 && millisecond === 0) {\n    return \"\".concat(hourStr, \":\").concat(minuteStr);\n  }\n\n  var secondStr = \"\".concat(second).padStart(2, \"0\");\n  var millisecondStr = \"\".concat(millisecond).padStart(3, \"0\");\n  return \"\".concat(hourStr, \":\").concat(minuteStr, \":\").concat(secondStr, \".\").concat(millisecondStr);\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-local-date-and-time-string\n\n\nfunction parseLocalDateAndTimeString(str) {\n  var normalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var separatorIdx = str.indexOf(\"T\");\n\n  if (separatorIdx < 0 && !normalized) {\n    separatorIdx = str.indexOf(\" \");\n  }\n\n  if (separatorIdx < 0) {\n    return null;\n  }\n\n  var date = parseDateString(str.slice(0, separatorIdx));\n\n  if (date === null) {\n    return null;\n  }\n\n  var time = parseTimeString(str.slice(separatorIdx + 1));\n\n  if (time === null) {\n    return null;\n  }\n\n  return {\n    date: date,\n    time: time\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-local-date-and-time-string\n\n\nfunction isValidLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str) !== null;\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-normalised-local-date-and-time-string\n\n\nfunction isValidNormalizedLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str, true) !== null;\n}\n\nfunction serializeNormalizedDateAndTime(_ref4) {\n  var date = _ref4.date,\n      time = _ref4.time;\n  return \"\".concat(serializeDate(date), \"T\").concat(serializeTime(time));\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#week-number-of-the-last-day\n// https://stackoverflow.com/a/18538272/1937836\n\n\nfunction weekNumberOfLastDay(year) {\n  var jan1 = new Date(year, 0);\n  return jan1.getDay() === 4 || isLeapYear(year) && jan1.getDay() === 3 ? 53 : 52;\n}\n\nvar weekRe = /^([0-9]{4,5})-W([0-9]{2})$/; // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-week-string\n\nfunction parseWeekString(str) {\n  var matches = weekRe.exec(str);\n\n  if (!matches) {\n    return null;\n  }\n\n  var year = Number(matches[1]);\n\n  if (year <= 0) {\n    return null;\n  }\n\n  var week = Number(matches[2]);\n\n  if (week < 1 || week > weekNumberOfLastDay(year)) {\n    return null;\n  }\n\n  return {\n    year: year,\n    week: week\n  };\n} // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string\n\n\nfunction isValidWeekString(str) {\n  return parseWeekString(str) !== null;\n}\n\nfunction serializeWeek(_ref5) {\n  var year = _ref5.year,\n      week = _ref5.week;\n  var yearStr = \"\".concat(year).padStart(4, \"0\");\n  var weekStr = \"\".concat(week).padStart(2, \"0\");\n  return \"\".concat(yearStr, \"-W\").concat(weekStr);\n} // https://stackoverflow.com/a/6117889\n\n\nfunction parseDateAsWeek(originalDate) {\n  var dayInSeconds = 86400000; // Copy date so don't modify original\n\n  var date = new Date(Date.UTC(originalDate.getUTCFullYear(), originalDate.getUTCMonth(), originalDate.getUTCDate())); // Set to nearest Thursday: current date + 4 - current day number\n  // Make Sunday's day number 7\n\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7)); // Get first day of year\n\n  var yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1)); // Calculate full weeks to nearest Thursday\n\n  var week = Math.ceil(((date - yearStart) / dayInSeconds + 1) / 7);\n  return {\n    year: date.getUTCFullYear(),\n    week: week\n  };\n}\n\nfunction isDate(obj) {\n  try {\n    Date.prototype.valueOf.call(obj);\n    return true;\n  } catch (_unused) {\n    return false;\n  }\n}\n\nmodule.exports = {\n  isDate: isDate,\n  numberOfDaysInMonthOfYear: numberOfDaysInMonthOfYear,\n  parseMonthString: parseMonthString,\n  isValidMonthString: isValidMonthString,\n  serializeMonth: serializeMonth,\n  parseDateString: parseDateString,\n  isValidDateString: isValidDateString,\n  serializeDate: serializeDate,\n  parseYearlessDateString: parseYearlessDateString,\n  isValidYearlessDateString: isValidYearlessDateString,\n  serializeYearlessDate: serializeYearlessDate,\n  parseTimeString: parseTimeString,\n  isValidTimeString: isValidTimeString,\n  serializeTime: serializeTime,\n  parseLocalDateAndTimeString: parseLocalDateAndTimeString,\n  isValidLocalDateAndTimeString: isValidLocalDateAndTimeString,\n  isValidNormalizedLocalDateAndTimeString: isValidNormalizedLocalDateAndTimeString,\n  serializeNormalizedDateAndTime: serializeNormalizedDateAndTime,\n  parseDateAsWeek: parseDateAsWeek,\n  weekNumberOfLastDay: weekNumberOfLastDay,\n  parseWeekString: parseWeekString,\n  isValidWeekString: isValidWeekString,\n  serializeWeek: serializeWeek\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/helpers/dates-and-times.js"],"names":["isLeapYear","year","daysInMonth","numberOfDaysInMonthOfYear","month","monthRe","parseMonthString","str","matches","exec","Number","isValidMonthString","serializeMonth","yearStr","padStart","monthStr","dateRe","parseDateString","day","isValidDateString","serializeDate","date","dayStr","yearlessDateRe","parseYearlessDateString","isValidYearlessDateString","serializeYearlessDate","timeRe","parseTimeString","hour","minute","second","undefined","Math","trunc","millisecond","isValidTimeString","serializeTime","hourStr","minuteStr","secondStr","millisecondStr","parseLocalDateAndTimeString","normalized","separatorIdx","indexOf","slice","time","isValidLocalDateAndTimeString","isValidNormalizedLocalDateAndTimeString","serializeNormalizedDateAndTime","weekNumberOfLastDay","jan1","Date","getDay","weekRe","parseWeekString","week","isValidWeekString","serializeWeek","weekStr","parseDateAsWeek","originalDate","dayInSeconds","UTC","getUTCFullYear","getUTCMonth","getUTCDate","setUTCDate","getUTCDay","yearStart","ceil","isDate","obj","prototype","valueOf","call","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction isLeapYear(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#number-of-days-in-month-month-of-year-year\nconst daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction numberOfDaysInMonthOfYear(month, year) {\n  if (month === 2 && isLeapYear(year)) {\n    return 29;\n  }\n  return daysInMonth[month - 1];\n}\n\nconst monthRe = /^([0-9]{4,})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-month-string\nfunction parseMonthString(str) {\n  const matches = monthRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  return { year, month };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-month-string\nfunction isValidMonthString(str) {\n  return parseMonthString(str) !== null;\n}\nfunction serializeMonth({ year, month }) {\n  const yearStr = `${year}`.padStart(4, \"0\");\n  const monthStr = `${month}`.padStart(2, \"0\");\n  return `${yearStr}-${monthStr}`;\n}\n\nconst dateRe = /^([0-9]{4,})-([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-date-string\nfunction parseDateString(str) {\n  const matches = dateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const month = Number(matches[2]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[3]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, year)) {\n    return null;\n  }\n  return { year, month, day };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-date-string\nfunction isValidDateString(str) {\n  return parseDateString(str) !== null;\n}\nfunction serializeDate(date) {\n  const dayStr = `${date.day}`.padStart(2, \"0\");\n  return `${serializeMonth(date)}-${dayStr}`;\n}\n\nconst yearlessDateRe = /^(?:--)?([0-9]{2})-([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-yearless-date-string\nfunction parseYearlessDateString(str) {\n  const matches = yearlessDateRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const month = Number(matches[1]);\n  if (month < 1 || month > 12) {\n    return null;\n  }\n  const day = Number(matches[2]);\n  if (day < 1 || day > numberOfDaysInMonthOfYear(month, 4)) {\n    return null;\n  }\n  return { month, day };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-yearless-date-string\nfunction isValidYearlessDateString(str) {\n  return parseYearlessDateString(str) !== null;\n}\nfunction serializeYearlessDate({ month, day }) {\n  const monthStr = `${month}`.padStart(2, \"0\");\n  const dayStr = `${day}`.padStart(2, \"0\");\n  return `${monthStr}-${dayStr}`;\n}\n\nconst timeRe = /^([0-9]{2}):([0-9]{2})(?::([0-9]{2}(?:\\.([0-9]{1,3}))?))?$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-time-string\nfunction parseTimeString(str) {\n  const matches = timeRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const hour = Number(matches[1]);\n  if (hour < 0 || hour > 23) {\n    return null;\n  }\n  const minute = Number(matches[2]);\n  if (minute < 0 || minute > 59) {\n    return null;\n  }\n  const second = matches[3] !== undefined ? Math.trunc(Number(matches[3])) : 0;\n  if (second < 0 || second >= 60) {\n    return null;\n  }\n  const millisecond = matches[4] !== undefined ? Number(matches[4]) : 0;\n  return { hour, minute, second, millisecond };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-time-string\nfunction isValidTimeString(str) {\n  return parseTimeString(str) !== null;\n}\n\nfunction serializeTime({ hour, minute, second, millisecond }) {\n  const hourStr = `${hour}`.padStart(2, \"0\");\n  const minuteStr = `${minute}`.padStart(2, \"0\");\n  if (second === 0 && millisecond === 0) {\n    return `${hourStr}:${minuteStr}`;\n  }\n  const secondStr = `${second}`.padStart(2, \"0\");\n  const millisecondStr = `${millisecond}`.padStart(3, \"0\");\n  return `${hourStr}:${minuteStr}:${secondStr}.${millisecondStr}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-local-date-and-time-string\nfunction parseLocalDateAndTimeString(str, normalized = false) {\n  let separatorIdx = str.indexOf(\"T\");\n  if (separatorIdx < 0 && !normalized) {\n    separatorIdx = str.indexOf(\" \");\n  }\n  if (separatorIdx < 0) {\n    return null;\n  }\n  const date = parseDateString(str.slice(0, separatorIdx));\n  if (date === null) {\n    return null;\n  }\n  const time = parseTimeString(str.slice(separatorIdx + 1));\n  if (time === null) {\n    return null;\n  }\n  return { date, time };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-local-date-and-time-string\nfunction isValidLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str) !== null;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-normalised-local-date-and-time-string\nfunction isValidNormalizedLocalDateAndTimeString(str) {\n  return parseLocalDateAndTimeString(str, true) !== null;\n}\nfunction serializeNormalizedDateAndTime({ date, time }) {\n  return `${serializeDate(date)}T${serializeTime(time)}`;\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#week-number-of-the-last-day\n// https://stackoverflow.com/a/18538272/1937836\nfunction weekNumberOfLastDay(year) {\n  const jan1 = new Date(year, 0);\n  return jan1.getDay() === 4 || (isLeapYear(year) && jan1.getDay() === 3) ? 53 : 52;\n}\n\nconst weekRe = /^([0-9]{4,5})-W([0-9]{2})$/;\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#parse-a-week-string\nfunction parseWeekString(str) {\n  const matches = weekRe.exec(str);\n  if (!matches) {\n    return null;\n  }\n  const year = Number(matches[1]);\n  if (year <= 0) {\n    return null;\n  }\n  const week = Number(matches[2]);\n  if (week < 1 || week > weekNumberOfLastDay(year)) {\n    return null;\n  }\n  return { year, week };\n}\n\n// https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string\nfunction isValidWeekString(str) {\n  return parseWeekString(str) !== null;\n}\nfunction serializeWeek({ year, week }) {\n  const yearStr = `${year}`.padStart(4, \"0\");\n  const weekStr = `${week}`.padStart(2, \"0\");\n  return `${yearStr}-W${weekStr}`;\n}\n\n// https://stackoverflow.com/a/6117889\nfunction parseDateAsWeek(originalDate) {\n  const dayInSeconds = 86400000;\n  // Copy date so don't modify original\n  const date = new Date(Date.UTC(originalDate.getUTCFullYear(), originalDate.getUTCMonth(), originalDate.getUTCDate()));\n  // Set to nearest Thursday: current date + 4 - current day number\n  // Make Sunday's day number 7\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n  // Get first day of year\n  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  // Calculate full weeks to nearest Thursday\n  const week = Math.ceil((((date - yearStart) / dayInSeconds) + 1) / 7);\n\n  return { year: date.getUTCFullYear(), week };\n}\n\nfunction isDate(obj) {\n  try {\n    Date.prototype.valueOf.call(obj);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nmodule.exports = {\n  isDate,\n  numberOfDaysInMonthOfYear,\n\n  parseMonthString,\n  isValidMonthString,\n  serializeMonth,\n\n  parseDateString,\n  isValidDateString,\n  serializeDate,\n\n  parseYearlessDateString,\n  isValidYearlessDateString,\n  serializeYearlessDate,\n\n  parseTimeString,\n  isValidTimeString,\n  serializeTime,\n\n  parseLocalDateAndTimeString,\n  isValidLocalDateAndTimeString,\n  isValidNormalizedLocalDateAndTimeString,\n  serializeNormalizedDateAndTime,\n\n  parseDateAsWeek,\n  weekNumberOfLastDay,\n  parseWeekString,\n  isValidWeekString,\n  serializeWeek\n};\n"]},"metadata":{},"sourceType":"script"}