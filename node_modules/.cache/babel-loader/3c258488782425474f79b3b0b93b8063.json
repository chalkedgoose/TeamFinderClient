{"ast":null,"code":"import{POST_ID,GET_ID}from'./types';import axios from'axios';import{useEffect}from'react';var token=window.localStorage.getItem('token');export var getId=function getId(){return function(dispatch){if(token!==null&&token!==''){axios.get('https://jobs-xmmtw.ondigitalocean.app/login',{headers:{authorization:token}}).then(function(UserId){dispatch({type:GET_ID,payload:UserId.data});if(UserId!==null&&UserId!==undefined){var u=UserId.data._id;window.localStorage.setItem('userInfo',u);window.localStorage.setItem('name',UserId.data.name);}}).catch(function(error){window.localStorage.removeItem('token');});}};};","map":{"version":3,"sources":["/Users/abarre/Desktop/TeamFinder/TeamFinderClient/TeamFinderClient/src/actions/postActions.js"],"names":["POST_ID","GET_ID","axios","useEffect","token","window","localStorage","getItem","getId","dispatch","get","headers","authorization","then","UserId","type","payload","data","undefined","u","_id","setItem","name","catch","error","removeItem"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,MAAlB,KAAgC,SAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,GAAMC,CAAAA,KAAK,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd,CACA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,SAAM,UAACC,QAAD,CAAc,CACrC,GAAIL,KAAK,GAAK,IAAV,EAAkBA,KAAK,GAAK,EAAhC,CAAoC,CAChCF,KAAK,CACAQ,GADL,CACS,6CADT,CACwD,CAChDC,OAAO,CAAE,CACLC,aAAa,CAAER,KADV,CADuC,CADxD,EAMKS,IANL,CAMU,SAACC,MAAD,CAAY,CACdL,QAAQ,CAAC,CAAEM,IAAI,CAAEd,MAAR,CAAgBe,OAAO,CAAEF,MAAM,CAACG,IAAhC,CAAD,CAAR,CACA,GAAIH,MAAM,GAAK,IAAX,EAAmBA,MAAM,GAAKI,SAAlC,CAA6C,CACzC,GAAMC,CAAAA,CAAC,CAAGL,MAAM,CAACG,IAAP,CAAYG,GAAtB,CACAf,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,UAA5B,CAAwCF,CAAxC,EACAd,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,MAA5B,CAAoCP,MAAM,CAACG,IAAP,CAAYK,IAAhD,EACH,CACJ,CAbL,EAcKC,KAdL,CAcW,SAACC,KAAD,CAAW,CACdnB,MAAM,CAACC,YAAP,CAAoBmB,UAApB,CAA+B,OAA/B,EACH,CAhBL,EAiBH,CACJ,CApBoB,EAAd","sourcesContent":["import { POST_ID, GET_ID } from './types'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nconst token = window.localStorage.getItem('token')\nexport const getId = () => (dispatch) => {\n    if (token !== null && token !== '') {\n        axios\n            .get('https://jobs-xmmtw.ondigitalocean.app/login', {\n                headers: {\n                    authorization: token,\n                },\n            })\n            .then((UserId) => {\n                dispatch({ type: GET_ID, payload: UserId.data })\n                if (UserId !== null && UserId !== undefined) {\n                    const u = UserId.data._id\n                    window.localStorage.setItem('userInfo', u)\n                    window.localStorage.setItem('name', UserId.data.name)\n                }\n            })\n            .catch((error) => {\n                window.localStorage.removeItem('token')\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}