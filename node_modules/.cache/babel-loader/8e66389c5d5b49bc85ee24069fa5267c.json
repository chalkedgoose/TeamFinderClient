{"ast":null,"code":"import { POST_ID, GET_ID } from './types';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nconst token = window.localStorage.getItem('token');\nexport const getId = () => dispatch => {\n  if (token !== null && token !== '') {\n    axios.get('https://jobs-xmmtw.ondigitalocean.app/login', {\n      headers: {\n        authorization: token\n      }\n    }).then(UserId => {\n      dispatch({\n        type: GET_ID,\n        payload: UserId.data\n      });\n      window.localStorage.setItem('userInfo', userId);\n    }).catch(error => {\n      window.localStorage.removeItem('token');\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/TeamFClient/src/actions/postActions.js"],"names":["POST_ID","GET_ID","axios","useEffect","token","window","localStorage","getItem","getId","dispatch","get","headers","authorization","then","UserId","type","payload","data","setItem","userId","catch","error","removeItem"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,SAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,QAAD,IAAc;AACrC,MAAIL,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;AAChCF,IAAAA,KAAK,CACAQ,GADL,CACS,6CADT,EACwD;AAChDC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAER;AADV;AADuC,KADxD,EAMKS,IANL,CAMWC,MAAD,IAAY;AACdL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEd,MAAR;AAAgBe,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAAhC,OAAD,CAAR;AACAZ,MAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,UAA5B,EAAwCC,MAAxC;AACH,KATL,EAUKC,KAVL,CAUYC,KAAD,IAAW;AACdhB,MAAAA,MAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,OAA/B;AACH,KAZL;AAaH;AACJ,CAhBM","sourcesContent":["import { POST_ID, GET_ID } from './types'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nconst token = window.localStorage.getItem('token')\r\nexport const getId = () => (dispatch) => {\r\n    if (token !== null && token !== '') {\r\n        axios\r\n            .get('https://jobs-xmmtw.ondigitalocean.app/login', {\r\n                headers: {\r\n                    authorization: token,\r\n                },\r\n            })\r\n            .then((UserId) => {\r\n                dispatch({ type: GET_ID, payload: UserId.data })\r\n                window.localStorage.setItem('userInfo', userId)\r\n            })\r\n            .catch((error) => {\r\n                window.localStorage.removeItem('token')\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}