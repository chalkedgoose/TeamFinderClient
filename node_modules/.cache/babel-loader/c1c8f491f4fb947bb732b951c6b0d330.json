{"ast":null,"code":"\"use strict\"; // Returns \"Type(value) is Object\" in ES terminology.\n\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null || typeof value === \"function\";\n}\n\nvar hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\nvar wrapperSymbol = Symbol(\"wrapper\");\nvar implSymbol = Symbol(\"impl\");\nvar sameObjectCaches = Symbol(\"SameObject caches\");\nvar ctorRegistrySymbol = Symbol.for(\"[webidl2js]  constructor registry\");\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  var wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  var impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nvar iterInternalSymbol = Symbol(\"internal\");\nvar IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n\n  var i = P >>> 0;\n\n  if (i === Math.pow(2, 32) - 1) {\n    return false;\n  }\n\n  var s = \"\".concat(i);\n\n  if (P !== s) {\n    return false;\n  }\n\n  return true;\n}\n\nvar byteLengthGetter = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\n\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar supportsPropertyIndex = Symbol(\"supports property index\");\nvar supportedPropertyIndices = Symbol(\"supported property indices\");\nvar supportsPropertyName = Symbol(\"supports property name\");\nvar supportedPropertyNames = Symbol(\"supported property names\");\nvar indexedGet = Symbol(\"indexed property get\");\nvar indexedSetNew = Symbol(\"indexed property set new\");\nvar indexedSetExisting = Symbol(\"indexed property set existing\");\nvar namedGet = Symbol(\"named property get\");\nvar namedSetNew = Symbol(\"named property set new\");\nvar namedSetExisting = Symbol(\"named property set existing\");\nvar namedDelete = Symbol(\"named property delete\");\nmodule.exports = exports = {\n  isObject: isObject,\n  hasOwn: hasOwn,\n  wrapperSymbol: wrapperSymbol,\n  implSymbol: implSymbol,\n  getSameObject: getSameObject,\n  ctorRegistrySymbol: ctorRegistrySymbol,\n  wrapperForImpl: wrapperForImpl,\n  implForWrapper: implForWrapper,\n  tryWrapperForImpl: tryWrapperForImpl,\n  tryImplForWrapper: tryImplForWrapper,\n  iterInternalSymbol: iterInternalSymbol,\n  IteratorPrototype: IteratorPrototype,\n  isArrayBuffer: isArrayBuffer,\n  isArrayIndexPropName: isArrayIndexPropName,\n  supportsPropertyIndex: supportsPropertyIndex,\n  supportedPropertyIndices: supportedPropertyIndices,\n  supportsPropertyName: supportsPropertyName,\n  supportedPropertyNames: supportedPropertyNames,\n  indexedGet: indexedGet,\n  indexedSetNew: indexedSetNew,\n  indexedSetExisting: indexedSetExisting,\n  namedGet: namedGet,\n  namedSetNew: namedSetNew,\n  namedSetExisting: namedSetExisting,\n  namedDelete: namedDelete\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/generated/utils.js"],"names":["isObject","value","hasOwn","Function","prototype","call","bind","Object","hasOwnProperty","wrapperSymbol","Symbol","implSymbol","sameObjectCaches","ctorRegistrySymbol","for","getSameObject","wrapper","prop","creator","create","wrapperForImpl","impl","implForWrapper","tryWrapperForImpl","tryImplForWrapper","iterInternalSymbol","IteratorPrototype","getPrototypeOf","iterator","isArrayIndexPropName","P","i","Math","pow","s","byteLengthGetter","getOwnPropertyDescriptor","ArrayBuffer","get","isArrayBuffer","e","supportsPropertyIndex","supportedPropertyIndices","supportsPropertyName","supportedPropertyNames","indexedGet","indexedSetNew","indexedSetExisting","namedGet","namedSetNew","namedSetExisting","namedDelete","module","exports"],"mappings":"AAAA,a,CAEA;;AACA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK,IAAvC,IAA+C,OAAOA,KAAP,KAAiB,UAAvE;AACD;;AAED,IAAMC,MAAM,GAAGC,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,CAAwBC,IAAxB,CAA6BC,MAAM,CAACH,SAAP,CAAiBI,cAA9C,CAAf;AAEA,IAAMC,aAAa,GAAGC,MAAM,CAAC,SAAD,CAA5B;AACA,IAAMC,UAAU,GAAGD,MAAM,CAAC,MAAD,CAAzB;AACA,IAAME,gBAAgB,GAAGF,MAAM,CAAC,mBAAD,CAA/B;AACA,IAAMG,kBAAkB,GAAGH,MAAM,CAACI,GAAP,CAAW,mCAAX,CAA3B;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,OAAtC,EAA+C;AAC7C,MAAI,CAACF,OAAO,CAACJ,gBAAD,CAAZ,EAAgC;AAC9BI,IAAAA,OAAO,CAACJ,gBAAD,CAAP,GAA4BL,MAAM,CAACY,MAAP,CAAc,IAAd,CAA5B;AACD;;AAED,MAAIF,IAAI,IAAID,OAAO,CAACJ,gBAAD,CAAnB,EAAuC;AACrC,WAAOI,OAAO,CAACJ,gBAAD,CAAP,CAA0BK,IAA1B,CAAP;AACD;;AAEDD,EAAAA,OAAO,CAACJ,gBAAD,CAAP,CAA0BK,IAA1B,IAAkCC,OAAO,EAAzC;AACA,SAAOF,OAAO,CAACJ,gBAAD,CAAP,CAA0BK,IAA1B,CAAP;AACD;;AAED,SAASG,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOA,IAAI,GAAGA,IAAI,CAACZ,aAAD,CAAP,GAAyB,IAApC;AACD;;AAED,SAASa,cAAT,CAAwBN,OAAxB,EAAiC;AAC/B,SAAOA,OAAO,GAAGA,OAAO,CAACL,UAAD,CAAV,GAAyB,IAAvC;AACD;;AAED,SAASY,iBAAT,CAA2BF,IAA3B,EAAiC;AAC/B,MAAML,OAAO,GAAGI,cAAc,CAACC,IAAD,CAA9B;AACA,SAAOL,OAAO,GAAGA,OAAH,GAAaK,IAA3B;AACD;;AAED,SAASG,iBAAT,CAA2BR,OAA3B,EAAoC;AAClC,MAAMK,IAAI,GAAGC,cAAc,CAACN,OAAD,CAA3B;AACA,SAAOK,IAAI,GAAGA,IAAH,GAAUL,OAArB;AACD;;AAED,IAAMS,kBAAkB,GAAGf,MAAM,CAAC,UAAD,CAAjC;AACA,IAAMgB,iBAAiB,GAAGnB,MAAM,CAACoB,cAAP,CAAsBpB,MAAM,CAACoB,cAAP,CAAsB,GAAGjB,MAAM,CAACkB,QAAV,GAAtB,CAAtB,CAA1B;;AAEA,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/B,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAO,KAAP;AACD;;AACD,MAAMC,CAAC,GAAGD,CAAC,KAAK,CAAhB;;AACA,MAAIC,CAAC,KAAKC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAA5B,EAA+B;AAC7B,WAAO,KAAP;AACD;;AACD,MAAMC,CAAC,aAAMH,CAAN,CAAP;;AACA,MAAID,CAAC,KAAKI,CAAV,EAAa;AACX,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,IAAMC,gBAAgB,GAClB5B,MAAM,CAAC6B,wBAAP,CAAgCC,WAAW,CAACjC,SAA5C,EAAuD,YAAvD,EAAqEkC,GADzE;;AAEA,SAASC,aAAT,CAAuBtC,KAAvB,EAA8B;AAC5B,MAAI;AACFkC,IAAAA,gBAAgB,CAAC9B,IAAjB,CAAsBJ,KAAtB;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOuC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED,IAAMC,qBAAqB,GAAG/B,MAAM,CAAC,yBAAD,CAApC;AACA,IAAMgC,wBAAwB,GAAGhC,MAAM,CAAC,4BAAD,CAAvC;AACA,IAAMiC,oBAAoB,GAAGjC,MAAM,CAAC,wBAAD,CAAnC;AACA,IAAMkC,sBAAsB,GAAGlC,MAAM,CAAC,0BAAD,CAArC;AACA,IAAMmC,UAAU,GAAGnC,MAAM,CAAC,sBAAD,CAAzB;AACA,IAAMoC,aAAa,GAAGpC,MAAM,CAAC,0BAAD,CAA5B;AACA,IAAMqC,kBAAkB,GAAGrC,MAAM,CAAC,+BAAD,CAAjC;AACA,IAAMsC,QAAQ,GAAGtC,MAAM,CAAC,oBAAD,CAAvB;AACA,IAAMuC,WAAW,GAAGvC,MAAM,CAAC,wBAAD,CAA1B;AACA,IAAMwC,gBAAgB,GAAGxC,MAAM,CAAC,6BAAD,CAA/B;AACA,IAAMyC,WAAW,GAAGzC,MAAM,CAAC,uBAAD,CAA1B;AAEA0C,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG;AACzBrD,EAAAA,QAAQ,EAARA,QADyB;AAEzBE,EAAAA,MAAM,EAANA,MAFyB;AAGzBO,EAAAA,aAAa,EAAbA,aAHyB;AAIzBE,EAAAA,UAAU,EAAVA,UAJyB;AAKzBI,EAAAA,aAAa,EAAbA,aALyB;AAMzBF,EAAAA,kBAAkB,EAAlBA,kBANyB;AAOzBO,EAAAA,cAAc,EAAdA,cAPyB;AAQzBE,EAAAA,cAAc,EAAdA,cARyB;AASzBC,EAAAA,iBAAiB,EAAjBA,iBATyB;AAUzBC,EAAAA,iBAAiB,EAAjBA,iBAVyB;AAWzBC,EAAAA,kBAAkB,EAAlBA,kBAXyB;AAYzBC,EAAAA,iBAAiB,EAAjBA,iBAZyB;AAazBa,EAAAA,aAAa,EAAbA,aAbyB;AAczBV,EAAAA,oBAAoB,EAApBA,oBAdyB;AAezBY,EAAAA,qBAAqB,EAArBA,qBAfyB;AAgBzBC,EAAAA,wBAAwB,EAAxBA,wBAhByB;AAiBzBC,EAAAA,oBAAoB,EAApBA,oBAjByB;AAkBzBC,EAAAA,sBAAsB,EAAtBA,sBAlByB;AAmBzBC,EAAAA,UAAU,EAAVA,UAnByB;AAoBzBC,EAAAA,aAAa,EAAbA,aApByB;AAqBzBC,EAAAA,kBAAkB,EAAlBA,kBArByB;AAsBzBC,EAAAA,QAAQ,EAARA,QAtByB;AAuBzBC,EAAAA,WAAW,EAAXA,WAvByB;AAwBzBC,EAAAA,gBAAgB,EAAhBA,gBAxByB;AAyBzBC,EAAAA,WAAW,EAAXA;AAzByB,CAA3B","sourcesContent":["\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null || typeof value === \"function\";\n}\n\nconst hasOwn = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\nconst ctorRegistrySymbol = Symbol.for(\"[webidl2js]  constructor registry\");\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\nconst IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === Math.pow(2, 32) - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst byteLengthGetter =\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \"byteLength\").get;\nfunction isArrayBuffer(value) {\n  try {\n    byteLengthGetter.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nmodule.exports = exports = {\n  isObject,\n  hasOwn,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  ctorRegistrySymbol,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  IteratorPrototype,\n  isArrayBuffer,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete\n};\n"]},"metadata":{},"sourceType":"script"}