{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar fs = require(\"fs\");\n\nvar _require = require(\"whatwg-url\"),\n    parseURL = _require.parseURL;\n\nvar dataURLFromRecord = require(\"data-urls\").fromURLRecord;\n\nvar request = require(\"request-promise-native\");\n\nvar wrapCookieJarForRequest = require(\"../../living/helpers/wrap-cookie-jar-for-request\");\n\nvar packageVersion = require(\"../../../../package.json\").version;\n\nvar IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\n\nmodule.exports = /*#__PURE__*/function () {\n  function ResourceLoader() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$strictSSL = _ref.strictSSL,\n        strictSSL = _ref$strictSSL === void 0 ? true : _ref$strictSSL,\n        _ref$proxy = _ref.proxy,\n        proxy = _ref$proxy === void 0 ? undefined : _ref$proxy,\n        _ref$userAgent = _ref.userAgent,\n        userAgent = _ref$userAgent === void 0 ? \"Mozilla/5.0 (\".concat(process.platform || \"unknown OS\", \") AppleWebKit/537.36 \") + \"(KHTML, like Gecko) jsdom/\".concat(packageVersion) : _ref$userAgent;\n\n    _classCallCheck(this, ResourceLoader);\n\n    this._strictSSL = strictSSL;\n    this._proxy = proxy;\n    this._userAgent = userAgent;\n  }\n\n  _createClass(ResourceLoader, [{\n    key: \"_readDataURL\",\n    value: function _readDataURL(urlRecord) {\n      var dataURL = dataURLFromRecord(urlRecord);\n      var timeoutId;\n      var promise = new Promise(function (resolve) {\n        timeoutId = setTimeout(resolve, 0, dataURL.body);\n      });\n\n      promise.abort = function () {\n        if (timeoutId !== undefined) {\n          clearTimeout(timeoutId);\n        }\n      };\n\n      return promise;\n    }\n  }, {\n    key: \"_readFile\",\n    value: function _readFile(filePath) {\n      var readableStream;\n      var abort; // Native Promises doesn't have an \"abort\" method.\n\n      /*\n       * Creating a promise for two reason:\n       *   1. fetch always return a promise.\n       *   2. We need to add an abort handler.\n      */\n\n      var promise = new Promise(function (resolve, reject) {\n        readableStream = fs.createReadStream(filePath);\n        var data = Buffer.alloc(0);\n        abort = reject;\n        readableStream.on(\"error\", reject);\n        readableStream.on(\"data\", function (chunk) {\n          data = Buffer.concat([data, chunk]);\n        });\n        readableStream.on(\"end\", function () {\n          resolve(data);\n        });\n      });\n\n      promise.abort = function () {\n        readableStream.destroy();\n        var error = new Error(\"request canceled by user\");\n        error.isAbortError = true;\n        abort(error);\n      };\n\n      return promise;\n    }\n  }, {\n    key: \"_getRequestOptions\",\n    value: function _getRequestOptions(_ref2) {\n      var cookieJar = _ref2.cookieJar,\n          referrer = _ref2.referrer,\n          _ref2$accept = _ref2.accept,\n          accept = _ref2$accept === void 0 ? \"*/*\" : _ref2$accept;\n      var requestOptions = {\n        encoding: null,\n        gzip: true,\n        jar: wrapCookieJarForRequest(cookieJar),\n        strictSSL: this._strictSSL,\n        proxy: this._proxy,\n        forever: true,\n        headers: {\n          \"User-Agent\": this._userAgent,\n          \"Accept-Language\": \"en\",\n          Accept: accept\n        }\n      };\n\n      if (referrer && !IS_BROWSER) {\n        requestOptions.headers.referer = referrer;\n      }\n\n      return requestOptions;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(urlString) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var url = parseURL(urlString);\n\n      if (!url) {\n        return Promise.reject(new Error(\"Tried to fetch invalid URL \".concat(urlString)));\n      }\n\n      switch (url.scheme) {\n        case \"data\":\n          {\n            return this._readDataURL(url);\n          }\n\n        case \"http\":\n        case \"https\":\n          {\n            var requestOptions = this._getRequestOptions(options);\n\n            return request(urlString, requestOptions);\n          }\n\n        case \"file\":\n          {\n            // TODO: Improve the URL => file algorithm. See https://github.com/jsdom/jsdom/pull/2279#discussion_r199977987\n            var filePath = urlString.replace(/^file:\\/\\//, \"\").replace(/^\\/([a-z]):\\//i, \"$1:/\").replace(/%20/g, \" \");\n            return this._readFile(filePath);\n          }\n\n        default:\n          {\n            return Promise.reject(new Error(\"Tried to fetch URL \".concat(urlString, \" with invalid scheme \").concat(url.scheme)));\n          }\n      }\n    }\n  }]);\n\n  return ResourceLoader;\n}();","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/browser/resources/resource-loader.js"],"names":["fs","require","parseURL","dataURLFromRecord","fromURLRecord","request","wrapCookieJarForRequest","packageVersion","version","IS_BROWSER","Object","prototype","toString","call","process","module","exports","strictSSL","proxy","undefined","userAgent","platform","_strictSSL","_proxy","_userAgent","urlRecord","dataURL","timeoutId","promise","Promise","resolve","setTimeout","body","abort","clearTimeout","filePath","readableStream","reject","createReadStream","data","Buffer","alloc","on","chunk","concat","destroy","error","Error","isAbortError","cookieJar","referrer","accept","requestOptions","encoding","gzip","jar","forever","headers","Accept","referer","urlString","options","url","scheme","_readDataURL","_getRequestOptions","replace","_readFile"],"mappings":"AAAA;;;;;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;eACqBA,OAAO,CAAC,YAAD,C;IAApBC,Q,YAAAA,Q;;AACR,IAAMC,iBAAiB,GAAGF,OAAO,CAAC,WAAD,CAAP,CAAqBG,aAA/C;;AACA,IAAMC,OAAO,GAAGJ,OAAO,CAAC,wBAAD,CAAvB;;AACA,IAAMK,uBAAuB,GAAGL,OAAO,CAAC,kDAAD,CAAvC;;AACA,IAAMM,cAAc,GAAGN,OAAO,CAAC,0BAAD,CAAP,CAAoCO,OAA3D;;AACA,IAAMC,UAAU,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BC,OAA/B,MAA4C,kBAA/D;;AAEAC,MAAM,CAACC,OAAP;AACE,4BAKQ;AAAA,mFAAJ,EAAI;AAAA,8BAJNC,SAIM;AAAA,QAJNA,SAIM,+BAJM,IAIN;AAAA,0BAHNC,KAGM;AAAA,QAHNA,KAGM,2BAHEC,SAGF;AAAA,8BAFNC,SAEM;AAAA,QAFNA,SAEM,+BAFM,uBAAgBN,OAAO,CAACO,QAAR,IAAoB,YAApC,iEAC6Bd,cAD7B,CAEN;;AAAA;;AACN,SAAKe,UAAL,GAAkBL,SAAlB;AACA,SAAKM,MAAL,GAAcL,KAAd;AACA,SAAKM,UAAL,GAAkBJ,SAAlB;AACD;;AAVH;AAAA;AAAA,iCAYeK,SAZf,EAY0B;AACtB,UAAMC,OAAO,GAAGvB,iBAAiB,CAACsB,SAAD,CAAjC;AACA,UAAIE,SAAJ;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrCH,QAAAA,SAAS,GAAGI,UAAU,CAACD,OAAD,EAAU,CAAV,EAAaJ,OAAO,CAACM,IAArB,CAAtB;AACD,OAFe,CAAhB;;AAGAJ,MAAAA,OAAO,CAACK,KAAR,GAAgB,YAAM;AACpB,YAAIN,SAAS,KAAKR,SAAlB,EAA6B;AAC3Be,UAAAA,YAAY,CAACP,SAAD,CAAZ;AACD;AACF,OAJD;;AAKA,aAAOC,OAAP;AACD;AAxBH;AAAA;AAAA,8BA0BYO,QA1BZ,EA0BsB;AAClB,UAAIC,cAAJ;AACA,UAAIH,KAAJ,CAFkB,CAEP;;AAEX;AACJ;AACA;AACA;AACA;;AACI,UAAML,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUO,MAAV,EAAqB;AAC/CD,QAAAA,cAAc,GAAGpC,EAAE,CAACsC,gBAAH,CAAoBH,QAApB,CAAjB;AACA,YAAII,IAAI,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAX;AAEAR,QAAAA,KAAK,GAAGI,MAAR;AAEAD,QAAAA,cAAc,CAACM,EAAf,CAAkB,OAAlB,EAA2BL,MAA3B;AAEAD,QAAAA,cAAc,CAACM,EAAf,CAAkB,MAAlB,EAA0B,UAAAC,KAAK,EAAI;AACjCJ,UAAAA,IAAI,GAAGC,MAAM,CAACI,MAAP,CAAc,CAACL,IAAD,EAAOI,KAAP,CAAd,CAAP;AACD,SAFD;AAIAP,QAAAA,cAAc,CAACM,EAAf,CAAkB,KAAlB,EAAyB,YAAM;AAC7BZ,UAAAA,OAAO,CAACS,IAAD,CAAP;AACD,SAFD;AAGD,OAfe,CAAhB;;AAiBAX,MAAAA,OAAO,CAACK,KAAR,GAAgB,YAAM;AACpBG,QAAAA,cAAc,CAACS,OAAf;AACA,YAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,0BAAV,CAAd;AACAD,QAAAA,KAAK,CAACE,YAAN,GAAqB,IAArB;AACAf,QAAAA,KAAK,CAACa,KAAD,CAAL;AACD,OALD;;AAOA,aAAOlB,OAAP;AACD;AA5DH;AAAA;AAAA,8CA8D8D;AAAA,UAAvCqB,SAAuC,SAAvCA,SAAuC;AAAA,UAA5BC,QAA4B,SAA5BA,QAA4B;AAAA,+BAAlBC,MAAkB;AAAA,UAAlBA,MAAkB,6BAAT,KAAS;AAC1D,UAAMC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE,IADW;AAErBC,QAAAA,IAAI,EAAE,IAFe;AAGrBC,QAAAA,GAAG,EAAEjD,uBAAuB,CAAC2C,SAAD,CAHP;AAIrBhC,QAAAA,SAAS,EAAE,KAAKK,UAJK;AAKrBJ,QAAAA,KAAK,EAAE,KAAKK,MALS;AAMrBiC,QAAAA,OAAO,EAAE,IANY;AAOrBC,QAAAA,OAAO,EAAE;AACP,wBAAc,KAAKjC,UADZ;AAEP,6BAAmB,IAFZ;AAGPkC,UAAAA,MAAM,EAAEP;AAHD;AAPY,OAAvB;;AAcA,UAAID,QAAQ,IAAI,CAACzC,UAAjB,EAA6B;AAC3B2C,QAAAA,cAAc,CAACK,OAAf,CAAuBE,OAAvB,GAAiCT,QAAjC;AACD;;AAED,aAAOE,cAAP;AACD;AAlFH;AAAA;AAAA,0BAoFQQ,SApFR,EAoFiC;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC7B,UAAMC,GAAG,GAAG5D,QAAQ,CAAC0D,SAAD,CAApB;;AAEA,UAAI,CAACE,GAAL,EAAU;AACR,eAAOjC,OAAO,CAACQ,MAAR,CAAe,IAAIU,KAAJ,sCAAwCa,SAAxC,EAAf,CAAP;AACD;;AAED,cAAQE,GAAG,CAACC,MAAZ;AACE,aAAK,MAAL;AAAa;AACX,mBAAO,KAAKC,YAAL,CAAkBF,GAAlB,CAAP;AACD;;AAED,aAAK,MAAL;AACA,aAAK,OAAL;AAAc;AACZ,gBAAMV,cAAc,GAAG,KAAKa,kBAAL,CAAwBJ,OAAxB,CAAvB;;AACA,mBAAOxD,OAAO,CAACuD,SAAD,EAAYR,cAAZ,CAAd;AACD;;AAED,aAAK,MAAL;AAAa;AACX;AACA,gBAAMjB,QAAQ,GAAGyB,SAAS,CACvBM,OADc,CACN,YADM,EACQ,EADR,EAEdA,OAFc,CAEN,gBAFM,EAEY,MAFZ,EAGdA,OAHc,CAGN,MAHM,EAGE,GAHF,CAAjB;AAKA,mBAAO,KAAKC,SAAL,CAAehC,QAAf,CAAP;AACD;;AAED;AAAS;AACP,mBAAON,OAAO,CAACQ,MAAR,CAAe,IAAIU,KAAJ,8BAAgCa,SAAhC,kCAAiEE,GAAG,CAACC,MAArE,EAAf,CAAP;AACD;AAvBH;AAyBD;AApHH;;AAAA;AAAA","sourcesContent":["\"use strict\";\nconst fs = require(\"fs\");\nconst { parseURL } = require(\"whatwg-url\");\nconst dataURLFromRecord = require(\"data-urls\").fromURLRecord;\nconst request = require(\"request-promise-native\");\nconst wrapCookieJarForRequest = require(\"../../living/helpers/wrap-cookie-jar-for-request\");\nconst packageVersion = require(\"../../../../package.json\").version;\nconst IS_BROWSER = Object.prototype.toString.call(process) !== \"[object process]\";\n\nmodule.exports = class ResourceLoader {\n  constructor({\n    strictSSL = true,\n    proxy = undefined,\n    userAgent = `Mozilla/5.0 (${process.platform || \"unknown OS\"}) AppleWebKit/537.36 ` +\n                `(KHTML, like Gecko) jsdom/${packageVersion}`\n  } = {}) {\n    this._strictSSL = strictSSL;\n    this._proxy = proxy;\n    this._userAgent = userAgent;\n  }\n\n  _readDataURL(urlRecord) {\n    const dataURL = dataURLFromRecord(urlRecord);\n    let timeoutId;\n    const promise = new Promise(resolve => {\n      timeoutId = setTimeout(resolve, 0, dataURL.body);\n    });\n    promise.abort = () => {\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n    };\n    return promise;\n  }\n\n  _readFile(filePath) {\n    let readableStream;\n    let abort; // Native Promises doesn't have an \"abort\" method.\n\n    /*\n     * Creating a promise for two reason:\n     *   1. fetch always return a promise.\n     *   2. We need to add an abort handler.\n    */\n    const promise = new Promise((resolve, reject) => {\n      readableStream = fs.createReadStream(filePath);\n      let data = Buffer.alloc(0);\n\n      abort = reject;\n\n      readableStream.on(\"error\", reject);\n\n      readableStream.on(\"data\", chunk => {\n        data = Buffer.concat([data, chunk]);\n      });\n\n      readableStream.on(\"end\", () => {\n        resolve(data);\n      });\n    });\n\n    promise.abort = () => {\n      readableStream.destroy();\n      const error = new Error(\"request canceled by user\");\n      error.isAbortError = true;\n      abort(error);\n    };\n\n    return promise;\n  }\n\n  _getRequestOptions({ cookieJar, referrer, accept = \"*/*\" }) {\n    const requestOptions = {\n      encoding: null,\n      gzip: true,\n      jar: wrapCookieJarForRequest(cookieJar),\n      strictSSL: this._strictSSL,\n      proxy: this._proxy,\n      forever: true,\n      headers: {\n        \"User-Agent\": this._userAgent,\n        \"Accept-Language\": \"en\",\n        Accept: accept\n      }\n    };\n\n    if (referrer && !IS_BROWSER) {\n      requestOptions.headers.referer = referrer;\n    }\n\n    return requestOptions;\n  }\n\n  fetch(urlString, options = {}) {\n    const url = parseURL(urlString);\n\n    if (!url) {\n      return Promise.reject(new Error(`Tried to fetch invalid URL ${urlString}`));\n    }\n\n    switch (url.scheme) {\n      case \"data\": {\n        return this._readDataURL(url);\n      }\n\n      case \"http\":\n      case \"https\": {\n        const requestOptions = this._getRequestOptions(options);\n        return request(urlString, requestOptions);\n      }\n\n      case \"file\": {\n        // TODO: Improve the URL => file algorithm. See https://github.com/jsdom/jsdom/pull/2279#discussion_r199977987\n        const filePath = urlString\n          .replace(/^file:\\/\\//, \"\")\n          .replace(/^\\/([a-z]):\\//i, \"$1:/\")\n          .replace(/%20/g, \" \");\n\n        return this._readFile(filePath);\n      }\n\n      default: {\n        return Promise.reject(new Error(`Tried to fetch URL ${urlString} with invalid scheme ${url.scheme}`));\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}