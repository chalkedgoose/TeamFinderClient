{"ast":null,"code":"\"use strict\";\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar _require2 = require(\"../helpers/node\"),\n    nodeRoot = _require2.nodeRoot,\n    isFollowing = _require2.isFollowing,\n    isInclusiveAncestor = _require2.isInclusiveAncestor; // Returns 0 if equal, +1 for after and -1 for before\n// https://dom.spec.whatwg.org/#concept-range-bp-after\n\n\nfunction compareBoundaryPointsPosition(bpA, bpB) {\n  var nodeA = bpA.node,\n      offsetA = bpA.offset;\n  var nodeB = bpB.node,\n      offsetB = bpB.offset;\n\n  if (nodeRoot(nodeA) !== nodeRoot(nodeB)) {\n    throw new Error(\"Internal Error: Boundary points should have the same root!\");\n  }\n\n  if (nodeA === nodeB) {\n    if (offsetA === offsetB) {\n      return 0;\n    } else if (offsetA < offsetB) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  if (isFollowing(nodeA, nodeB)) {\n    return compareBoundaryPointsPosition(bpB, bpA) === -1 ? 1 : -1;\n  }\n\n  if (isInclusiveAncestor(nodeA, nodeB)) {\n    var child = nodeB;\n\n    while (domSymbolTree.parent(child) !== nodeA) {\n      child = domSymbolTree.parent(child);\n    }\n\n    if (domSymbolTree.index(child) < offsetA) {\n      return 1;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = {\n  compareBoundaryPointsPosition: compareBoundaryPointsPosition\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/range/boundary-point.js"],"names":["require","domSymbolTree","nodeRoot","isFollowing","isInclusiveAncestor","compareBoundaryPointsPosition","bpA","bpB","nodeA","node","offsetA","offset","nodeB","offsetB","Error","child","parent","index","module","exports"],"mappings":"AAAA;;eAE0BA,OAAO,CAAC,+BAAD,C;IAAzBC,a,YAAAA,a;;gBAC+CD,OAAO,CAAC,iBAAD,C;IAAtDE,Q,aAAAA,Q;IAAUC,W,aAAAA,W;IAAaC,mB,aAAAA,mB,EAE/B;AACA;;;AACA,SAASC,6BAAT,CAAuCC,GAAvC,EAA4CC,GAA5C,EAAiD;AAAA,MACjCC,KADiC,GACNF,GADM,CACvCG,IADuC;AAAA,MAClBC,OADkB,GACNJ,GADM,CAC1BK,MAD0B;AAAA,MAEjCC,KAFiC,GAENL,GAFM,CAEvCE,IAFuC;AAAA,MAElBI,OAFkB,GAENN,GAFM,CAE1BI,MAF0B;;AAI/C,MAAIT,QAAQ,CAACM,KAAD,CAAR,KAAoBN,QAAQ,CAACU,KAAD,CAAhC,EAAyC;AACvC,UAAM,IAAIE,KAAJ,8DAAN;AACD;;AAED,MAAIN,KAAK,KAAKI,KAAd,EAAqB;AACnB,QAAIF,OAAO,KAAKG,OAAhB,EAAyB;AACvB,aAAO,CAAP;AACD,KAFD,MAEO,IAAIH,OAAO,GAAGG,OAAd,EAAuB;AAC5B,aAAO,CAAC,CAAR;AACD;;AAED,WAAO,CAAP;AACD;;AAED,MAAIV,WAAW,CAACK,KAAD,EAAQI,KAAR,CAAf,EAA+B;AAC7B,WAAOP,6BAA6B,CAACE,GAAD,EAAMD,GAAN,CAA7B,KAA4C,CAAC,CAA7C,GAAiD,CAAjD,GAAqD,CAAC,CAA7D;AACD;;AAED,MAAIF,mBAAmB,CAACI,KAAD,EAAQI,KAAR,CAAvB,EAAuC;AACrC,QAAIG,KAAK,GAAGH,KAAZ;;AAEA,WAAOX,aAAa,CAACe,MAAd,CAAqBD,KAArB,MAAgCP,KAAvC,EAA8C;AAC5CO,MAAAA,KAAK,GAAGd,aAAa,CAACe,MAAd,CAAqBD,KAArB,CAAR;AACD;;AAED,QAAId,aAAa,CAACgB,KAAd,CAAoBF,KAApB,IAA6BL,OAAjC,EAA0C;AACxC,aAAO,CAAP;AACD;AACF;;AAED,SAAO,CAAC,CAAR;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfd,EAAAA,6BAA6B,EAA7BA;AADe,CAAjB","sourcesContent":["\"use strict\";\n\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { nodeRoot, isFollowing, isInclusiveAncestor } = require(\"../helpers/node\");\n\n// Returns 0 if equal, +1 for after and -1 for before\n// https://dom.spec.whatwg.org/#concept-range-bp-after\nfunction compareBoundaryPointsPosition(bpA, bpB) {\n  const { node: nodeA, offset: offsetA } = bpA;\n  const { node: nodeB, offset: offsetB } = bpB;\n\n  if (nodeRoot(nodeA) !== nodeRoot(nodeB)) {\n    throw new Error(`Internal Error: Boundary points should have the same root!`);\n  }\n\n  if (nodeA === nodeB) {\n    if (offsetA === offsetB) {\n      return 0;\n    } else if (offsetA < offsetB) {\n      return -1;\n    }\n\n    return 1;\n  }\n\n  if (isFollowing(nodeA, nodeB)) {\n    return compareBoundaryPointsPosition(bpB, bpA) === -1 ? 1 : -1;\n  }\n\n  if (isInclusiveAncestor(nodeA, nodeB)) {\n    let child = nodeB;\n\n    while (domSymbolTree.parent(child) !== nodeA) {\n      child = domSymbolTree.parent(child);\n    }\n\n    if (domSymbolTree.index(child) < offsetA) {\n      return 1;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = {\n  compareBoundaryPointsPosition\n};\n"]},"metadata":{},"sourceType":"script"}