{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar path = require(\"path\");\n\nvar whatwgURL = require(\"whatwg-url\");\n\nvar _require = require(\"./living/helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  var pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  } // path might contain spaces, so convert those to %20\n\n\n  return \"file://\" + encodeURI(pathname);\n};\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\n\n\nexports.define = function define(object, properties) {\n  var _iterator = _createForOfIteratorHelper(Object.getOwnPropertyNames(properties)),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var name = _step.value;\n      var propDesc = Object.getOwnPropertyDescriptor(properties, name);\n      Object.defineProperty(object, name, propDesc);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\n\n\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (var property in propertyMap) {\n    var value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value: value\n  });\n}\n\nexports.mixin = function (target, source) {\n  var keys = Reflect.ownKeys(source);\n\n  for (var i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nvar memoizeQueryTypeCounter = 0;\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\n\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  var type = memoizeQueryTypeCounter++;\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    var key;\n\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n\n    return this._memoizedQueries[type][key];\n  };\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = /*#__PURE__*/_regeneratorRuntime.mark(function _callee(first, second) {\n  var firstResult, secondResult;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          firstResult = first.next();\n          secondResult = second.next();\n\n          if (!(firstResult.done && secondResult.done)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\");\n\n        case 4:\n          _context.next = 6;\n          return [firstResult.done ? null : firstResult.value, secondResult.done ? null : secondResult.value];\n\n        case 6:\n          _context.next = 0;\n          break;\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n});\n\nexports.treeOrderSorter = function (a, b) {\n  var compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) {\n    // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  } // disconnected or equal:\n\n\n  return 0;\n};\n/* eslint-disable global-require */\n\n\nexports.Canvas = null;\nvar canvasInstalled = false;\n\ntry {\n  require.resolve(\"canvas\");\n\n  canvasInstalled = true;\n} catch (e) {// canvas is not installed\n}\n\nif (canvasInstalled) {\n  var Canvas = require(\"canvas\");\n\n  if (typeof Canvas.createCanvas === \"function\") {\n    // In browserify, the require will succeed but return an empty object\n    exports.Canvas = Canvas;\n  }\n}","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/utils.js"],"names":["path","require","whatwgURL","domSymbolTree","SYMBOL_TREE_POSITION","TreePosition","exports","toFileUrl","fileName","pathname","resolve","process","cwd","replace","encodeURI","define","object","properties","Object","getOwnPropertyNames","name","propDesc","getOwnPropertyDescriptor","defineProperty","addConstants","Constructor","propertyMap","property","value","addConstant","prototype","configurable","enumerable","writable","mixin","target","source","keys","Reflect","ownKeys","i","length","memoizeQueryTypeCounter","memoizeQuery","fn","type","_memoizedQueries","apply","arguments","create","key","isValidAbsoluteURL","str","parseURL","isValidTargetOrigin","simultaneousIterators","first","second","firstResult","next","secondResult","done","treeOrderSorter","a","b","compare","compareTreePosition","PRECEDING","FOLLOWING","Canvas","canvasInstalled","e","createCanvas"],"mappings":"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","sourcesContent":["\"use strict\";\nconst path = require(\"path\");\nconst whatwgURL = require(\"whatwg-url\");\nconst { domSymbolTree } = require(\"./living/helpers/internal-constants\");\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\n\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nlet memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  const type = memoizeQueryTypeCounter++;\n\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    let key;\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n\n    yield [\n      firstResult.done ? null : firstResult.value,\n      secondResult.done ? null : secondResult.value\n    ];\n  }\n};\n\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) { // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\n/* eslint-disable global-require */\n\nexports.Canvas = null;\nlet canvasInstalled = false;\ntry {\n  require.resolve(\"canvas\");\n  canvasInstalled = true;\n} catch (e) {\n  // canvas is not installed\n}\nif (canvasInstalled) {\n  const Canvas = require(\"canvas\");\n  if (typeof Canvas.createCanvas === \"function\") {\n    // In browserify, the require will succeed but return an empty object\n    exports.Canvas = Canvas;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}