{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\n\nvar ValidityState = require(\"../generated/ValidityState\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    cloningSteps = _require2.cloningSteps;\n\nvar _require3 = require(\"../helpers/form-controls\"),\n    isDisabled = _require3.isDisabled,\n    normalizeToCRLF = _require3.normalizeToCRLF,\n    getLabelsForLabelable = _require3.getLabelsForLabelable,\n    formOwner = _require3.formOwner;\n\nvar _require4 = require(\"../helpers/text\"),\n    childTextContent = _require4.childTextContent;\n\nvar _require5 = require(\"../helpers/events\"),\n    fireAnEvent = _require5.fireAnEvent;\n\nvar HTMLTextAreaElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLTextAreaElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLTextAreaElementImpl);\n\n  function HTMLTextAreaElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLTextAreaElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._selectionStart = _this._selectionEnd = 0;\n    _this._selectionDirection = \"none\";\n    _this._rawValue = \"\";\n    _this._dirtyValue = false;\n    _this._customValidityErrorMessage = \"\";\n    _this._labels = null;\n    return _this;\n  }\n\n  _createClass(HTMLTextAreaElementImpl, [{\n    key: \"_formReset\",\n    value: function _formReset() {\n      this._rawValue = childTextContent(this);\n      this._dirtyValue = false;\n    }\n  }, {\n    key: \"_getAPIValue\",\n    value: function _getAPIValue() {\n      return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n    } // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      // Hard-wrapping omitted, for now.\n      return normalizeToCRLF(this._rawValue);\n    }\n  }, {\n    key: \"_childTextContentChangeSteps\",\n    value: function _childTextContentChangeSteps() {\n      _get(_getPrototypeOf(HTMLTextAreaElementImpl.prototype), \"_childTextContentChangeSteps\", this).call(this);\n\n      if (this._dirtyValue === false) {\n        this._rawValue = childTextContent(this);\n      }\n    }\n  }, {\n    key: \"_dispatchSelectEvent\",\n    value: function _dispatchSelectEvent() {\n      fireAnEvent(\"select\", this, undefined, {\n        bubbles: true,\n        cancelable: true\n      });\n    }\n  }, {\n    key: \"_getValueLength\",\n    value: function _getValueLength() {\n      return typeof this.value === \"string\" ? this.value.length : 0;\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this._selectionStart = 0;\n      this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(start, end, dir) {\n      this._selectionEnd = Math.min(end, this._getValueLength());\n      this._selectionStart = Math.min(start, this._selectionEnd);\n      this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"setRangeText\",\n    value: function setRangeText(repl, start, end) {\n      var selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n\n      if (arguments.length < 2) {\n        start = this._selectionStart;\n        end = this._selectionEnd;\n      } else if (start > end) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      start = Math.min(start, this._getValueLength());\n      end = Math.min(end, this._getValueLength());\n      var val = this.value;\n      var selStart = this._selectionStart;\n      var selEnd = this._selectionEnd;\n      this.value = val.slice(0, start) + repl + val.slice(end);\n      var newEnd = start + this.value.length;\n\n      if (selectionMode === \"select\") {\n        this.setSelectionRange(start, newEnd);\n      } else if (selectionMode === \"start\") {\n        this.setSelectionRange(start, start);\n      } else if (selectionMode === \"end\") {\n        this.setSelectionRange(newEnd, newEnd);\n      } else {\n        // preserve\n        var delta = repl.length - (end - start);\n\n        if (selStart > end) {\n          selStart += delta;\n        } else if (selStart > start) {\n          selStart = start;\n        }\n\n        if (selEnd > end) {\n          selEnd += delta;\n        } else if (selEnd > start) {\n          selEnd = newEnd;\n        }\n\n        this.setSelectionRange(selStart, selEnd);\n      }\n    }\n  }, {\n    key: \"_barredFromConstraintValidationSpecialization\",\n    value: function _barredFromConstraintValidationSpecialization() {\n      return this.hasAttributeNS(null, \"readonly\");\n    }\n  }, {\n    key: cloningSteps,\n    value: function value(copy, node) {\n      copy._dirtyValue = node._dirtyValue;\n      copy._rawValue = node._rawValue;\n    }\n  }, {\n    key: \"labels\",\n    get: function get() {\n      return getLabelsForLabelable(this);\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      return formOwner(this);\n    }\n  }, {\n    key: \"defaultValue\",\n    get: function get() {\n      return childTextContent(this);\n    },\n    set: function set(val) {\n      this.textContent = val;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._getAPIValue();\n    },\n    set: function set(val) {\n      // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\n      var oldAPIValue = this._getAPIValue();\n\n      this._rawValue = val;\n      this._dirtyValue = true;\n\n      if (oldAPIValue !== this._getAPIValue()) {\n        this._selectionStart = this._selectionEnd = this._getValueLength();\n        this._selectionDirection = \"none\";\n      }\n    }\n  }, {\n    key: \"textLength\",\n    get: function get() {\n      return this.value.length; // code unit length (16 bit)\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"textarea\";\n    }\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      return this._selectionStart;\n    },\n    set: function set(start) {\n      this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n    }\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      return this._selectionEnd;\n    },\n    set: function set(end) {\n      this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n    }\n  }, {\n    key: \"selectionDirection\",\n    get: function get() {\n      return this._selectionDirection;\n    },\n    set: function set(dir) {\n      this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n    }\n  }, {\n    key: \"cols\",\n    get: function get() {\n      if (!this.hasAttributeNS(null, \"cols\")) {\n        return 20;\n      }\n\n      return parseInt(this.getAttributeNS(null, \"cols\"));\n    },\n    set: function set(value) {\n      if (value <= 0) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      this.setAttributeNS(null, \"cols\", String(value));\n    }\n  }, {\n    key: \"rows\",\n    get: function get() {\n      if (!this.hasAttributeNS(null, \"rows\")) {\n        return 2;\n      }\n\n      return parseInt(this.getAttributeNS(null, \"rows\"));\n    },\n    set: function set(value) {\n      if (value <= 0) {\n        throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n      }\n\n      this.setAttributeNS(null, \"rows\", String(value));\n    }\n  }, {\n    key: \"_mutable\",\n    get: function get() {\n      return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\n    } // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n\n  }, {\n    key: \"validity\",\n    get: function get() {\n      var _this2 = this;\n\n      if (!this._validity) {\n        var state = {\n          valueMissing: function valueMissing() {\n            return _this2.hasAttributeNS(null, \"required\") && _this2._mutable && _this2.value === \"\";\n          }\n        };\n        this._validity = ValidityState.createImpl(this._globalObject, [], {\n          element: this,\n          state: state\n        });\n      }\n\n      return this._validity;\n    }\n  }]);\n\n  return HTMLTextAreaElementImpl;\n}(HTMLElementImpl);\n\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTextAreaElement-impl.js"],"names":["HTMLElementImpl","require","implementation","DefaultConstraintValidationImpl","ValidityState","mixin","DOMException","cloningSteps","isDisabled","normalizeToCRLF","getLabelsForLabelable","formOwner","childTextContent","fireAnEvent","HTMLTextAreaElementImpl","globalObject","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_rawValue","_dirtyValue","_customValidityErrorMessage","_labels","replace","undefined","bubbles","cancelable","value","length","_getValueLength","_dispatchSelectEvent","start","end","dir","Math","min","repl","selectionMode","arguments","create","_globalObject","val","selStart","selEnd","slice","newEnd","setSelectionRange","delta","hasAttributeNS","copy","node","textContent","_getAPIValue","oldAPIValue","max","parseInt","getAttributeNS","setAttributeNS","String","_validity","state","valueMissing","_mutable","createImpl","element","prototype","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { cloningSteps } = require(\"../helpers/internal-constants\");\nconst { isDisabled, normalizeToCRLF, getLabelsForLabelable, formOwner } = require(\"../helpers/form-controls\");\nconst { childTextContent } = require(\"../helpers/text\");\nconst { fireAnEvent } = require(\"../helpers/events\");\n\nclass HTMLTextAreaElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._rawValue = \"\";\n    this._dirtyValue = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n  }\n\n  _formReset() {\n    this._rawValue = childTextContent(this);\n    this._dirtyValue = false;\n  }\n\n  _getAPIValue() {\n    return this._rawValue.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#textarea-wrapping-transformation\n  _getValue() {\n    // Hard-wrapping omitted, for now.\n    return normalizeToCRLF(this._rawValue);\n  }\n\n  _childTextContentChangeSteps() {\n    super._childTextContentChangeSteps();\n\n    if (this._dirtyValue === false) {\n      this._rawValue = childTextContent(this);\n    }\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return formOwner(this);\n  }\n\n  get defaultValue() {\n    return childTextContent(this);\n  }\n\n  set defaultValue(val) {\n    this.textContent = val;\n  }\n\n  get value() {\n    return this._getAPIValue();\n  }\n\n  set value(val) {\n    // https://html.spec.whatwg.org/multipage/form-elements.html#dom-textarea-value\n    const oldAPIValue = this._getAPIValue();\n    this._rawValue = val;\n    this._dirtyValue = true;\n\n    if (oldAPIValue !== this._getAPIValue()) {\n      this._selectionStart = this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n    }\n  }\n\n  get textLength() {\n    return this.value.length; // code unit length (16 bit)\n  }\n\n  get type() {\n    return \"textarea\";\n  }\n\n  _dispatchSelectEvent() {\n    fireAnEvent(\"select\", this, undefined, { bubbles: true, cancelable: true });\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + this.value.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  get cols() {\n    if (!this.hasAttributeNS(null, \"cols\")) {\n      return 20;\n    }\n    return parseInt(this.getAttributeNS(null, \"cols\"));\n  }\n\n  set cols(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"cols\", String(value));\n  }\n\n  get rows() {\n    if (!this.hasAttributeNS(null, \"rows\")) {\n      return 2;\n    }\n    return parseInt(this.getAttributeNS(null, \"rows\"));\n  }\n\n  set rows(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"rows\", String(value));\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    return this.hasAttributeNS(null, \"readonly\");\n  }\n\n  get _mutable() {\n    return !isDisabled(this) && !this.hasAttributeNS(null, \"readonly\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#attr-textarea-required\n  get validity() {\n    if (!this._validity) {\n      const state = {\n        valueMissing: () => this.hasAttributeNS(null, \"required\") && this._mutable && this.value === \"\"\n      };\n\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\n        element: this,\n        state\n      });\n    }\n    return this._validity;\n  }\n\n  [cloningSteps](copy, node) {\n    copy._dirtyValue = node._dirtyValue;\n    copy._rawValue = node._rawValue;\n  }\n}\n\nmixin(HTMLTextAreaElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLTextAreaElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}