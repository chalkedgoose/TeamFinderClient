{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _defineProperty = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar HTMLFormElement = require(\"./HTMLFormElement.js\");\n\nvar Blob = require(\"./Blob.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"FormData\";\nvar IteratorPrototype = Object.create(utils.IteratorPrototype, _defineProperty({\n  next: {\n    value: function next() {\n      var internal = this[utils.iterInternalSymbol];\n      var target = internal.target,\n          kind = internal.kind,\n          index = internal.index;\n      var values = Array.from(target[implSymbol]);\n      var len = values.length;\n\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n\n      var pair = values[index];\n      internal.index = index + 1;\n\n      var _pair$map = pair.map(utils.tryWrapperForImpl),\n          _pair$map2 = _slicedToArray(_pair$map, 2),\n          key = _pair$map2[0],\n          value = _pair$map2[1];\n\n      var result;\n\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n\n        case \"value\":\n          result = value;\n          break;\n\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n\n      return {\n        value: result,\n        done: false\n      };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  }\n}, Symbol.toStringTag, {\n  value: \"FormData Iterator\",\n  configurable: true\n}));\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'FormData'.\"));\n};\n\nexports.createDefaultIterator = function (target, kind) {\n  var iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: {\n      target: target,\n      kind: kind,\n      index: 0\n    },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"FormData\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor FormData is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var FormData = /*#__PURE__*/function () {\n    function FormData() {\n      _classCallCheck(this, FormData);\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(curArg, {\n            context: \"Failed to construct 'FormData': parameter 1\"\n          });\n        }\n\n        args.push(curArg);\n      }\n      return exports.setup(Object.create((this instanceof FormData ? this.constructor : void 0).prototype), globalObject, args);\n    }\n\n    _createClass(FormData, [{\n      key: \"append\",\n      value: function append(name, value) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n\n        switch (arguments.length) {\n          case 2:\n            {\n              var curArg = arguments[0];\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n              });\n              args.push(curArg);\n            }\n            {\n              var _curArg = arguments[1];\n\n              if (Blob.is(_curArg)) {\n                {\n                  var _curArg2 = arguments[1];\n                  _curArg2 = Blob.convert(_curArg2, {\n                    context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                  });\n                  args.push(_curArg2);\n                }\n              } else {\n                {\n                  var _curArg3 = arguments[1];\n                  _curArg3 = conversions[\"USVString\"](_curArg3, {\n                    context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                  });\n                  args.push(_curArg3);\n                }\n              }\n            }\n            break;\n\n          default:\n            {\n              var _curArg4 = arguments[0];\n              _curArg4 = conversions[\"USVString\"](_curArg4, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n              });\n              args.push(_curArg4);\n            }\n            {\n              var _curArg5 = arguments[1];\n              _curArg5 = Blob.convert(_curArg5, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n              });\n              args.push(_curArg5);\n            }\n            {\n              var _curArg6 = arguments[2];\n\n              if (_curArg6 !== undefined) {\n                _curArg6 = conversions[\"USVString\"](_curArg6, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n                });\n              }\n\n              args.push(_curArg6);\n            }\n        }\n\n        return (_esValue$implSymbol = esValue[implSymbol]).append.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(name) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'delete' on 'FormData': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).delete.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"get\",\n      value: function get(name) {\n        var _esValue$implSymbol3;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'get' on 'FormData': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol3 = esValue[implSymbol]).get.apply(_esValue$implSymbol3, args));\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(name) {\n        var _esValue$implSymbol4;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'getAll' on 'FormData': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return utils.tryWrapperForImpl((_esValue$implSymbol4 = esValue[implSymbol]).getAll.apply(_esValue$implSymbol4, args));\n      }\n    }, {\n      key: \"has\",\n      value: function has(name) {\n        var _esValue$implSymbol5;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"USVString\"](curArg, {\n            context: \"Failed to execute 'has' on 'FormData': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol5 = esValue[implSymbol]).has.apply(_esValue$implSymbol5, args);\n      }\n    }, {\n      key: \"set\",\n      value: function set(name, value) {\n        var _esValue$implSymbol6;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n\n        switch (arguments.length) {\n          case 2:\n            {\n              var curArg = arguments[0];\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n              });\n              args.push(curArg);\n            }\n            {\n              var _curArg7 = arguments[1];\n\n              if (Blob.is(_curArg7)) {\n                {\n                  var _curArg8 = arguments[1];\n                  _curArg8 = Blob.convert(_curArg8, {\n                    context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                  });\n                  args.push(_curArg8);\n                }\n              } else {\n                {\n                  var _curArg9 = arguments[1];\n                  _curArg9 = conversions[\"USVString\"](_curArg9, {\n                    context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                  });\n                  args.push(_curArg9);\n                }\n              }\n            }\n            break;\n\n          default:\n            {\n              var _curArg10 = arguments[0];\n              _curArg10 = conversions[\"USVString\"](_curArg10, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n              });\n              args.push(_curArg10);\n            }\n            {\n              var _curArg11 = arguments[1];\n              _curArg11 = Blob.convert(_curArg11, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n              });\n              args.push(_curArg11);\n            }\n            {\n              var _curArg12 = arguments[2];\n\n              if (_curArg12 !== undefined) {\n                _curArg12 = conversions[\"USVString\"](_curArg12, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n                });\n              }\n\n              args.push(_curArg12);\n            }\n        }\n\n        return (_esValue$implSymbol6 = esValue[implSymbol]).set.apply(_esValue$implSymbol6, args);\n      }\n    }, {\n      key: \"keys\",\n      value: function keys() {\n        if (!this || !exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return exports.createDefaultIterator(this, \"key\");\n      }\n    }, {\n      key: \"values\",\n      value: function values() {\n        if (!this || !exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return exports.createDefaultIterator(this, \"value\");\n      }\n    }, {\n      key: \"entries\",\n      value: function entries() {\n        if (!this || !exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return exports.createDefaultIterator(this, \"key+value\");\n      }\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback) {\n        if (!this || !exports.is(this)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n        }\n\n        if (typeof callback !== \"function\") {\n          throw new TypeError(\"Failed to execute 'forEach' on 'iterable': The callback provided \" + \"as parameter 1 is not a function.\");\n        }\n\n        var thisArg = arguments[1];\n        var pairs = Array.from(this[implSymbol]);\n        var i = 0;\n\n        while (i < pairs.length) {\n          var _pairs$i$map = pairs[i].map(utils.tryWrapperForImpl),\n              _pairs$i$map2 = _slicedToArray(_pairs$i$map, 2),\n              key = _pairs$i$map2[0],\n              value = _pairs$i$map2[1];\n\n          callback.call(thisArg, value, key, this);\n          pairs = Array.from(this[implSymbol]);\n          i++;\n        }\n      }\n    }]);\n\n    return FormData;\n  }();\n\n  Object.defineProperties(FormData.prototype, (_Object$definePropert = {\n    append: {\n      enumerable: true\n    },\n    delete: {\n      enumerable: true\n    },\n    get: {\n      enumerable: true\n    },\n    getAll: {\n      enumerable: true\n    },\n    has: {\n      enumerable: true\n    },\n    set: {\n      enumerable: true\n    },\n    keys: {\n      enumerable: true\n    },\n    values: {\n      enumerable: true\n    },\n    entries: {\n      enumerable: true\n    },\n    forEach: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"FormData\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, Symbol.iterator, {\n    value: FormData.prototype.entries,\n    configurable: true,\n    writable: true\n  }), _Object$definePropert));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = FormData;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\n\nvar Impl = require(\"../xhr/FormData-impl.js\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/generated/FormData.js"],"names":["conversions","require","utils","HTMLFormElement","Blob","implSymbol","ctorRegistrySymbol","interfaceName","IteratorPrototype","Object","create","next","value","internal","iterInternalSymbol","target","kind","index","values","Array","from","len","length","undefined","done","pair","map","tryWrapperForImpl","key","result","writable","enumerable","configurable","Symbol","toStringTag","exports","is","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","createDefaultIterator","iterator","defineProperty","makeWrapper","globalObject","Error","ctor","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","FormData","args","curArg","arguments","push","name","esValue","append","delete","get","getAll","set","callback","thisArg","pairs","i","call","defineProperties","keys","entries","forEach"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLFormElement = require(\"./HTMLFormElement.js\");\nconst Blob = require(\"./Blob.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"FormData\";\n\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\n  next: {\n    value: function next() {\n      const internal = this[utils.iterInternalSymbol];\n      const { target, kind, index } = internal;\n      const values = Array.from(target[implSymbol]);\n      const len = values.length;\n      if (index >= len) {\n        return { value: undefined, done: true };\n      }\n\n      const pair = values[index];\n      internal.index = index + 1;\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\n\n      let result;\n      switch (kind) {\n        case \"key\":\n          result = key;\n          break;\n        case \"value\":\n          result = value;\n          break;\n        case \"key+value\":\n          result = [key, value];\n          break;\n      }\n      return { value: result, done: false };\n    },\n    writable: true,\n    enumerable: true,\n    configurable: true\n  },\n  [Symbol.toStringTag]: {\n    value: \"FormData Iterator\",\n    configurable: true\n  }\n});\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'FormData'.`);\n};\n\nexports.createDefaultIterator = (target, kind) => {\n  const iterator = Object.create(IteratorPrototype);\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\n    value: { target, kind, index: 0 },\n    configurable: true\n  });\n  return iterator;\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"FormData\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor FormData is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class FormData {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = HTMLFormElement.convert(curArg, { context: \"Failed to construct 'FormData': parameter 1\" });\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    append(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'append' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'append' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'append' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, { context: \"Failed to execute 'append' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'append' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].append(...args);\n    }\n\n    delete(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'delete' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'delete' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].delete(...args);\n    }\n\n    get(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'get' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'get' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].get(...args));\n    }\n\n    getAll(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'getAll' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'getAll' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].getAll(...args));\n    }\n\n    has(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'has' on 'FormData': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"USVString\"](curArg, { context: \"Failed to execute 'has' on 'FormData': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].has(...args);\n    }\n\n    set(name, value) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'set' on 'FormData': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      switch (arguments.length) {\n        case 2:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            if (Blob.is(curArg)) {\n              {\n                let curArg = arguments[1];\n                curArg = Blob.convert(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n                args.push(curArg);\n              }\n            } else {\n              {\n                let curArg = arguments[1];\n                curArg = conversions[\"USVString\"](curArg, {\n                  context: \"Failed to execute 'set' on 'FormData': parameter 2\"\n                });\n                args.push(curArg);\n              }\n            }\n          }\n          break;\n        default:\n          {\n            let curArg = arguments[0];\n            curArg = conversions[\"USVString\"](curArg, {\n              context: \"Failed to execute 'set' on 'FormData': parameter 1\"\n            });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[1];\n            curArg = Blob.convert(curArg, { context: \"Failed to execute 'set' on 'FormData': parameter 2\" });\n            args.push(curArg);\n          }\n          {\n            let curArg = arguments[2];\n            if (curArg !== undefined) {\n              curArg = conversions[\"USVString\"](curArg, {\n                context: \"Failed to execute 'set' on 'FormData': parameter 3\"\n              });\n            }\n            args.push(curArg);\n          }\n      }\n      return esValue[implSymbol].set(...args);\n    }\n\n    keys() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key\");\n    }\n\n    values() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"value\");\n    }\n\n    entries() {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      return exports.createDefaultIterator(this, \"key+value\");\n    }\n\n    forEach(callback) {\n      if (!this || !exports.is(this)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      if (arguments.length < 1) {\n        throw new TypeError(\"Failed to execute 'forEach' on 'iterable': 1 argument required, \" + \"but only 0 present.\");\n      }\n      if (typeof callback !== \"function\") {\n        throw new TypeError(\n          \"Failed to execute 'forEach' on 'iterable': The callback provided \" + \"as parameter 1 is not a function.\"\n        );\n      }\n      const thisArg = arguments[1];\n      let pairs = Array.from(this[implSymbol]);\n      let i = 0;\n      while (i < pairs.length) {\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\n        callback.call(thisArg, value, key, this);\n        pairs = Array.from(this[implSymbol]);\n        i++;\n      }\n    }\n  }\n  Object.defineProperties(FormData.prototype, {\n    append: { enumerable: true },\n    delete: { enumerable: true },\n    get: { enumerable: true },\n    getAll: { enumerable: true },\n    has: { enumerable: true },\n    set: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true },\n    forEach: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"FormData\", configurable: true },\n    [Symbol.iterator]: { value: FormData.prototype.entries, configurable: true, writable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = FormData;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: FormData\n  });\n};\n\nconst Impl = require(\"../xhr/FormData-impl.js\");\n"]},"metadata":{},"sourceType":"script"}