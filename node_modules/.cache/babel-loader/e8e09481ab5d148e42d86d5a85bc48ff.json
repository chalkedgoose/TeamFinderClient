{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar OrderedSet = require(\"../helpers/ordered-set.js\");\n\nvar _require = require(\"../helpers/strings.js\"),\n    asciiLowercase = _require.asciiLowercase;\n\nvar idlUtils = require(\"../generated/utils.js\");\n\nvar _require2 = require(\"../attributes.js\"),\n    getAttributeValue = _require2.getAttributeValue,\n    setAttributeValue = _require2.setAttributeValue,\n    hasAttributeByName = _require2.hasAttributeByName;\n\nfunction validateTokens(globalObject) {\n  for (var _len = arguments.length, tokens = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    tokens[_key - 1] = arguments[_key];\n  }\n\n  for (var _i = 0, _tokens = tokens; _i < _tokens.length; _i++) {\n    var token = _tokens[_i];\n\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n\n  for (var _i2 = 0, _tokens2 = tokens; _i2 < _tokens2.length; _i2++) {\n    var _token = _tokens2[_i2];\n\n    if (/[\\t\\n\\f\\r ]/.test(_token)) {\n      throw DOMException.create(globalObject, [\"The token provided contains HTML space characters, which are not valid in tokens.\", \"InvalidCharacterError\"]);\n    }\n  }\n} // https://dom.spec.whatwg.org/#domtokenlist\n\n\nvar DOMTokenListImpl = /*#__PURE__*/function () {\n  function DOMTokenListImpl(globalObject, args, privateData) {\n    _classCallCheck(this, DOMTokenListImpl);\n\n    this._globalObject = globalObject; // _syncWithElement() must always be called before any _tokenSet access.\n\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens; // Needs synchronization with element if token set is to be accessed.\n\n    this._dirty = true;\n  }\n\n  _createClass(DOMTokenListImpl, [{\n    key: \"attrModified\",\n    value: function attrModified() {\n      this._dirty = true;\n    }\n  }, {\n    key: \"_syncWithElement\",\n    value: function _syncWithElement() {\n      if (!this._dirty) {\n        return;\n      }\n\n      var val = getAttributeValue(this._element, this._attributeLocalName);\n\n      if (val === null) {\n        this._tokenSet.empty();\n      } else {\n        this._tokenSet = OrderedSet.parse(val);\n      }\n\n      this._dirty = false;\n    }\n  }, {\n    key: \"_validationSteps\",\n    value: function _validationSteps(token) {\n      if (!this._supportedTokens) {\n        throw new TypeError(\"\".concat(this._attributeLocalName, \" attribute has no supported tokens\"));\n      }\n\n      var lowerToken = asciiLowercase(token);\n      return this._supportedTokens.has(lowerToken);\n    }\n  }, {\n    key: \"_updateSteps\",\n    value: function _updateSteps() {\n      if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n        return;\n      }\n\n      setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n    }\n  }, {\n    key: \"_serializeSteps\",\n    value: function _serializeSteps() {\n      return getAttributeValue(this._element, this._attributeLocalName);\n    } // Used by other parts of jsdom\n\n  }, {\n    key: \"item\",\n    value: function item(index) {\n      this._syncWithElement();\n\n      if (index >= this._tokenSet.size) {\n        return null;\n      }\n\n      return this._tokenSet.get(index);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(token) {\n      this._syncWithElement();\n\n      return this._tokenSet.contains(token);\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        tokens[_key2] = arguments[_key2];\n      }\n\n      for (var _i3 = 0, _tokens3 = tokens; _i3 < _tokens3.length; _i3++) {\n        var token = _tokens3[_i3];\n        validateTokens(this._globalObject, token);\n      }\n\n      this._syncWithElement();\n\n      for (var _i4 = 0, _tokens4 = tokens; _i4 < _tokens4.length; _i4++) {\n        var _token2 = _tokens4[_i4];\n\n        this._tokenSet.append(_token2);\n      }\n\n      this._updateSteps();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _this$_tokenSet;\n\n      for (var _len3 = arguments.length, tokens = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        tokens[_key3] = arguments[_key3];\n      }\n\n      for (var _i5 = 0, _tokens5 = tokens; _i5 < _tokens5.length; _i5++) {\n        var token = _tokens5[_i5];\n        validateTokens(this._globalObject, token);\n      }\n\n      this._syncWithElement();\n\n      (_this$_tokenSet = this._tokenSet).remove.apply(_this$_tokenSet, tokens);\n\n      this._updateSteps();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(token) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      validateTokens(this._globalObject, token);\n\n      this._syncWithElement();\n\n      if (this._tokenSet.contains(token)) {\n        if (force === undefined || force === false) {\n          this._tokenSet.remove(token);\n\n          this._updateSteps();\n\n          return false;\n        }\n\n        return true;\n      }\n\n      if (force === undefined || force === true) {\n        this._tokenSet.append(token);\n\n        this._updateSteps();\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(token, newToken) {\n      validateTokens(this._globalObject, token, newToken);\n\n      this._syncWithElement();\n\n      if (!this._tokenSet.contains(token)) {\n        return false;\n      }\n\n      this._tokenSet.replace(token, newToken);\n\n      this._updateSteps();\n\n      return true;\n    }\n  }, {\n    key: \"supports\",\n    value: function supports(token) {\n      return this._validationSteps(token);\n    }\n  }, {\n    key: \"tokenSet\",\n    get: function get() {\n      this._syncWithElement();\n\n      return this._tokenSet;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      this._syncWithElement();\n\n      return this._tokenSet.size;\n    }\n  }, {\n    key: idlUtils.supportedPropertyIndices,\n    get: function get() {\n      this._syncWithElement();\n\n      return this._tokenSet.keys();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._serializeSteps();\n    },\n    set: function set(V) {\n      setAttributeValue(this._element, this._attributeLocalName, V);\n    }\n  }]);\n\n  return DOMTokenListImpl;\n}();\n\nexports.implementation = DOMTokenListImpl;","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/DOMTokenList-impl.js"],"names":["DOMException","require","OrderedSet","asciiLowercase","idlUtils","getAttributeValue","setAttributeValue","hasAttributeByName","validateTokens","globalObject","tokens","token","create","test","DOMTokenListImpl","args","privateData","_globalObject","_tokenSet","_element","element","_attributeLocalName","attributeLocalName","_supportedTokens","supportedTokens","_dirty","val","empty","parse","TypeError","lowerToken","has","isEmpty","serialize","index","_syncWithElement","size","get","contains","append","_updateSteps","remove","force","undefined","newToken","replace","_validationSteps","supportedPropertyIndices","keys","_serializeSteps","V","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst OrderedSet = require(\"../helpers/ordered-set.js\");\nconst { asciiLowercase } = require(\"../helpers/strings.js\");\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst { getAttributeValue, setAttributeValue, hasAttributeByName } = require(\"../attributes.js\");\n\nfunction validateTokens(globalObject, ...tokens) {\n  for (const token of tokens) {\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n  for (const token of tokens) {\n    if (/[\\t\\n\\f\\r ]/.test(token)) {\n      throw DOMException.create(globalObject, [\n        \"The token provided contains HTML space characters, which are not valid in tokens.\",\n        \"InvalidCharacterError\"\n      ]);\n    }\n  }\n}\n\n// https://dom.spec.whatwg.org/#domtokenlist\nclass DOMTokenListImpl {\n  constructor(globalObject, args, privateData) {\n    this._globalObject = globalObject;\n\n    // _syncWithElement() must always be called before any _tokenSet access.\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens;\n\n    // Needs synchronization with element if token set is to be accessed.\n    this._dirty = true;\n  }\n\n  attrModified() {\n    this._dirty = true;\n  }\n\n  _syncWithElement() {\n    if (!this._dirty) {\n      return;\n    }\n\n    const val = getAttributeValue(this._element, this._attributeLocalName);\n    if (val === null) {\n      this._tokenSet.empty();\n    } else {\n      this._tokenSet = OrderedSet.parse(val);\n    }\n\n    this._dirty = false;\n  }\n\n  _validationSteps(token) {\n    if (!this._supportedTokens) {\n      throw new TypeError(`${this._attributeLocalName} attribute has no supported tokens`);\n    }\n    const lowerToken = asciiLowercase(token);\n    return this._supportedTokens.has(lowerToken);\n  }\n\n  _updateSteps() {\n    if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n      return;\n    }\n    setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n  }\n\n  _serializeSteps() {\n    return getAttributeValue(this._element, this._attributeLocalName);\n  }\n\n  // Used by other parts of jsdom\n  get tokenSet() {\n    this._syncWithElement();\n    return this._tokenSet;\n  }\n\n  get length() {\n    this._syncWithElement();\n    return this._tokenSet.size;\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._syncWithElement();\n    return this._tokenSet.keys();\n  }\n\n  item(index) {\n    this._syncWithElement();\n    if (index >= this._tokenSet.size) {\n      return null;\n    }\n    return this._tokenSet.get(index);\n  }\n\n  contains(token) {\n    this._syncWithElement();\n    return this._tokenSet.contains(token);\n  }\n\n  add(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    for (const token of tokens) {\n      this._tokenSet.append(token);\n    }\n    this._updateSteps();\n  }\n\n  remove(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    this._tokenSet.remove(...tokens);\n    this._updateSteps();\n  }\n\n  toggle(token, force = undefined) {\n    validateTokens(this._globalObject, token);\n    this._syncWithElement();\n    if (this._tokenSet.contains(token)) {\n      if (force === undefined || force === false) {\n        this._tokenSet.remove(token);\n        this._updateSteps();\n        return false;\n      }\n      return true;\n    }\n    if (force === undefined || force === true) {\n      this._tokenSet.append(token);\n      this._updateSteps();\n      return true;\n    }\n    return false;\n  }\n\n  replace(token, newToken) {\n    validateTokens(this._globalObject, token, newToken);\n    this._syncWithElement();\n    if (!this._tokenSet.contains(token)) {\n      return false;\n    }\n    this._tokenSet.replace(token, newToken);\n    this._updateSteps();\n    return true;\n  }\n\n  supports(token) {\n    return this._validationSteps(token);\n  }\n\n  get value() {\n    return this._serializeSteps();\n  }\n\n  set value(V) {\n    setAttributeValue(this._element, this._attributeLocalName, V);\n  }\n}\n\nexports.implementation = DOMTokenListImpl;\n"]},"metadata":{},"sourceType":"script"}