{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MOHAM\\\\Desktop\\\\TeamFClient\\\\src\\\\Components\\\\Chatscreen.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useEffect } from 'react';\nconst ENDPOINT = 'http://localhost:4000';\n\nconst Chatscreen = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Make connection\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on('chat', function (data) {\n      feedback.innerHTML = '';\n      output.innerHTML += '<p><strong>' + data.handle + ': </strong>' + data.message + '</p>';\n    });\n    socket.on('typing', function (data) {\n      feedback.innerHTML = '<p><em>' + data + ' is typing a message...</em></p>';\n    });\n  }, []); // Query DOM\n\n  var message = document.getElementById('message'),\n      handle = document.getElementById('handle'),\n      btn = document.getElementById('send'),\n      output = document.getElementById('output'),\n      feedback = document.getElementById('feedback'); // Emit events\n  // message.addEventListener('keypress', function () {\n  //     socket.emit('typing', handle.value)\n  // })\n  // Listen for events\n\n  const OnSend = () => {\n    _s();\n\n    useEffect(() => {\n      const socket = socketIOClient(ENDPOINT);\n      socket.emit('chat', {\n        message: message.value,\n        handle: handle.value\n      });\n    }, []);\n  };\n\n  _s(OnSend, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mario-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mario Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"handle\",\n        type: \"text\",\n        placeholder: \"Handle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"message\",\n        type: \"text\",\n        placeholder: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onCLick: OnSend,\n        id: \"send\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Chatscreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chatscreen;\nexport default Chatscreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatscreen\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/TeamFClient/src/Components/Chatscreen.js"],"names":["React","socketIOClient","useEffect","ENDPOINT","Chatscreen","socket","on","data","feedback","innerHTML","output","handle","message","document","getElementById","btn","OnSend","emit","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AACrB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMG,MAAM,GAAGJ,cAAc,CAACE,QAAD,CAA7B;AAEAE,IAAAA,MAAM,CAACC,EAAP,CAAU,MAAV,EAAkB,UAAUC,IAAV,EAAgB;AAC9BC,MAAAA,QAAQ,CAACC,SAAT,GAAqB,EAArB;AACAC,MAAAA,MAAM,CAACD,SAAP,IACI,gBACAF,IAAI,CAACI,MADL,GAEA,aAFA,GAGAJ,IAAI,CAACK,OAHL,GAIA,MALJ;AAMH,KARD;AAUAP,IAAAA,MAAM,CAACC,EAAP,CAAU,QAAV,EAAoB,UAAUC,IAAV,EAAgB;AAChCC,MAAAA,QAAQ,CAACC,SAAT,GACI,YAAYF,IAAZ,GAAmB,kCADvB;AAEH,KAHD;AAIH,GAjBQ,EAiBN,EAjBM,CAAT,CAFqB,CAqBrB;;AACA,MAAIK,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAd;AAAA,MACIH,MAAM,GAAGE,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CADb;AAAA,MAEIC,GAAG,GAAGF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFV;AAAA,MAGIJ,MAAM,GAAGG,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAHb;AAAA,MAIIN,QAAQ,GAAGK,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAJf,CAtBqB,CA4BrB;AACA;AACA;AACA;AAEA;;AACA,QAAME,MAAM,GAAG,MAAM;AAAA;;AACjBd,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMG,MAAM,GAAGJ,cAAc,CAACE,QAAD,CAA7B;AAEAE,MAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;AAChBL,QAAAA,OAAO,EAAEA,OAAO,CAACM,KADD;AAEhBP,QAAAA,MAAM,EAAEA,MAAM,CAACO;AAFC,OAApB;AAIH,KAPQ,EAON,EAPM,CAAT;AAQH,GATD;;AAlCqB,KAkCfF,MAlCe;;AA4CrB,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,aAAR;AAAA,gCACI;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,OAAO,EAAEA,MAAjB;AAAyB,QAAA,EAAE,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5DD;;IAAMZ,U;;KAAAA,U;AA8DN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport socketIOClient from 'socket.io-client'\r\nimport { useEffect } from 'react'\r\n\r\nconst ENDPOINT = 'http://localhost:4000'\r\n\r\nconst Chatscreen = () => {\r\n    // Make connection\r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT)\r\n\r\n        socket.on('chat', function (data) {\r\n            feedback.innerHTML = ''\r\n            output.innerHTML +=\r\n                '<p><strong>' +\r\n                data.handle +\r\n                ': </strong>' +\r\n                data.message +\r\n                '</p>'\r\n        })\r\n\r\n        socket.on('typing', function (data) {\r\n            feedback.innerHTML =\r\n                '<p><em>' + data + ' is typing a message...</em></p>'\r\n        })\r\n    }, [])\r\n\r\n    // Query DOM\r\n    var message = document.getElementById('message'),\r\n        handle = document.getElementById('handle'),\r\n        btn = document.getElementById('send'),\r\n        output = document.getElementById('output'),\r\n        feedback = document.getElementById('feedback')\r\n\r\n    // Emit events\r\n    // message.addEventListener('keypress', function () {\r\n    //     socket.emit('typing', handle.value)\r\n    // })\r\n\r\n    // Listen for events\r\n    const OnSend = () => {\r\n        useEffect(() => {\r\n            const socket = socketIOClient(ENDPOINT)\r\n\r\n            socket.emit('chat', {\r\n                message: message.value,\r\n                handle: handle.value,\r\n            })\r\n        }, [])\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"mario-chat\">\r\n                <h2>Mario Chat</h2>\r\n                <div id=\"chat-window\">\r\n                    <div id=\"output\"></div>\r\n                    <div id=\"feedback\"></div>\r\n                </div>\r\n                <input id=\"handle\" type=\"text\" placeholder=\"Handle\" />\r\n                <input id=\"message\" type=\"text\" placeholder=\"Message\" />\r\n                <button onCLick={OnSend} id=\"send\">\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatscreen\r\n"]},"metadata":{},"sourceType":"module"}