{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar MouseEvent = require(\"../generated/MouseEvent\");\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require2 = require(\"../helpers/form-controls\"),\n    isLabelable = _require2.isLabelable,\n    isDisabled = _require2.isDisabled,\n    isInteractiveContent = _require2.isInteractiveContent;\n\nvar _require3 = require(\"../helpers/node\"),\n    isInclusiveAncestor = _require3.isInclusiveAncestor;\n\nvar _require4 = require(\"../helpers/events\"),\n    fireAnEvent = _require4.fireAnEvent;\n\nfunction sendClickToAssociatedNode(node) {\n  fireAnEvent(\"click\", node, MouseEvent, {\n    bubbles: true,\n    cancelable: true,\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    button: 0,\n    detail: 1,\n    relatedTarget: null\n  });\n}\n\nvar HTMLLabelElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLLabelElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLLabelElementImpl);\n\n  function HTMLLabelElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLLabelElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._hasActivationBehavior = true;\n    return _this;\n  }\n\n  _createClass(HTMLLabelElementImpl, [{\n    key: \"_activationBehavior\",\n    value: function _activationBehavior(event) {\n      // Check if the event's target is an inclusive descendant of any interactive content descendant of this <label>.\n      // If so, do nothing.\n      if (event.target && event.target !== this && isInclusiveAncestor(this, event.target)) {\n        var _iterator = _createForOfIteratorHelper(domSymbolTree.ancestorsIterator(event.target)),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var ancestor = _step.value;\n\n            if (ancestor === this) {\n              break;\n            }\n\n            if (isInteractiveContent(ancestor)) {\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var node = this.control;\n\n      if (node && !isDisabled(node)) {\n        // Check if the control is an inclusive ancestor of the event's target (and has already received this event).\n        // If so, do nothing.\n        // See https://github.com/whatwg/html/issues/5415.\n        if (event.target && isInclusiveAncestor(node, event.target)) {\n          return;\n        }\n\n        sendClickToAssociatedNode(node);\n      }\n    }\n  }, {\n    key: \"control\",\n    get: function get() {\n      if (this.hasAttributeNS(null, \"for\")) {\n        var forValue = this.getAttributeNS(null, \"for\");\n\n        if (forValue === \"\") {\n          return null;\n        }\n\n        var root = this.getRootNode({});\n\n        var _iterator2 = _createForOfIteratorHelper(domSymbolTree.treeIterator(root)),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var descendant = _step2.value;\n\n            if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === forValue) {\n              return isLabelable(descendant) ? descendant : null;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        return null;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _descendant = _step3.value;\n\n          if (isLabelable(_descendant)) {\n            return _descendant;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      var node = this.control;\n\n      if (node) {\n        return node.form;\n      }\n\n      return null;\n    }\n  }]);\n\n  return HTMLLabelElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement-impl.js"],"names":["HTMLElementImpl","require","implementation","MouseEvent","domSymbolTree","NODE_TYPE","isLabelable","isDisabled","isInteractiveContent","isInclusiveAncestor","fireAnEvent","sendClickToAssociatedNode","node","bubbles","cancelable","view","ownerDocument","defaultView","screenX","screenY","clientX","clientY","button","detail","relatedTarget","HTMLLabelElementImpl","globalObject","args","privateData","_hasActivationBehavior","event","target","ancestorsIterator","ancestor","control","hasAttributeNS","forValue","getAttributeNS","root","getRootNode","treeIterator","descendant","nodeType","ELEMENT_NODE","form","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst MouseEvent = require(\"../generated/MouseEvent\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { isLabelable, isDisabled, isInteractiveContent } = require(\"../helpers/form-controls\");\nconst { isInclusiveAncestor } = require(\"../helpers/node\");\nconst { fireAnEvent } = require(\"../helpers/events\");\n\nfunction sendClickToAssociatedNode(node) {\n  fireAnEvent(\"click\", node, MouseEvent, {\n    bubbles: true,\n    cancelable: true,\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    button: 0,\n    detail: 1,\n    relatedTarget: null\n  });\n}\n\nclass HTMLLabelElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._hasActivationBehavior = true;\n  }\n\n  get control() {\n    if (this.hasAttributeNS(null, \"for\")) {\n      const forValue = this.getAttributeNS(null, \"for\");\n      if (forValue === \"\") {\n        return null;\n      }\n      const root = this.getRootNode({});\n      for (const descendant of domSymbolTree.treeIterator(root)) {\n        if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE &&\n          descendant.getAttributeNS(null, \"id\") === forValue) {\n          return isLabelable(descendant) ? descendant : null;\n        }\n      }\n      return null;\n    }\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (isLabelable(descendant)) {\n        return descendant;\n      }\n    }\n    return null;\n  }\n\n  get form() {\n    const node = this.control;\n    if (node) {\n      return node.form;\n    }\n    return null;\n  }\n\n  _activationBehavior(event) {\n    // Check if the event's target is an inclusive descendant of any interactive content descendant of this <label>.\n    // If so, do nothing.\n    if (event.target && event.target !== this && isInclusiveAncestor(this, event.target)) {\n      for (const ancestor of domSymbolTree.ancestorsIterator(event.target)) {\n        if (ancestor === this) {\n          break;\n        }\n        if (isInteractiveContent(ancestor)) {\n          return;\n        }\n      }\n    }\n\n    const node = this.control;\n    if (node && !isDisabled(node)) {\n      // Check if the control is an inclusive ancestor of the event's target (and has already received this event).\n      // If so, do nothing.\n      // See https://github.com/whatwg/html/issues/5415.\n      if (event.target && isInclusiveAncestor(node, event.target)) {\n        return;\n      }\n\n      sendClickToAssociatedNode(node);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}