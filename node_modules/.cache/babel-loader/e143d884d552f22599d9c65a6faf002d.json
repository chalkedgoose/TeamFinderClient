{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar legacyErrorCodes = require(\"./legacy-error-codes.json\");\n\nvar idlUtils = require(\"./utils.js\");\n\nexports.implementation = /*#__PURE__*/function () {\n  function DOMExceptionImpl(globalObject, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        message = _ref2[0],\n        name = _ref2[1];\n\n    _classCallCheck(this, DOMExceptionImpl);\n\n    this.name = name;\n    this.message = message;\n  }\n\n  _createClass(DOMExceptionImpl, [{\n    key: \"code\",\n    get: function get() {\n      return legacyErrorCodes[this.name] || 0;\n    }\n  }]);\n\n  return DOMExceptionImpl;\n}(); // A proprietary V8 extension that causes the stack property to appear.\n\n\nexports.init = function (impl) {\n  if (Error.captureStackTrace) {\n    var wrapper = idlUtils.wrapperForImpl(impl);\n    Error.captureStackTrace(wrapper, wrapper.constructor);\n  }\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/domexception/lib/DOMException-impl.js"],"names":["legacyErrorCodes","require","idlUtils","exports","implementation","globalObject","message","name","init","impl","Error","captureStackTrace","wrapper","wrapperForImpl","constructor"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;;AAEAE,OAAO,CAACC,cAAR;AACE,4BAAYC,YAAZ,QAA2C;AAAA;AAAA,QAAhBC,OAAgB;AAAA,QAAPC,IAAO;;AAAA;;AACzC,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAJH;AAAA;AAAA,wBAMa;AACT,aAAON,gBAAgB,CAAC,KAAKO,IAAN,CAAhB,IAA+B,CAAtC;AACD;AARH;;AAAA;AAAA,I,CAWA;;;AACAJ,OAAO,CAACK,IAAR,GAAe,UAAAC,IAAI,EAAI;AACrB,MAAIC,KAAK,CAACC,iBAAV,EAA6B;AAC3B,QAAMC,OAAO,GAAGV,QAAQ,CAACW,cAAT,CAAwBJ,IAAxB,CAAhB;AACAC,IAAAA,KAAK,CAACC,iBAAN,CAAwBC,OAAxB,EAAiCA,OAAO,CAACE,WAAzC;AACD;AACF,CALD","sourcesContent":["\"use strict\";\nconst legacyErrorCodes = require(\"./legacy-error-codes.json\");\nconst idlUtils = require(\"./utils.js\");\n\nexports.implementation = class DOMExceptionImpl {\n  constructor(globalObject, [message, name]) {\n    this.name = name;\n    this.message = message;\n  }\n\n  get code() {\n    return legacyErrorCodes[this.name] || 0;\n  }\n};\n\n// A proprietary V8 extension that causes the stack property to appear.\nexports.init = impl => {\n  if (Error.captureStackTrace) {\n    const wrapper = idlUtils.wrapperForImpl(impl);\n    Error.captureStackTrace(wrapper, wrapper.constructor);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}