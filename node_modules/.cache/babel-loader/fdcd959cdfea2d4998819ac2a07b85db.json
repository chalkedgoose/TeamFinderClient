{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar _require = require(\"whatwg-url\"),\n    serializeURL = _require.serializeURL;\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require2 = require(\"../../utils\"),\n    Canvas = _require2.Canvas;\n\nvar _require3 = require(\"../helpers/document-base-url\"),\n    parseURLToResultingURLRecord = _require3.parseURLToResultingURLRecord;\n\nvar HTMLImageElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLImageElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLImageElementImpl);\n\n  function HTMLImageElementImpl() {\n    var _this;\n\n    _classCallCheck(this, HTMLImageElementImpl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._currentRequestState = \"unavailable\";\n    return _this;\n  }\n\n  _createClass(HTMLImageElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldVal) {\n      // TODO: handle crossorigin\n      if (name === \"src\" || (name === \"srcset\" || name === \"width\" || name === \"sizes\") && value !== oldVal) {\n        this._updateTheImageData();\n      }\n\n      _get(_getPrototypeOf(HTMLImageElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldVal);\n    }\n  }, {\n    key: \"_updateTheImageData\",\n    // https://html.spec.whatwg.org/multipage/images.html#updating-the-image-data\n    value: function _updateTheImageData() {\n      var _this2 = this;\n\n      var document = this._ownerDocument;\n\n      if (!document._defaultView) {\n        return;\n      }\n\n      if (!Canvas) {\n        return;\n      }\n\n      if (!this._image) {\n        this._image = new Canvas.Image();\n      }\n\n      this._currentSrc = null;\n      this._currentRequestState = \"unavailable\";\n      var srcAttributeValue = this.getAttributeNS(null, \"src\");\n      var urlString = null;\n\n      if (srcAttributeValue !== null && srcAttributeValue !== \"\") {\n        var urlRecord = parseURLToResultingURLRecord(srcAttributeValue, this._ownerDocument);\n\n        if (urlRecord === null) {\n          return;\n        }\n\n        urlString = serializeURL(urlRecord);\n      }\n\n      if (urlString !== null) {\n        var resourceLoader = document._resourceLoader;\n        var request;\n\n        var onLoadImage = function onLoadImage(data) {\n          var _request = request,\n              response = _request.response;\n\n          if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n            throw new Error(\"Status code: \" + response.statusCode);\n          }\n\n          var error = null;\n\n          _this2._image.onerror = function (err) {\n            error = err;\n          };\n\n          _this2._image.src = data;\n\n          if (error) {\n            throw new Error(error);\n          }\n\n          _this2._currentSrc = srcAttributeValue;\n          _this2._currentRequestState = \"completely available\";\n        };\n\n        request = resourceLoader.fetch(urlString, {\n          element: this,\n          onLoad: onLoadImage,\n          onError: function onError() {\n            _this2._currentRequestState = \"broken\";\n          }\n        });\n      } else {\n        this._image.src = \"\";\n      }\n    }\n  }, {\n    key: \"_accept\",\n    get: function get() {\n      return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      // Just like on browsers, if no width / height is defined, we fall back on the\n      // dimensions of the internal image data.\n      return this.hasAttributeNS(null, \"height\") ? conversions[\"unsigned long\"](this.getAttributeNS(null, \"height\")) : this.naturalHeight;\n    },\n    set: function set(V) {\n      this.setAttributeNS(null, \"height\", String(V));\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.hasAttributeNS(null, \"width\") ? conversions[\"unsigned long\"](this.getAttributeNS(null, \"width\")) : this.naturalWidth;\n    },\n    set: function set(V) {\n      this.setAttributeNS(null, \"width\", String(V));\n    }\n  }, {\n    key: \"naturalHeight\",\n    get: function get() {\n      return this._image ? this._image.naturalHeight : 0;\n    }\n  }, {\n    key: \"naturalWidth\",\n    get: function get() {\n      return this._image ? this._image.naturalWidth : 0;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      var srcAttributeValue = this.getAttributeNS(null, \"src\");\n      return srcAttributeValue === null || srcAttributeValue === \"\" || this._currentRequestState === \"broken\" || this._currentRequestState === \"completely available\";\n    }\n  }, {\n    key: \"currentSrc\",\n    get: function get() {\n      return this._currentSrc || \"\";\n    }\n  }]);\n\n  return HTMLImageElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement-impl.js"],"names":["conversions","require","serializeURL","HTMLElementImpl","implementation","Canvas","parseURLToResultingURLRecord","HTMLImageElementImpl","args","_currentRequestState","name","value","oldVal","_updateTheImageData","document","_ownerDocument","_defaultView","_image","Image","_currentSrc","srcAttributeValue","getAttributeNS","urlString","urlRecord","resourceLoader","_resourceLoader","request","onLoadImage","data","response","statusCode","undefined","Error","error","onerror","err","src","fetch","element","onLoad","onError","hasAttributeNS","naturalHeight","V","setAttributeNS","String","naturalWidth","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst conversions = require(\"webidl-conversions\");\nconst { serializeURL } = require(\"whatwg-url\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { Canvas } = require(\"../../utils\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\n\nclass HTMLImageElementImpl extends HTMLElementImpl {\n  constructor(...args) {\n    super(...args);\n    this._currentRequestState = \"unavailable\";\n  }\n\n  _attrModified(name, value, oldVal) {\n    // TODO: handle crossorigin\n    if (name === \"src\" || ((name === \"srcset\" || name === \"width\" || name === \"sizes\") && value !== oldVal)) {\n      this._updateTheImageData();\n    }\n\n    super._attrModified(name, value, oldVal);\n  }\n\n  get _accept() {\n    return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n  }\n\n  get height() {\n    // Just like on browsers, if no width / height is defined, we fall back on the\n    // dimensions of the internal image data.\n    return this.hasAttributeNS(null, \"height\") ?\n           conversions[\"unsigned long\"](this.getAttributeNS(null, \"height\")) :\n           this.naturalHeight;\n  }\n\n  set height(V) {\n    this.setAttributeNS(null, \"height\", String(V));\n  }\n\n  get width() {\n    return this.hasAttributeNS(null, \"width\") ?\n           conversions[\"unsigned long\"](this.getAttributeNS(null, \"width\")) :\n           this.naturalWidth;\n  }\n\n  set width(V) {\n    this.setAttributeNS(null, \"width\", String(V));\n  }\n\n  get naturalHeight() {\n    return this._image ? this._image.naturalHeight : 0;\n  }\n\n  get naturalWidth() {\n    return this._image ? this._image.naturalWidth : 0;\n  }\n\n  get complete() {\n    const srcAttributeValue = this.getAttributeNS(null, \"src\");\n    return srcAttributeValue === null ||\n      srcAttributeValue === \"\" ||\n      this._currentRequestState === \"broken\" ||\n      this._currentRequestState === \"completely available\";\n  }\n\n  get currentSrc() {\n    return this._currentSrc || \"\";\n  }\n\n  // https://html.spec.whatwg.org/multipage/images.html#updating-the-image-data\n  _updateTheImageData() {\n    const document = this._ownerDocument;\n\n    if (!document._defaultView) {\n      return;\n    }\n\n    if (!Canvas) {\n      return;\n    }\n\n    if (!this._image) {\n      this._image = new Canvas.Image();\n    }\n    this._currentSrc = null;\n    this._currentRequestState = \"unavailable\";\n    const srcAttributeValue = this.getAttributeNS(null, \"src\");\n    let urlString = null;\n    if (srcAttributeValue !== null && srcAttributeValue !== \"\") {\n      const urlRecord = parseURLToResultingURLRecord(srcAttributeValue, this._ownerDocument);\n      if (urlRecord === null) {\n        return;\n      }\n      urlString = serializeURL(urlRecord);\n    }\n    if (urlString !== null) {\n      const resourceLoader = document._resourceLoader;\n      let request;\n\n      const onLoadImage = data => {\n        const { response } = request;\n\n        if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n          throw new Error(\"Status code: \" + response.statusCode);\n        }\n        let error = null;\n        this._image.onerror = function (err) {\n          error = err;\n        };\n        this._image.src = data;\n        if (error) {\n          throw new Error(error);\n        }\n        this._currentSrc = srcAttributeValue;\n        this._currentRequestState = \"completely available\";\n      };\n\n      request = resourceLoader.fetch(urlString, {\n        element: this,\n        onLoad: onLoadImage,\n        onError: () => {\n          this._currentRequestState = \"broken\";\n        }\n      });\n    } else {\n      this._image.src = \"\";\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}