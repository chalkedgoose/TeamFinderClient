{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTTP_STATUS_CODES = require(\"http\").STATUS_CODES;\n\nvar _require = require(\"child_process\"),\n    spawnSync = _require.spawnSync;\n\nvar _require2 = require(\"whatwg-url\"),\n    URL = _require2.URL;\n\nvar whatwgEncoding = require(\"whatwg-encoding\");\n\nvar tough = require(\"tough-cookie\");\n\nvar MIMEType = require(\"whatwg-mimetype\");\n\nvar xhrUtils = require(\"./xhr-utils\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar _require3 = require(\"../helpers/document-base-url\"),\n    documentBaseURLSerialized = _require3.documentBaseURLSerialized;\n\nvar _require4 = require(\"../helpers/strings\"),\n    asciiCaseInsensitiveMatch = _require4.asciiCaseInsensitiveMatch;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar Document = require(\"../generated/Document\");\n\nvar Blob = require(\"../generated/Blob\");\n\nvar FormData = require(\"../generated/FormData\");\n\nvar XMLHttpRequestEventTargetImpl = require(\"./XMLHttpRequestEventTarget-impl\").implementation;\n\nvar XMLHttpRequestUpload = require(\"../generated/XMLHttpRequestUpload\");\n\nvar ProgressEvent = require(\"../generated/ProgressEvent\");\n\nvar _require5 = require(\"../generated/utils\"),\n    isArrayBuffer = _require5.isArrayBuffer;\n\nvar _require6 = require(\"../../browser/parser\"),\n    parseIntoDocument = _require6.parseIntoDocument;\n\nvar _require7 = require(\"../domparsing/serialization\"),\n    fragmentSerialization = _require7.fragmentSerialization;\n\nvar _require8 = require(\"../helpers/create-event-accessor\"),\n    setupForSimpleEventAccessors = _require8.setupForSimpleEventAccessors;\n\nvar _require9 = require(\"../helpers/json\"),\n    parseJSONFromBytes = _require9.parseJSONFromBytes;\n\nvar _require10 = require(\"../helpers/events\"),\n    fireAnEvent = _require10.fireAnEvent;\n\nvar _require11 = require(\"../helpers/binary-data\"),\n    copyToArrayBufferInNewRealm = _require11.copyToArrayBufferInNewRealm;\n\nvar READY_STATES = xhrUtils.READY_STATES;\nvar syncWorkerFile = require.resolve ? require.resolve(\"./xhr-sync-worker.js\") : null;\nvar tokenRegexp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\nvar fieldValueRegexp = /^[ \\t]*(?:[\\x21-\\x7E\\x80-\\xFF](?:[ \\t][\\x21-\\x7E\\x80-\\xFF])?)*[ \\t]*$/;\nvar forbiddenRequestHeaders = new Set([\"accept-charset\", \"accept-encoding\", \"access-control-request-headers\", \"access-control-request-method\", \"connection\", \"content-length\", \"cookie\", \"cookie2\", \"date\", \"dnt\", \"expect\", \"host\", \"keep-alive\", \"origin\", \"referer\", \"te\", \"trailer\", \"transfer-encoding\", \"upgrade\", \"via\"]);\nvar forbiddenResponseHeaders = new Set([\"set-cookie\", \"set-cookie2\"]);\nvar uniqueResponseHeaders = new Set([\"content-type\", \"content-length\", \"user-agent\", \"referer\", \"host\", \"authorization\", \"proxy-authorization\", \"if-modified-since\", \"if-unmodified-since\", \"from\", \"location\", \"max-forwards\"]);\nvar corsSafeResponseHeaders = new Set([\"cache-control\", \"content-language\", \"content-type\", \"expires\", \"last-modified\", \"pragma\"]);\nvar allowedRequestMethods = new Set([\"OPTIONS\", \"GET\", \"HEAD\", \"POST\", \"PUT\", \"DELETE\"]);\nvar forbiddenRequestMethods = new Set([\"TRACK\", \"TRACE\", \"CONNECT\"]);\n\nvar XMLHttpRequestImpl = /*#__PURE__*/function (_XMLHttpRequestEventT) {\n  _inherits(XMLHttpRequestImpl, _XMLHttpRequestEventT);\n\n  var _super = _createSuper(XMLHttpRequestImpl);\n\n  function XMLHttpRequestImpl(window) {\n    var _this;\n\n    _classCallCheck(this, XMLHttpRequestImpl);\n\n    _this = _super.call(this, window); // Avoid running `_ownerDocument` getter multiple times in the constructor:\n\n    var _assertThisInitialize = _assertThisInitialized(_this),\n        _ownerDocument = _assertThisInitialize._ownerDocument;\n\n    _this.upload = XMLHttpRequestUpload.createImpl(window);\n    _this.readyState = READY_STATES.UNSENT;\n    _this.responseURL = \"\";\n    _this.status = 0;\n    _this.statusText = \"\";\n    _this.flag = {\n      synchronous: false,\n      withCredentials: false,\n      mimeType: null,\n      auth: null,\n      method: undefined,\n      responseType: \"\",\n      requestHeaders: {},\n      referrer: _ownerDocument.URL,\n      uri: \"\",\n      timeout: 0,\n      body: undefined,\n      formData: false,\n      preflight: false,\n      requestManager: _ownerDocument._requestManager,\n      strictSSL: window._resourceLoader._strictSSL,\n      proxy: window._resourceLoader._proxy,\n      cookieJar: _ownerDocument._cookieJar,\n      encoding: _ownerDocument._encoding,\n      origin: window._origin,\n      userAgent: window.navigator.userAgent\n    };\n    _this.properties = {\n      beforeSend: false,\n      send: false,\n      client: null,\n      timeoutStart: 0,\n      timeoutId: 0,\n      timeoutFn: null,\n      responseBuffer: null,\n      responseCache: null,\n      responseTextCache: null,\n      responseXMLCache: null,\n      responseHeaders: {},\n      filteredResponseHeaders: [],\n      error: \"\",\n      uploadComplete: false,\n      uploadListener: false,\n      // Signifies that we're calling abort() from xhr-utils.js because of a window shutdown.\n      // In that case the termination reason is \"fatal\", not \"end-user abort\".\n      abortError: false,\n      cookieJar: _ownerDocument._cookieJar,\n      bufferStepSize: 1 * 1024 * 1024,\n      // pre-allocate buffer increase step size. init value is 1MB\n      totalReceivedChunkSize: 0\n    };\n    return _this;\n  }\n\n  _createClass(XMLHttpRequestImpl, [{\n    key: \"abort\",\n    value: function abort() {\n      var properties = this.properties; // Terminate the request\n\n      clearTimeout(properties.timeoutId);\n      properties.timeoutFn = null;\n      properties.timeoutStart = 0;\n      var client = properties.client;\n\n      if (client) {\n        client.abort();\n        properties.client = null;\n      }\n\n      if (properties.abortError) {\n        // Special case that ideally shouldn't be going through the public API at all.\n        // Run the https://xhr.spec.whatwg.org/#handle-errors \"fatal\" steps.\n        this.readyState = READY_STATES.DONE;\n        properties.send = false;\n        xhrUtils.setResponseToNetworkError(this);\n        return;\n      }\n\n      if (this.readyState === READY_STATES.OPENED && properties.send || this.readyState === READY_STATES.HEADERS_RECEIVED || this.readyState === READY_STATES.LOADING) {\n        xhrUtils.requestErrorSteps(this, \"abort\");\n      }\n\n      if (this.readyState === READY_STATES.DONE) {\n        this.readyState = READY_STATES.UNSENT;\n        xhrUtils.setResponseToNetworkError(this);\n      }\n    }\n  }, {\n    key: \"getAllResponseHeaders\",\n    value: function getAllResponseHeaders() {\n      var properties = this.properties,\n          readyState = this.readyState;\n\n      if (readyState === READY_STATES.UNSENT || readyState === READY_STATES.OPENED) {\n        return \"\";\n      }\n\n      return Object.keys(properties.responseHeaders).filter(function (key) {\n        return properties.filteredResponseHeaders.indexOf(key) === -1;\n      }).map(function (key) {\n        return [key.toLowerCase(), properties.responseHeaders[key]].join(\": \");\n      }).join(\"\\r\\n\");\n    }\n  }, {\n    key: \"getResponseHeader\",\n    value: function getResponseHeader(header) {\n      var properties = this.properties,\n          readyState = this.readyState;\n\n      if (readyState === READY_STATES.UNSENT || readyState === READY_STATES.OPENED) {\n        return null;\n      }\n\n      var lcHeader = header.toLowerCase();\n\n      if (properties.filteredResponseHeaders.find(function (filtered) {\n        return lcHeader === filtered.toLowerCase();\n      })) {\n        return null;\n      }\n\n      return _getResponseHeader(this, lcHeader);\n    }\n  }, {\n    key: \"open\",\n    value: function open(method, uri, asynchronous, user, password) {\n      var flag = this.flag,\n          properties = this.properties,\n          _ownerDocument = this._ownerDocument;\n\n      if (!_ownerDocument) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (!tokenRegexp.test(method)) {\n        throw DOMException.create(this._globalObject, [\"The string did not match the expected pattern.\", \"SyntaxError\"]);\n      }\n\n      var upperCaseMethod = method.toUpperCase();\n\n      if (forbiddenRequestMethods.has(upperCaseMethod)) {\n        throw DOMException.create(this._globalObject, [\"The operation is insecure.\", \"SecurityError\"]);\n      }\n\n      var client = properties.client;\n\n      if (client && typeof client.abort === \"function\") {\n        client.abort();\n      }\n\n      if (allowedRequestMethods.has(upperCaseMethod)) {\n        method = upperCaseMethod;\n      }\n\n      if (typeof asynchronous !== \"undefined\") {\n        flag.synchronous = !asynchronous;\n      } else {\n        flag.synchronous = false;\n      }\n\n      if (flag.responseType && flag.synchronous) {\n        throw DOMException.create(this._globalObject, [\"The object does not support the operation or argument.\", \"InvalidAccessError\"]);\n      }\n\n      if (flag.synchronous && flag.timeout) {\n        throw DOMException.create(this._globalObject, [\"The object does not support the operation or argument.\", \"InvalidAccessError\"]);\n      }\n\n      flag.method = method;\n      var urlObj;\n\n      try {\n        urlObj = new URL(uri, documentBaseURLSerialized(_ownerDocument));\n      } catch (e) {\n        throw DOMException.create(this._globalObject, [\"The string did not match the expected pattern.\", \"SyntaxError\"]);\n      }\n\n      if (user || password && !urlObj.username) {\n        flag.auth = {\n          user: user,\n          pass: password\n        };\n        urlObj.username = \"\";\n        urlObj.password = \"\";\n      }\n\n      flag.uri = urlObj.href;\n      flag.requestHeaders = {};\n      flag.preflight = false;\n      properties.send = false;\n      properties.uploadListener = false;\n      properties.abortError = false;\n      this.responseURL = \"\";\n      readyStateChange(this, READY_STATES.OPENED);\n    }\n  }, {\n    key: \"overrideMimeType\",\n    value: function overrideMimeType(mime) {\n      var readyState = this.readyState;\n\n      if (readyState === READY_STATES.LOADING || readyState === READY_STATES.DONE) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      this.flag.overrideMIMEType = \"application/octet-stream\"; // Waiting for better spec: https://github.com/whatwg/xhr/issues/157\n\n      var parsed = MIMEType.parse(mime);\n\n      if (parsed) {\n        this.flag.overrideMIMEType = parsed.essence;\n        var charset = parsed.parameters.get(\"charset\");\n\n        if (charset) {\n          this.flag.overrideCharset = whatwgEncoding.labelToName(charset);\n        }\n      }\n    } // TODO: Add support for URLSearchParams and ReadableStream\n\n  }, {\n    key: \"send\",\n    value: function send(body) {\n      var _this2 = this;\n\n      var flag = this.flag,\n          properties = this.properties,\n          upload = this.upload,\n          _ownerDocument = this._ownerDocument; // Not per spec, but per tests: https://github.com/whatwg/xhr/issues/65\n\n      if (!_ownerDocument) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (this.readyState !== READY_STATES.OPENED || properties.send) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      properties.beforeSend = true;\n\n      try {\n        if (flag.method === \"GET\" || flag.method === \"HEAD\") {\n          body = null;\n        }\n\n        if (body !== null) {\n          var encoding = null;\n          var mimeType = null;\n\n          if (Document.isImpl(body)) {\n            encoding = \"UTF-8\";\n            mimeType = (body._parsingMode === \"html\" ? \"text/html\" : \"application/xml\") + \";charset=UTF-8\";\n            flag.body = fragmentSerialization(body, {\n              requireWellFormed: false\n            });\n          } else {\n            if (typeof body === \"string\") {\n              encoding = \"UTF-8\";\n            }\n\n            var _extractBody = extractBody(body),\n                buffer = _extractBody.buffer,\n                formData = _extractBody.formData,\n                contentType = _extractBody.contentType;\n\n            mimeType = contentType;\n            flag.body = buffer || formData;\n            flag.formData = Boolean(formData);\n          }\n\n          var existingContentType = xhrUtils.getRequestHeader(flag.requestHeaders, \"content-type\");\n\n          if (mimeType !== null && existingContentType === null) {\n            flag.requestHeaders[\"Content-Type\"] = mimeType;\n          } else if (existingContentType !== null && encoding !== null) {\n            // Waiting for better spec: https://github.com/whatwg/xhr/issues/188. This seems like a good guess at what\n            // the spec will be, in the meantime.\n            var parsed = MIMEType.parse(existingContentType);\n\n            if (parsed) {\n              var charset = parsed.parameters.get(\"charset\");\n\n              if (charset && !asciiCaseInsensitiveMatch(charset, encoding) && encoding !== null) {\n                parsed.parameters.set(\"charset\", encoding);\n                xhrUtils.updateRequestHeader(flag.requestHeaders, \"content-type\", parsed.toString());\n              }\n            }\n          }\n        }\n      } finally {\n        if (properties.beforeSend) {\n          properties.beforeSend = false;\n        } else {\n          throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n        }\n      }\n\n      if (Object.keys(upload._eventListeners).length > 0) {\n        properties.uploadListener = true;\n      } // request doesn't like zero-length bodies\n\n\n      if (flag.body && flag.body.byteLength === 0) {\n        flag.body = null;\n      }\n\n      if (flag.synchronous) {\n        var flagStr = JSON.stringify(flag, function (k, v) {\n          if (this === flag && k === \"requestManager\") {\n            return null;\n          }\n\n          if (this === flag && k === \"pool\" && v) {\n            return {\n              maxSockets: v.maxSockets\n            };\n          }\n\n          return v;\n        });\n        var res = spawnSync(process.execPath, [syncWorkerFile], {\n          input: flagStr,\n          maxBuffer: Infinity\n        });\n\n        if (res.status !== 0) {\n          throw new Error(res.stderr.toString());\n        }\n\n        if (res.error) {\n          if (typeof res.error === \"string\") {\n            res.error = new Error(res.error);\n          }\n\n          throw res.error;\n        }\n\n        var response = JSON.parse(res.stdout.toString());\n        var resProp = response.properties;\n\n        if (resProp.responseBuffer && resProp.responseBuffer.data) {\n          resProp.responseBuffer = Buffer.from(resProp.responseBuffer.data);\n        }\n\n        if (resProp.cookieJar) {\n          resProp.cookieJar = tough.CookieJar.deserializeSync(resProp.cookieJar, _ownerDocument._cookieJar.store);\n        }\n\n        this.readyState = READY_STATES.LOADING;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.responseURL = response.responseURL;\n        Object.assign(this.properties, response.properties);\n\n        if (resProp.error) {\n          xhrUtils.dispatchError(this);\n          throw DOMException.create(this._globalObject, [resProp.error, \"NetworkError\"]);\n        } else {\n          var responseBuffer = properties.responseBuffer;\n          var contentLength = _getResponseHeader(this, \"content-length\") || \"0\";\n          var bufferLength = parseInt(contentLength) || responseBuffer.length;\n          var progressObj = {\n            lengthComputable: false\n          };\n\n          if (bufferLength !== 0) {\n            progressObj.total = bufferLength;\n            progressObj.loaded = bufferLength;\n            progressObj.lengthComputable = true;\n          }\n\n          fireAnEvent(\"progress\", this, ProgressEvent, progressObj);\n          readyStateChange(this, READY_STATES.DONE);\n          fireAnEvent(\"load\", this, ProgressEvent, progressObj);\n          fireAnEvent(\"loadend\", this, ProgressEvent, progressObj);\n        }\n      } else {\n        properties.send = true;\n        fireAnEvent(\"loadstart\", this, ProgressEvent);\n        var client = xhrUtils.createClient(this);\n        properties.client = client; // For new client, reset totalReceivedChunkSize and bufferStepSize\n\n        properties.totalReceivedChunkSize = 0;\n        properties.bufferStepSize = 1 * 1024 * 1024;\n        properties.origin = flag.origin;\n        client.on(\"error\", function (err) {\n          client.removeAllListeners();\n          properties.error = err;\n          xhrUtils.dispatchError(_this2);\n        });\n        client.on(\"response\", function (res) {\n          return receiveResponse(_this2, res);\n        });\n        client.on(\"redirect\", function () {\n          var response = client.response;\n          var destUrlObj = new URL(response.request.headers.Referer);\n          var urlObj = new URL(response.request.uri.href);\n\n          if (destUrlObj.origin !== urlObj.origin && destUrlObj.origin !== flag.origin) {\n            properties.origin = \"null\";\n          }\n\n          response.request.headers.Origin = properties.origin;\n\n          if (flag.origin !== destUrlObj.origin && destUrlObj.protocol !== \"data:\") {\n            if (!xhrUtils.validCORSHeaders(_this2, response, flag, properties, flag.origin)) {\n              return;\n            }\n\n            if (urlObj.username || urlObj.password) {\n              properties.error = \"Userinfo forbidden in cors redirect\";\n              xhrUtils.dispatchError(_this2);\n            }\n          }\n        });\n\n        if (body !== null && body !== \"\") {\n          properties.uploadComplete = false;\n          setDispatchProgressEvents(this);\n        } else {\n          properties.uploadComplete = true;\n        }\n\n        if (this.timeout > 0) {\n          properties.timeoutStart = new Date().getTime();\n\n          properties.timeoutFn = function () {\n            client.abort();\n\n            if (!(_this2.readyState === READY_STATES.UNSENT || _this2.readyState === READY_STATES.OPENED && !properties.send || _this2.readyState === READY_STATES.DONE)) {\n              properties.send = false;\n              var stateChanged = false;\n\n              if (!properties.uploadComplete) {\n                fireAnEvent(\"progress\", upload, ProgressEvent);\n                readyStateChange(_this2, READY_STATES.DONE);\n                fireAnEvent(\"timeout\", upload, ProgressEvent);\n                fireAnEvent(\"loadend\", upload, ProgressEvent);\n                stateChanged = true;\n              }\n\n              fireAnEvent(\"progress\", _this2, ProgressEvent);\n\n              if (!stateChanged) {\n                readyStateChange(_this2, READY_STATES.DONE);\n              }\n\n              fireAnEvent(\"timeout\", _this2, ProgressEvent);\n              fireAnEvent(\"loadend\", _this2, ProgressEvent);\n            }\n\n            _this2.readyState = READY_STATES.UNSENT;\n          };\n\n          properties.timeoutId = setTimeout(properties.timeoutFn, this.timeout);\n        }\n      }\n    }\n  }, {\n    key: \"setRequestHeader\",\n    value: function setRequestHeader(header, value) {\n      var flag = this.flag,\n          properties = this.properties;\n\n      if (this.readyState !== READY_STATES.OPENED || properties.send) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      value = normalizeHeaderValue(value);\n\n      if (!tokenRegexp.test(header) || !fieldValueRegexp.test(value)) {\n        throw DOMException.create(this._globalObject, [\"The string did not match the expected pattern.\", \"SyntaxError\"]);\n      }\n\n      var lcHeader = header.toLowerCase();\n\n      if (forbiddenRequestHeaders.has(lcHeader) || lcHeader.startsWith(\"sec-\") || lcHeader.startsWith(\"proxy-\")) {\n        return;\n      }\n\n      var keys = Object.keys(flag.requestHeaders);\n      var n = keys.length;\n\n      while (n--) {\n        var key = keys[n];\n\n        if (key.toLowerCase() === lcHeader) {\n          flag.requestHeaders[key] += \", \" + value;\n          return;\n        }\n      }\n\n      flag.requestHeaders[header] = value;\n    }\n  }, {\n    key: \"responseType\",\n    get: function get() {\n      return this.flag.responseType;\n    },\n    set: function set(responseType) {\n      var flag = this.flag;\n\n      if (this.readyState === READY_STATES.LOADING || this.readyState === READY_STATES.DONE) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (this.readyState === READY_STATES.OPENED && flag.synchronous) {\n        throw DOMException.create(this._globalObject, [\"The object does not support the operation or argument.\", \"InvalidAccessError\"]);\n      }\n\n      flag.responseType = responseType;\n    }\n  }, {\n    key: \"response\",\n    get: function get() {\n      var properties = this.properties;\n\n      if (properties.responseCache) {\n        // Needed because of: https://github.com/jsdom/webidl2js/issues/149\n        return idlUtils.tryWrapperForImpl(properties.responseCache);\n      }\n\n      var res;\n      var responseBuffer = properties.responseBuffer ? properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) : null;\n\n      switch (this.responseType) {\n        case \"\":\n        case \"text\":\n          {\n            res = this.responseText;\n            break;\n          }\n\n        case \"arraybuffer\":\n          {\n            if (!responseBuffer) {\n              return null;\n            }\n\n            res = copyToArrayBufferInNewRealm(responseBuffer, this._globalObject);\n            break;\n          }\n\n        case \"blob\":\n          {\n            if (!responseBuffer) {\n              return null;\n            }\n\n            var contentType = finalMIMEType(this);\n            res = Blob.createImpl(this._globalObject, [[new Uint8Array(responseBuffer)], {\n              type: contentType || \"\"\n            }]);\n            break;\n          }\n\n        case \"document\":\n          {\n            res = this.responseXML;\n            break;\n          }\n\n        case \"json\":\n          {\n            if (this.readyState !== READY_STATES.DONE || !responseBuffer) {\n              res = null;\n            }\n\n            try {\n              res = parseJSONFromBytes(responseBuffer);\n            } catch (e) {\n              res = null;\n            }\n\n            break;\n          }\n      }\n\n      properties.responseCache = res; // Needed because of: https://github.com/jsdom/webidl2js/issues/149\n\n      return idlUtils.tryWrapperForImpl(res);\n    }\n  }, {\n    key: \"responseText\",\n    get: function get() {\n      var properties = this.properties;\n\n      if (this.responseType !== \"\" && this.responseType !== \"text\") {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (this.readyState !== READY_STATES.LOADING && this.readyState !== READY_STATES.DONE) {\n        return \"\";\n      }\n\n      if (properties.responseTextCache) {\n        return properties.responseTextCache;\n      }\n\n      var responseBuffer = properties.responseBuffer ? properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) : null;\n\n      if (!responseBuffer) {\n        return \"\";\n      }\n\n      var fallbackEncoding = finalCharset(this) || whatwgEncoding.getBOMEncoding(responseBuffer) || \"UTF-8\";\n      var res = whatwgEncoding.decode(responseBuffer, fallbackEncoding);\n      properties.responseTextCache = res;\n      return res;\n    }\n  }, {\n    key: \"responseXML\",\n    get: function get() {\n      var flag = this.flag,\n          properties = this.properties;\n\n      if (this.responseType !== \"\" && this.responseType !== \"document\") {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (this.readyState !== READY_STATES.DONE) {\n        return null;\n      }\n\n      if (properties.responseXMLCache) {\n        return properties.responseXMLCache;\n      }\n\n      var responseBuffer = properties.responseBuffer ? properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) : null;\n\n      if (!responseBuffer) {\n        return null;\n      }\n\n      var contentType = finalMIMEType(this);\n      var isHTML = false;\n      var isXML = false;\n      var parsed = MIMEType.parse(contentType);\n\n      if (parsed) {\n        isHTML = parsed.isHTML();\n        isXML = parsed.isXML();\n\n        if (!isXML && !isHTML) {\n          return null;\n        }\n      }\n\n      if (this.responseType === \"\" && isHTML) {\n        return null;\n      }\n\n      var encoding = finalCharset(this) || whatwgEncoding.getBOMEncoding(responseBuffer) || \"UTF-8\";\n      var resText = whatwgEncoding.decode(responseBuffer, encoding);\n\n      if (!resText) {\n        return null;\n      }\n\n      var res = Document.createImpl(this._globalObject, [], {\n        options: {\n          url: flag.uri,\n          lastModified: new Date(_getResponseHeader(this, \"last-modified\")),\n          parsingMode: isHTML ? \"html\" : \"xml\",\n          cookieJar: {\n            setCookieSync: function setCookieSync() {\n              return undefined;\n            },\n            getCookieStringSync: function getCookieStringSync() {\n              return \"\";\n            }\n          },\n          encoding: encoding,\n          parseOptions: this._ownerDocument._parseOptions\n        }\n      });\n\n      try {\n        parseIntoDocument(resText, res);\n      } catch (e) {\n        properties.responseXMLCache = null;\n        return null;\n      }\n\n      res.close();\n      properties.responseXMLCache = res;\n      return res;\n    }\n  }, {\n    key: \"timeout\",\n    get: function get() {\n      return this.flag.timeout;\n    },\n    set: function set(val) {\n      var flag = this.flag,\n          properties = this.properties;\n\n      if (flag.synchronous) {\n        throw DOMException.create(this._globalObject, [\"The object does not support the operation or argument.\", \"InvalidAccessError\"]);\n      }\n\n      flag.timeout = val;\n      clearTimeout(properties.timeoutId);\n\n      if (val > 0 && properties.timeoutFn) {\n        properties.timeoutId = setTimeout(properties.timeoutFn, Math.max(0, val - (new Date().getTime() - properties.timeoutStart)));\n      } else {\n        properties.timeoutFn = null;\n        properties.timeoutStart = 0;\n      }\n    }\n  }, {\n    key: \"withCredentials\",\n    get: function get() {\n      return this.flag.withCredentials;\n    },\n    set: function set(val) {\n      var flag = this.flag,\n          properties = this.properties;\n\n      if (!(this.readyState === READY_STATES.UNSENT || this.readyState === READY_STATES.OPENED)) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      if (properties.send) {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n\n      flag.withCredentials = val;\n    }\n  }]);\n\n  return XMLHttpRequestImpl;\n}(XMLHttpRequestEventTargetImpl);\n\nsetupForSimpleEventAccessors(XMLHttpRequestImpl.prototype, [\"readystatechange\"]);\n\nfunction readyStateChange(xhr, readyState) {\n  if (xhr.readyState === readyState) {\n    return;\n  }\n\n  xhr.readyState = readyState;\n  fireAnEvent(\"readystatechange\", xhr);\n}\n\nfunction receiveResponse(xhr, response) {\n  var flag = xhr.flag,\n      properties = xhr.properties;\n  var statusCode = response.statusCode;\n  var byteOffset = 0;\n  var headers = {};\n  var filteredResponseHeaders = [];\n  var headerMap = {};\n  var rawHeaders = response.rawHeaders;\n  var n = Number(rawHeaders.length);\n\n  for (var i = 0; i < n; i += 2) {\n    var k = rawHeaders[i];\n    var kl = k.toLowerCase();\n    var v = rawHeaders[i + 1];\n\n    if (uniqueResponseHeaders.has(kl)) {\n      if (headerMap[kl] !== undefined) {\n        delete headers[headerMap[kl]];\n      }\n\n      headers[k] = v;\n    } else if (headerMap[kl] !== undefined) {\n      headers[headerMap[kl]] += \", \" + v;\n    } else {\n      headers[k] = v;\n    }\n\n    headerMap[kl] = k;\n  }\n\n  var destUrlObj = new URL(response.request.uri.href);\n\n  if (properties.origin !== destUrlObj.origin && destUrlObj.protocol !== \"data:\") {\n    if (!xhrUtils.validCORSHeaders(xhr, response, flag, properties, properties.origin)) {\n      return;\n    }\n\n    var acehStr = response.headers[\"access-control-expose-headers\"];\n    var aceh = new Set(acehStr ? acehStr.trim().toLowerCase().split(xhrUtils.headerListSeparatorRegexp) : []);\n\n    for (var header in headers) {\n      var lcHeader = header.toLowerCase();\n\n      if (!corsSafeResponseHeaders.has(lcHeader) && !aceh.has(lcHeader)) {\n        filteredResponseHeaders.push(header);\n      }\n    }\n  }\n\n  for (var _header in headers) {\n    var _lcHeader = _header.toLowerCase();\n\n    if (forbiddenResponseHeaders.has(_lcHeader)) {\n      filteredResponseHeaders.push(_header);\n    }\n  }\n\n  xhr.responseURL = destUrlObj.href;\n  xhr.status = statusCode;\n  xhr.statusText = response.statusMessage || HTTP_STATUS_CODES[statusCode] || \"\";\n  properties.responseHeaders = headers;\n  properties.filteredResponseHeaders = filteredResponseHeaders;\n  var contentLength = _getResponseHeader(xhr, \"content-length\") || \"0\";\n  var bufferLength = parseInt(contentLength) || 0;\n  var progressObj = {\n    lengthComputable: false\n  };\n  var lastProgressReported;\n\n  if (bufferLength !== 0) {\n    progressObj.total = bufferLength;\n    progressObj.loaded = 0;\n    progressObj.lengthComputable = true;\n  } // pre-allocate buffer.\n\n\n  properties.responseBuffer = Buffer.alloc(properties.bufferStepSize);\n  properties.responseCache = null;\n  properties.responseTextCache = null;\n  properties.responseXMLCache = null;\n  readyStateChange(xhr, READY_STATES.HEADERS_RECEIVED);\n\n  if (!properties.client) {\n    // The request was aborted in reaction to the readystatechange event.\n    return;\n  } // Can't use the client since the client gets the post-ungzipping bytes (which can be greater than the\n  // Content-Length).\n\n\n  response.on(\"data\", function (chunk) {\n    byteOffset += chunk.length;\n    progressObj.loaded = byteOffset;\n  });\n  properties.client.on(\"data\", function (chunk) {\n    properties.totalReceivedChunkSize += chunk.length;\n\n    if (properties.totalReceivedChunkSize >= properties.bufferStepSize) {\n      properties.bufferStepSize *= 2;\n\n      while (properties.totalReceivedChunkSize >= properties.bufferStepSize) {\n        properties.bufferStepSize *= 2;\n      }\n\n      var tmpBuf = Buffer.alloc(properties.bufferStepSize);\n      properties.responseBuffer.copy(tmpBuf, 0, 0, properties.responseBuffer.length);\n      properties.responseBuffer = tmpBuf;\n    }\n\n    chunk.copy(properties.responseBuffer, properties.totalReceivedChunkSize - chunk.length, 0, chunk.length);\n    properties.responseCache = null;\n    properties.responseTextCache = null;\n    properties.responseXMLCache = null;\n\n    if (xhr.readyState === READY_STATES.HEADERS_RECEIVED) {\n      xhr.readyState = READY_STATES.LOADING;\n    }\n\n    fireAnEvent(\"readystatechange\", xhr);\n\n    if (progressObj.total !== progressObj.loaded || properties.totalReceivedChunkSize === byteOffset) {\n      if (lastProgressReported !== progressObj.loaded) {\n        // This is a necessary check in the gzip case where we can be getting new data from the client, as it\n        // un-gzips, but no new data has been gotten from the response, so we should not fire a progress event.\n        lastProgressReported = progressObj.loaded;\n        fireAnEvent(\"progress\", xhr, ProgressEvent, progressObj);\n      }\n    }\n  });\n  properties.client.on(\"end\", function () {\n    clearTimeout(properties.timeoutId);\n    properties.timeoutFn = null;\n    properties.timeoutStart = 0;\n    properties.client = null;\n    fireAnEvent(\"progress\", xhr, ProgressEvent, progressObj);\n    readyStateChange(xhr, READY_STATES.DONE);\n    fireAnEvent(\"load\", xhr, ProgressEvent, progressObj);\n    fireAnEvent(\"loadend\", xhr, ProgressEvent, progressObj);\n  });\n}\n\nfunction setDispatchProgressEvents(xhr) {\n  var properties = xhr.properties,\n      upload = xhr.upload;\n  var client = properties.client;\n  var total = 0;\n  var lengthComputable = false;\n  var length = client.headers && parseInt(xhrUtils.getRequestHeader(client.headers, \"content-length\"));\n\n  if (length) {\n    total = length;\n    lengthComputable = true;\n  }\n\n  var initProgress = {\n    lengthComputable: lengthComputable,\n    total: total,\n    loaded: 0\n  };\n\n  if (properties.uploadListener) {\n    fireAnEvent(\"loadstart\", upload, ProgressEvent, initProgress);\n  }\n\n  client.on(\"request\", function (req) {\n    req.on(\"response\", function () {\n      properties.uploadComplete = true;\n\n      if (!properties.uploadListener) {\n        return;\n      }\n\n      var progress = {\n        lengthComputable: lengthComputable,\n        total: total,\n        loaded: total\n      };\n      fireAnEvent(\"progress\", upload, ProgressEvent, progress);\n      fireAnEvent(\"load\", upload, ProgressEvent, progress);\n      fireAnEvent(\"loadend\", upload, ProgressEvent, progress);\n    });\n  });\n}\n\nfunction finalMIMEType(xhr) {\n  var flag = xhr.flag;\n  return flag.overrideMIMEType || _getResponseHeader(xhr, \"content-type\");\n}\n\nfunction finalCharset(xhr) {\n  var flag = xhr.flag;\n\n  if (flag.overrideCharset) {\n    return flag.overrideCharset;\n  }\n\n  var parsedContentType = MIMEType.parse(_getResponseHeader(xhr, \"content-type\"));\n\n  if (parsedContentType) {\n    return whatwgEncoding.labelToName(parsedContentType.parameters.get(\"charset\"));\n  }\n\n  return null;\n}\n\nfunction _getResponseHeader(xhr, lcHeader) {\n  var properties = xhr.properties;\n  var keys = Object.keys(properties.responseHeaders);\n  var n = keys.length;\n\n  while (n--) {\n    var key = keys[n];\n\n    if (key.toLowerCase() === lcHeader) {\n      return properties.responseHeaders[key];\n    }\n  }\n\n  return null;\n}\n\nfunction normalizeHeaderValue(value) {\n  return value.replace(/^[\\x09\\x0A\\x0D\\x20]+/, \"\").replace(/[\\x09\\x0A\\x0D\\x20]+$/, \"\");\n}\n\nfunction extractBody(bodyInit) {\n  // https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n  // except we represent the body as a Node.js Buffer instead,\n  // or a special case for FormData since we want request to handle that. Probably it would be\n  // cleaner (and allow a future without request) if we did the form encoding ourself.\n  if (Blob.isImpl(bodyInit)) {\n    return {\n      buffer: bodyInit._buffer,\n      contentType: bodyInit.type === \"\" ? null : bodyInit.type\n    };\n  } else if (isArrayBuffer(bodyInit)) {\n    return {\n      buffer: Buffer.from(bodyInit),\n      contentType: null\n    };\n  } else if (ArrayBuffer.isView(bodyInit)) {\n    return {\n      buffer: Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength),\n      contentType: null\n    };\n  } else if (FormData.isImpl(bodyInit)) {\n    var formData = [];\n\n    var _iterator = _createForOfIteratorHelper(bodyInit._entries),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var entry = _step.value;\n        var val = void 0;\n\n        if (Blob.isImpl(entry.value)) {\n          var blob = entry.value;\n          val = {\n            name: entry.name,\n            value: blob._buffer,\n            options: {\n              filename: blob.name,\n              contentType: blob.type,\n              knownLength: blob.size\n            }\n          };\n        } else {\n          val = entry;\n        }\n\n        formData.push(val);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return {\n      formData: formData\n    };\n  } // Must be a string\n\n\n  return {\n    buffer: Buffer.from(bodyInit, \"utf-8\"),\n    contentType: \"text/plain;charset=UTF-8\"\n  };\n}\n\nexports.implementation = XMLHttpRequestImpl;","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/xhr/XMLHttpRequest-impl.js"],"names":["HTTP_STATUS_CODES","require","STATUS_CODES","spawnSync","URL","whatwgEncoding","tough","MIMEType","xhrUtils","DOMException","documentBaseURLSerialized","asciiCaseInsensitiveMatch","idlUtils","Document","Blob","FormData","XMLHttpRequestEventTargetImpl","implementation","XMLHttpRequestUpload","ProgressEvent","isArrayBuffer","parseIntoDocument","fragmentSerialization","setupForSimpleEventAccessors","parseJSONFromBytes","fireAnEvent","copyToArrayBufferInNewRealm","READY_STATES","syncWorkerFile","resolve","tokenRegexp","fieldValueRegexp","forbiddenRequestHeaders","Set","forbiddenResponseHeaders","uniqueResponseHeaders","corsSafeResponseHeaders","allowedRequestMethods","forbiddenRequestMethods","XMLHttpRequestImpl","window","_ownerDocument","upload","createImpl","readyState","UNSENT","responseURL","status","statusText","flag","synchronous","withCredentials","mimeType","auth","method","undefined","responseType","requestHeaders","referrer","uri","timeout","body","formData","preflight","requestManager","_requestManager","strictSSL","_resourceLoader","_strictSSL","proxy","_proxy","cookieJar","_cookieJar","encoding","_encoding","origin","_origin","userAgent","navigator","properties","beforeSend","send","client","timeoutStart","timeoutId","timeoutFn","responseBuffer","responseCache","responseTextCache","responseXMLCache","responseHeaders","filteredResponseHeaders","error","uploadComplete","uploadListener","abortError","bufferStepSize","totalReceivedChunkSize","clearTimeout","abort","DONE","setResponseToNetworkError","OPENED","HEADERS_RECEIVED","LOADING","requestErrorSteps","Object","keys","filter","key","indexOf","map","toLowerCase","join","header","lcHeader","find","filtered","getResponseHeader","asynchronous","user","password","create","_globalObject","test","upperCaseMethod","toUpperCase","has","urlObj","e","username","pass","href","readyStateChange","mime","overrideMIMEType","parsed","parse","essence","charset","parameters","get","overrideCharset","labelToName","isImpl","_parsingMode","requireWellFormed","extractBody","buffer","contentType","Boolean","existingContentType","getRequestHeader","set","updateRequestHeader","toString","_eventListeners","length","byteLength","flagStr","JSON","stringify","k","v","maxSockets","res","process","execPath","input","maxBuffer","Infinity","Error","stderr","response","stdout","resProp","data","Buffer","from","CookieJar","deserializeSync","store","assign","dispatchError","contentLength","bufferLength","parseInt","progressObj","lengthComputable","total","loaded","createClient","on","err","removeAllListeners","receiveResponse","destUrlObj","request","headers","Referer","Origin","protocol","validCORSHeaders","setDispatchProgressEvents","Date","getTime","stateChanged","setTimeout","value","normalizeHeaderValue","startsWith","n","tryWrapperForImpl","slice","responseText","finalMIMEType","Uint8Array","type","responseXML","fallbackEncoding","finalCharset","getBOMEncoding","decode","isHTML","isXML","resText","options","url","lastModified","parsingMode","setCookieSync","getCookieStringSync","parseOptions","_parseOptions","close","val","Math","max","prototype","xhr","statusCode","byteOffset","headerMap","rawHeaders","Number","i","kl","acehStr","aceh","trim","split","headerListSeparatorRegexp","push","statusMessage","lastProgressReported","alloc","chunk","tmpBuf","copy","initProgress","req","progress","parsedContentType","replace","bodyInit","_buffer","ArrayBuffer","isView","_entries","entry","blob","name","filename","knownLength","size","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBC,YAA1C;;eACsBD,OAAO,CAAC,eAAD,C;IAArBE,S,YAAAA,S;;gBACQF,OAAO,CAAC,YAAD,C;IAAfG,G,aAAAA,G;;AACR,IAAMC,cAAc,GAAGJ,OAAO,CAAC,iBAAD,CAA9B;;AACA,IAAMK,KAAK,GAAGL,OAAO,CAAC,cAAD,CAArB;;AACA,IAAMM,QAAQ,GAAGN,OAAO,CAAC,iBAAD,CAAxB;;AAEA,IAAMO,QAAQ,GAAGP,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMQ,YAAY,GAAGR,OAAO,CAAC,gCAAD,CAA5B;;gBACsCA,OAAO,CAAC,8BAAD,C;IAArCS,yB,aAAAA,yB;;gBAC8BT,OAAO,CAAC,oBAAD,C;IAArCU,yB,aAAAA,yB;;AACR,IAAMC,QAAQ,GAAGX,OAAO,CAAC,oBAAD,CAAxB;;AACA,IAAMY,QAAQ,GAAGZ,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAMa,IAAI,GAAGb,OAAO,CAAC,mBAAD,CAApB;;AACA,IAAMc,QAAQ,GAAGd,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAMe,6BAA6B,GAAGf,OAAO,CAAC,kCAAD,CAAP,CAA4CgB,cAAlF;;AACA,IAAMC,oBAAoB,GAAGjB,OAAO,CAAC,mCAAD,CAApC;;AACA,IAAMkB,aAAa,GAAGlB,OAAO,CAAC,4BAAD,CAA7B;;gBAC0BA,OAAO,CAAC,oBAAD,C;IAAzBmB,a,aAAAA,a;;gBACsBnB,OAAO,CAAC,sBAAD,C;IAA7BoB,iB,aAAAA,iB;;gBAC0BpB,OAAO,CAAC,6BAAD,C;IAAjCqB,qB,aAAAA,qB;;gBACiCrB,OAAO,CAAC,kCAAD,C;IAAxCsB,4B,aAAAA,4B;;gBACuBtB,OAAO,CAAC,iBAAD,C;IAA9BuB,kB,aAAAA,kB;;iBACgBvB,OAAO,CAAC,mBAAD,C;IAAvBwB,W,cAAAA,W;;iBACgCxB,OAAO,CAAC,wBAAD,C;IAAvCyB,2B,cAAAA,2B;;IAEAC,Y,GAAiBnB,Q,CAAjBmB,Y;AAER,IAAMC,cAAc,GAAG3B,OAAO,CAAC4B,OAAR,GAAkB5B,OAAO,CAAC4B,OAAR,CAAgB,sBAAhB,CAAlB,GAA4D,IAAnF;AAEA,IAAMC,WAAW,GAAG,gCAApB;AACA,IAAMC,gBAAgB,GAAG,uEAAzB;AAEA,IAAMC,uBAAuB,GAAG,IAAIC,GAAJ,CAAQ,CACtC,gBADsC,EAEtC,iBAFsC,EAGtC,gCAHsC,EAItC,+BAJsC,EAKtC,YALsC,EAMtC,gBANsC,EAOtC,QAPsC,EAQtC,SARsC,EAStC,MATsC,EAUtC,KAVsC,EAWtC,QAXsC,EAYtC,MAZsC,EAatC,YAbsC,EActC,QAdsC,EAetC,SAfsC,EAgBtC,IAhBsC,EAiBtC,SAjBsC,EAkBtC,mBAlBsC,EAmBtC,SAnBsC,EAoBtC,KApBsC,CAAR,CAAhC;AAsBA,IAAMC,wBAAwB,GAAG,IAAID,GAAJ,CAAQ,CACvC,YADuC,EAEvC,aAFuC,CAAR,CAAjC;AAIA,IAAME,qBAAqB,GAAG,IAAIF,GAAJ,CAAQ,CACpC,cADoC,EAEpC,gBAFoC,EAGpC,YAHoC,EAIpC,SAJoC,EAKpC,MALoC,EAMpC,eANoC,EAOpC,qBAPoC,EAQpC,mBARoC,EASpC,qBAToC,EAUpC,MAVoC,EAWpC,UAXoC,EAYpC,cAZoC,CAAR,CAA9B;AAcA,IAAMG,uBAAuB,GAAG,IAAIH,GAAJ,CAAQ,CACtC,eADsC,EAEtC,kBAFsC,EAGtC,cAHsC,EAItC,SAJsC,EAKtC,eALsC,EAMtC,QANsC,CAAR,CAAhC;AASA,IAAMI,qBAAqB,GAAG,IAAIJ,GAAJ,CAAQ,CAAC,SAAD,EAAY,KAAZ,EAAmB,MAAnB,EAA2B,MAA3B,EAAmC,KAAnC,EAA0C,QAA1C,CAAR,CAA9B;AACA,IAAMK,uBAAuB,GAAG,IAAIL,GAAJ,CAAQ,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,CAAR,CAAhC;;IAEMM,kB;;;;;AACJ,8BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,MAAN,EADkB,CAGlB;;AAHkB;AAAA,QAIVC,cAJU,yBAIVA,cAJU;;AAMlB,UAAKC,MAAL,GAAcxB,oBAAoB,CAACyB,UAArB,CAAgCH,MAAhC,CAAd;AAEA,UAAKI,UAAL,GAAkBjB,YAAY,CAACkB,MAA/B;AACA,UAAKC,WAAL,GAAmB,EAAnB;AACA,UAAKC,MAAL,GAAc,CAAd;AACA,UAAKC,UAAL,GAAkB,EAAlB;AAEA,UAAKC,IAAL,GAAY;AACVC,MAAAA,WAAW,EAAE,KADH;AAEVC,MAAAA,eAAe,EAAE,KAFP;AAGVC,MAAAA,QAAQ,EAAE,IAHA;AAIVC,MAAAA,IAAI,EAAE,IAJI;AAKVC,MAAAA,MAAM,EAAEC,SALE;AAMVC,MAAAA,YAAY,EAAE,EANJ;AAOVC,MAAAA,cAAc,EAAE,EAPN;AAQVC,MAAAA,QAAQ,EAAEjB,cAAc,CAACrC,GARf;AASVuD,MAAAA,GAAG,EAAE,EATK;AAUVC,MAAAA,OAAO,EAAE,CAVC;AAWVC,MAAAA,IAAI,EAAEN,SAXI;AAYVO,MAAAA,QAAQ,EAAE,KAZA;AAaVC,MAAAA,SAAS,EAAE,KAbD;AAcVC,MAAAA,cAAc,EAAEvB,cAAc,CAACwB,eAdrB;AAeVC,MAAAA,SAAS,EAAE1B,MAAM,CAAC2B,eAAP,CAAuBC,UAfxB;AAgBVC,MAAAA,KAAK,EAAE7B,MAAM,CAAC2B,eAAP,CAAuBG,MAhBpB;AAiBVC,MAAAA,SAAS,EAAE9B,cAAc,CAAC+B,UAjBhB;AAkBVC,MAAAA,QAAQ,EAAEhC,cAAc,CAACiC,SAlBf;AAmBVC,MAAAA,MAAM,EAAEnC,MAAM,CAACoC,OAnBL;AAoBVC,MAAAA,SAAS,EAAErC,MAAM,CAACsC,SAAP,CAAiBD;AApBlB,KAAZ;AAuBA,UAAKE,UAAL,GAAkB;AAChBC,MAAAA,UAAU,EAAE,KADI;AAEhBC,MAAAA,IAAI,EAAE,KAFU;AAGhBC,MAAAA,MAAM,EAAE,IAHQ;AAKhBC,MAAAA,YAAY,EAAE,CALE;AAMhBC,MAAAA,SAAS,EAAE,CANK;AAOhBC,MAAAA,SAAS,EAAE,IAPK;AAShBC,MAAAA,cAAc,EAAE,IATA;AAUhBC,MAAAA,aAAa,EAAE,IAVC;AAWhBC,MAAAA,iBAAiB,EAAE,IAXH;AAYhBC,MAAAA,gBAAgB,EAAE,IAZF;AAchBC,MAAAA,eAAe,EAAE,EAdD;AAehBC,MAAAA,uBAAuB,EAAE,EAfT;AAiBhBC,MAAAA,KAAK,EAAE,EAjBS;AAkBhBC,MAAAA,cAAc,EAAE,KAlBA;AAmBhBC,MAAAA,cAAc,EAAE,KAnBA;AAqBhB;AACA;AACAC,MAAAA,UAAU,EAAE,KAvBI;AAyBhBxB,MAAAA,SAAS,EAAE9B,cAAc,CAAC+B,UAzBV;AA0BhBwB,MAAAA,cAAc,EAAE,IAAI,IAAJ,GAAW,IA1BX;AA0BiB;AACjCC,MAAAA,sBAAsB,EAAE;AA3BR,KAAlB;AApCkB;AAiEnB;;;;4BAyMO;AAAA,UACElB,UADF,GACiB,IADjB,CACEA,UADF,EAEN;;AACAmB,MAAAA,YAAY,CAACnB,UAAU,CAACK,SAAZ,CAAZ;AACAL,MAAAA,UAAU,CAACM,SAAX,GAAuB,IAAvB;AACAN,MAAAA,UAAU,CAACI,YAAX,GAA0B,CAA1B;AALM,UAOED,MAPF,GAOaH,UAPb,CAOEG,MAPF;;AAQN,UAAIA,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACiB,KAAP;AACApB,QAAAA,UAAU,CAACG,MAAX,GAAoB,IAApB;AACD;;AAED,UAAIH,UAAU,CAACgB,UAAf,EAA2B;AACzB;AACA;AACA,aAAKnD,UAAL,GAAkBjB,YAAY,CAACyE,IAA/B;AACArB,QAAAA,UAAU,CAACE,IAAX,GAAkB,KAAlB;AACAzE,QAAAA,QAAQ,CAAC6F,yBAAT,CAAmC,IAAnC;AACA;AACD;;AAED,UAAK,KAAKzD,UAAL,KAAoBjB,YAAY,CAAC2E,MAAjC,IAA2CvB,UAAU,CAACE,IAAvD,IACA,KAAKrC,UAAL,KAAoBjB,YAAY,CAAC4E,gBADjC,IAEA,KAAK3D,UAAL,KAAoBjB,YAAY,CAAC6E,OAFrC,EAE8C;AAC5ChG,QAAAA,QAAQ,CAACiG,iBAAT,CAA2B,IAA3B,EAAiC,OAAjC;AACD;;AAED,UAAI,KAAK7D,UAAL,KAAoBjB,YAAY,CAACyE,IAArC,EAA2C;AACzC,aAAKxD,UAAL,GAAkBjB,YAAY,CAACkB,MAA/B;AAEArC,QAAAA,QAAQ,CAAC6F,yBAAT,CAAmC,IAAnC;AACD;AACF;;;4CACuB;AAAA,UACdtB,UADc,GACa,IADb,CACdA,UADc;AAAA,UACFnC,UADE,GACa,IADb,CACFA,UADE;;AAEtB,UAAIA,UAAU,KAAKjB,YAAY,CAACkB,MAA5B,IAAsCD,UAAU,KAAKjB,YAAY,CAAC2E,MAAtE,EAA8E;AAC5E,eAAO,EAAP;AACD;;AACD,aAAOI,MAAM,CAACC,IAAP,CAAY5B,UAAU,CAACW,eAAvB,EACJkB,MADI,CACG,UAAAC,GAAG;AAAA,eAAI9B,UAAU,CAACY,uBAAX,CAAmCmB,OAAnC,CAA2CD,GAA3C,MAAoD,CAAC,CAAzD;AAAA,OADN,EAEJE,GAFI,CAEA,UAAAF,GAAG;AAAA,eAAI,CAACA,GAAG,CAACG,WAAJ,EAAD,EAAoBjC,UAAU,CAACW,eAAX,CAA2BmB,GAA3B,CAApB,EAAqDI,IAArD,CAA0D,IAA1D,CAAJ;AAAA,OAFH,EAGJA,IAHI,CAGC,MAHD,CAAP;AAID;;;sCAEiBC,M,EAAQ;AAAA,UAChBnC,UADgB,GACW,IADX,CAChBA,UADgB;AAAA,UACJnC,UADI,GACW,IADX,CACJA,UADI;;AAExB,UAAIA,UAAU,KAAKjB,YAAY,CAACkB,MAA5B,IAAsCD,UAAU,KAAKjB,YAAY,CAAC2E,MAAtE,EAA8E;AAC5E,eAAO,IAAP;AACD;;AACD,UAAMa,QAAQ,GAAGD,MAAM,CAACF,WAAP,EAAjB;;AACA,UAAIjC,UAAU,CAACY,uBAAX,CAAmCyB,IAAnC,CAAwC,UAAAC,QAAQ;AAAA,eAAIF,QAAQ,KAAKE,QAAQ,CAACL,WAAT,EAAjB;AAAA,OAAhD,CAAJ,EAA8F;AAC5F,eAAO,IAAP;AACD;;AACD,aAAOM,kBAAiB,CAAC,IAAD,EAAOH,QAAP,CAAxB;AACD;;;yBAEI7D,M,EAAQK,G,EAAK4D,Y,EAAcC,I,EAAMC,Q,EAAU;AAAA,UACtCxE,IADsC,GACD,IADC,CACtCA,IADsC;AAAA,UAChC8B,UADgC,GACD,IADC,CAChCA,UADgC;AAAA,UACpBtC,cADoB,GACD,IADC,CACpBA,cADoB;;AAE9C,UAAI,CAACA,cAAL,EAAqB;AACnB,cAAMhC,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AAED,UAAI,CAAC7F,WAAW,CAAC8F,IAAZ,CAAiBtE,MAAjB,CAAL,EAA+B;AAC7B,cAAM7C,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,gDAD4C,EAE5C,aAF4C,CAAxC,CAAN;AAID;;AACD,UAAME,eAAe,GAAGvE,MAAM,CAACwE,WAAP,EAAxB;;AACA,UAAIxF,uBAAuB,CAACyF,GAAxB,CAA4BF,eAA5B,CAAJ,EAAkD;AAChD,cAAMpH,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,4BAAD,EAA+B,eAA/B,CAAxC,CAAN;AACD;;AAf6C,UAiBtCzC,MAjBsC,GAiB3BH,UAjB2B,CAiBtCG,MAjBsC;;AAkB9C,UAAIA,MAAM,IAAI,OAAOA,MAAM,CAACiB,KAAd,KAAwB,UAAtC,EAAkD;AAChDjB,QAAAA,MAAM,CAACiB,KAAP;AACD;;AAED,UAAI9D,qBAAqB,CAAC0F,GAAtB,CAA0BF,eAA1B,CAAJ,EAAgD;AAC9CvE,QAAAA,MAAM,GAAGuE,eAAT;AACD;;AACD,UAAI,OAAON,YAAP,KAAwB,WAA5B,EAAyC;AACvCtE,QAAAA,IAAI,CAACC,WAAL,GAAmB,CAACqE,YAApB;AACD,OAFD,MAEO;AACLtE,QAAAA,IAAI,CAACC,WAAL,GAAmB,KAAnB;AACD;;AACD,UAAID,IAAI,CAACO,YAAL,IAAqBP,IAAI,CAACC,WAA9B,EAA2C;AACzC,cAAMzC,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,wDAD4C,EAE5C,oBAF4C,CAAxC,CAAN;AAID;;AACD,UAAI1E,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACW,OAA7B,EAAsC;AACpC,cAAMnD,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,wDAD4C,EAE5C,oBAF4C,CAAxC,CAAN;AAID;;AACD1E,MAAAA,IAAI,CAACK,MAAL,GAAcA,MAAd;AAEA,UAAI0E,MAAJ;;AACA,UAAI;AACFA,QAAAA,MAAM,GAAG,IAAI5H,GAAJ,CAAQuD,GAAR,EAAajD,yBAAyB,CAAC+B,cAAD,CAAtC,CAAT;AACD,OAFD,CAEE,OAAOwF,CAAP,EAAU;AACV,cAAMxH,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,gDAD4C,EAE5C,aAF4C,CAAxC,CAAN;AAID;;AAED,UAAIH,IAAI,IAAKC,QAAQ,IAAI,CAACO,MAAM,CAACE,QAAjC,EAA4C;AAC1CjF,QAAAA,IAAI,CAACI,IAAL,GAAY;AACVmE,UAAAA,IAAI,EAAJA,IADU;AAEVW,UAAAA,IAAI,EAAEV;AAFI,SAAZ;AAIAO,QAAAA,MAAM,CAACE,QAAP,GAAkB,EAAlB;AACAF,QAAAA,MAAM,CAACP,QAAP,GAAkB,EAAlB;AACD;;AAEDxE,MAAAA,IAAI,CAACU,GAAL,GAAWqE,MAAM,CAACI,IAAlB;AACAnF,MAAAA,IAAI,CAACQ,cAAL,GAAsB,EAAtB;AACAR,MAAAA,IAAI,CAACc,SAAL,GAAiB,KAAjB;AAEAgB,MAAAA,UAAU,CAACE,IAAX,GAAkB,KAAlB;AACAF,MAAAA,UAAU,CAACe,cAAX,GAA4B,KAA5B;AACAf,MAAAA,UAAU,CAACgB,UAAX,GAAwB,KAAxB;AACA,WAAKjD,WAAL,GAAmB,EAAnB;AACAuF,MAAAA,gBAAgB,CAAC,IAAD,EAAO1G,YAAY,CAAC2E,MAApB,CAAhB;AACD;;;qCAEgBgC,I,EAAM;AAAA,UACb1F,UADa,GACE,IADF,CACbA,UADa;;AAErB,UAAIA,UAAU,KAAKjB,YAAY,CAAC6E,OAA5B,IAAuC5D,UAAU,KAAKjB,YAAY,CAACyE,IAAvE,EAA6E;AAC3E,cAAM3F,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AAED,WAAK1E,IAAL,CAAUsF,gBAAV,GAA6B,0BAA7B,CANqB,CAQrB;;AACA,UAAMC,MAAM,GAAGjI,QAAQ,CAACkI,KAAT,CAAeH,IAAf,CAAf;;AACA,UAAIE,MAAJ,EAAY;AACV,aAAKvF,IAAL,CAAUsF,gBAAV,GAA6BC,MAAM,CAACE,OAApC;AAEA,YAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkBC,GAAlB,CAAsB,SAAtB,CAAhB;;AACA,YAAIF,OAAJ,EAAa;AACX,eAAK1F,IAAL,CAAU6F,eAAV,GAA4BzI,cAAc,CAAC0I,WAAf,CAA2BJ,OAA3B,CAA5B;AACD;AACF;AACF,K,CAED;;;;yBACK9E,I,EAAM;AAAA;;AAAA,UACDZ,IADC,GAC4C,IAD5C,CACDA,IADC;AAAA,UACK8B,UADL,GAC4C,IAD5C,CACKA,UADL;AAAA,UACiBrC,MADjB,GAC4C,IAD5C,CACiBA,MADjB;AAAA,UACyBD,cADzB,GAC4C,IAD5C,CACyBA,cADzB,EAET;;AACA,UAAI,CAACA,cAAL,EAAqB;AACnB,cAAMhC,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AAED,UAAI,KAAK/E,UAAL,KAAoBjB,YAAY,CAAC2E,MAAjC,IAA2CvB,UAAU,CAACE,IAA1D,EAAgE;AAC9D,cAAMxE,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AAED5C,MAAAA,UAAU,CAACC,UAAX,GAAwB,IAAxB;;AAEA,UAAI;AACF,YAAI/B,IAAI,CAACK,MAAL,KAAgB,KAAhB,IAAyBL,IAAI,CAACK,MAAL,KAAgB,MAA7C,EAAqD;AACnDO,UAAAA,IAAI,GAAG,IAAP;AACD;;AAED,YAAIA,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAIY,QAAQ,GAAG,IAAf;AACA,cAAIrB,QAAQ,GAAG,IAAf;;AAEA,cAAIvC,QAAQ,CAACmI,MAAT,CAAgBnF,IAAhB,CAAJ,EAA2B;AACzBY,YAAAA,QAAQ,GAAG,OAAX;AACArB,YAAAA,QAAQ,GAAG,CAACS,IAAI,CAACoF,YAAL,KAAsB,MAAtB,GAA+B,WAA/B,GAA6C,iBAA9C,IAAmE,gBAA9E;AACAhG,YAAAA,IAAI,CAACY,IAAL,GAAYvC,qBAAqB,CAACuC,IAAD,EAAO;AAAEqF,cAAAA,iBAAiB,EAAE;AAArB,aAAP,CAAjC;AACD,WAJD,MAIO;AACL,gBAAI,OAAOrF,IAAP,KAAgB,QAApB,EAA8B;AAC5BY,cAAAA,QAAQ,GAAG,OAAX;AACD;;AAHI,+BAIqC0E,WAAW,CAACtF,IAAD,CAJhD;AAAA,gBAIGuF,MAJH,gBAIGA,MAJH;AAAA,gBAIWtF,QAJX,gBAIWA,QAJX;AAAA,gBAIqBuF,WAJrB,gBAIqBA,WAJrB;;AAKLjG,YAAAA,QAAQ,GAAGiG,WAAX;AACApG,YAAAA,IAAI,CAACY,IAAL,GAAYuF,MAAM,IAAItF,QAAtB;AACAb,YAAAA,IAAI,CAACa,QAAL,GAAgBwF,OAAO,CAACxF,QAAD,CAAvB;AACD;;AAED,cAAMyF,mBAAmB,GAAG/I,QAAQ,CAACgJ,gBAAT,CAA0BvG,IAAI,CAACQ,cAA/B,EAA+C,cAA/C,CAA5B;;AACA,cAAIL,QAAQ,KAAK,IAAb,IAAqBmG,mBAAmB,KAAK,IAAjD,EAAuD;AACrDtG,YAAAA,IAAI,CAACQ,cAAL,CAAoB,cAApB,IAAsCL,QAAtC;AACD,WAFD,MAEO,IAAImG,mBAAmB,KAAK,IAAxB,IAAgC9E,QAAQ,KAAK,IAAjD,EAAuD;AAC5D;AACA;AACA,gBAAM+D,MAAM,GAAGjI,QAAQ,CAACkI,KAAT,CAAec,mBAAf,CAAf;;AACA,gBAAIf,MAAJ,EAAY;AACV,kBAAMG,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkBC,GAAlB,CAAsB,SAAtB,CAAhB;;AACA,kBAAIF,OAAO,IAAI,CAAChI,yBAAyB,CAACgI,OAAD,EAAUlE,QAAV,CAArC,IAA4DA,QAAQ,KAAK,IAA7E,EAAmF;AACjF+D,gBAAAA,MAAM,CAACI,UAAP,CAAkBa,GAAlB,CAAsB,SAAtB,EAAiChF,QAAjC;AACAjE,gBAAAA,QAAQ,CAACkJ,mBAAT,CAA6BzG,IAAI,CAACQ,cAAlC,EAAkD,cAAlD,EAAkE+E,MAAM,CAACmB,QAAP,EAAlE;AACD;AACF;AACF;AACF;AACF,OAvCD,SAuCU;AACR,YAAI5E,UAAU,CAACC,UAAf,EAA2B;AACzBD,UAAAA,UAAU,CAACC,UAAX,GAAwB,KAAxB;AACD,SAFD,MAEO;AACL,gBAAMvE,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;AACF;;AAED,UAAIjB,MAAM,CAACC,IAAP,CAAYjE,MAAM,CAACkH,eAAnB,EAAoCC,MAApC,GAA6C,CAAjD,EAAoD;AAClD9E,QAAAA,UAAU,CAACe,cAAX,GAA4B,IAA5B;AACD,OA9DQ,CAgET;;;AACA,UAAI7C,IAAI,CAACY,IAAL,IAAaZ,IAAI,CAACY,IAAL,CAAUiG,UAAV,KAAyB,CAA1C,EAA6C;AAC3C7G,QAAAA,IAAI,CAACY,IAAL,GAAY,IAAZ;AACD;;AAED,UAAIZ,IAAI,CAACC,WAAT,EAAsB;AACpB,YAAM6G,OAAO,GAAGC,IAAI,CAACC,SAAL,CAAehH,IAAf,EAAqB,UAAUiH,CAAV,EAAaC,CAAb,EAAgB;AACnD,cAAI,SAASlH,IAAT,IAAiBiH,CAAC,KAAK,gBAA3B,EAA6C;AAC3C,mBAAO,IAAP;AACD;;AACD,cAAI,SAASjH,IAAT,IAAiBiH,CAAC,KAAK,MAAvB,IAAiCC,CAArC,EAAwC;AACtC,mBAAO;AAAEC,cAAAA,UAAU,EAAED,CAAC,CAACC;AAAhB,aAAP;AACD;;AACD,iBAAOD,CAAP;AACD,SARe,CAAhB;AASA,YAAME,GAAG,GAAGlK,SAAS,CACnBmK,OAAO,CAACC,QADW,EAEnB,CAAC3I,cAAD,CAFmB,EAGnB;AAAE4I,UAAAA,KAAK,EAAET,OAAT;AAAkBU,UAAAA,SAAS,EAAEC;AAA7B,SAHmB,CAArB;;AAKA,YAAIL,GAAG,CAACtH,MAAJ,KAAe,CAAnB,EAAsB;AACpB,gBAAM,IAAI4H,KAAJ,CAAUN,GAAG,CAACO,MAAJ,CAAWjB,QAAX,EAAV,CAAN;AACD;;AACD,YAAIU,GAAG,CAACzE,KAAR,EAAe;AACb,cAAI,OAAOyE,GAAG,CAACzE,KAAX,KAAqB,QAAzB,EAAmC;AACjCyE,YAAAA,GAAG,CAACzE,KAAJ,GAAY,IAAI+E,KAAJ,CAAUN,GAAG,CAACzE,KAAd,CAAZ;AACD;;AACD,gBAAMyE,GAAG,CAACzE,KAAV;AACD;;AAED,YAAMiF,QAAQ,GAAGb,IAAI,CAACvB,KAAL,CAAW4B,GAAG,CAACS,MAAJ,CAAWnB,QAAX,EAAX,CAAjB;AACA,YAAMoB,OAAO,GAAGF,QAAQ,CAAC9F,UAAzB;;AACA,YAAIgG,OAAO,CAACzF,cAAR,IAA0ByF,OAAO,CAACzF,cAAR,CAAuB0F,IAArD,EAA2D;AACzDD,UAAAA,OAAO,CAACzF,cAAR,GAAyB2F,MAAM,CAACC,IAAP,CAAYH,OAAO,CAACzF,cAAR,CAAuB0F,IAAnC,CAAzB;AACD;;AACD,YAAID,OAAO,CAACxG,SAAZ,EAAuB;AACrBwG,UAAAA,OAAO,CAACxG,SAAR,GAAoBjE,KAAK,CAAC6K,SAAN,CAAgBC,eAAhB,CAClBL,OAAO,CAACxG,SADU,EAElB9B,cAAc,CAAC+B,UAAf,CAA0B6G,KAFR,CAApB;AAID;;AAED,aAAKzI,UAAL,GAAkBjB,YAAY,CAAC6E,OAA/B;AACA,aAAKzD,MAAL,GAAc8H,QAAQ,CAAC9H,MAAvB;AACA,aAAKC,UAAL,GAAkB6H,QAAQ,CAAC7H,UAA3B;AACA,aAAKF,WAAL,GAAmB+H,QAAQ,CAAC/H,WAA5B;AACA4D,QAAAA,MAAM,CAAC4E,MAAP,CAAc,KAAKvG,UAAnB,EAA+B8F,QAAQ,CAAC9F,UAAxC;;AAEA,YAAIgG,OAAO,CAACnF,KAAZ,EAAmB;AACjBpF,UAAAA,QAAQ,CAAC+K,aAAT,CAAuB,IAAvB;AACA,gBAAM9K,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAACoD,OAAO,CAACnF,KAAT,EAAgB,cAAhB,CAAxC,CAAN;AACD,SAHD,MAGO;AAAA,cACGN,cADH,GACsBP,UADtB,CACGO,cADH;AAEL,cAAMkG,aAAa,GAAGlE,kBAAiB,CAAC,IAAD,EAAO,gBAAP,CAAjB,IAA6C,GAAnE;AACA,cAAMmE,YAAY,GAAGC,QAAQ,CAACF,aAAD,CAAR,IAA2BlG,cAAc,CAACuE,MAA/D;AACA,cAAM8B,WAAW,GAAG;AAAEC,YAAAA,gBAAgB,EAAE;AAApB,WAApB;;AACA,cAAIH,YAAY,KAAK,CAArB,EAAwB;AACtBE,YAAAA,WAAW,CAACE,KAAZ,GAAoBJ,YAApB;AACAE,YAAAA,WAAW,CAACG,MAAZ,GAAqBL,YAArB;AACAE,YAAAA,WAAW,CAACC,gBAAZ,GAA+B,IAA/B;AACD;;AACDnK,UAAAA,WAAW,CAAC,UAAD,EAAa,IAAb,EAAmBN,aAAnB,EAAkCwK,WAAlC,CAAX;AACAtD,UAAAA,gBAAgB,CAAC,IAAD,EAAO1G,YAAY,CAACyE,IAApB,CAAhB;AACA3E,UAAAA,WAAW,CAAC,MAAD,EAAS,IAAT,EAAeN,aAAf,EAA8BwK,WAA9B,CAAX;AACAlK,UAAAA,WAAW,CAAC,SAAD,EAAY,IAAZ,EAAkBN,aAAlB,EAAiCwK,WAAjC,CAAX;AACD;AACF,OA7DD,MA6DO;AACL5G,QAAAA,UAAU,CAACE,IAAX,GAAkB,IAAlB;AAEAxD,QAAAA,WAAW,CAAC,WAAD,EAAc,IAAd,EAAoBN,aAApB,CAAX;AAEA,YAAM+D,MAAM,GAAG1E,QAAQ,CAACuL,YAAT,CAAsB,IAAtB,CAAf;AAEAhH,QAAAA,UAAU,CAACG,MAAX,GAAoBA,MAApB,CAPK,CAQL;;AACAH,QAAAA,UAAU,CAACkB,sBAAX,GAAoC,CAApC;AACAlB,QAAAA,UAAU,CAACiB,cAAX,GAA4B,IAAI,IAAJ,GAAW,IAAvC;AAEAjB,QAAAA,UAAU,CAACJ,MAAX,GAAoB1B,IAAI,CAAC0B,MAAzB;AAEAO,QAAAA,MAAM,CAAC8G,EAAP,CAAU,OAAV,EAAmB,UAAAC,GAAG,EAAI;AACxB/G,UAAAA,MAAM,CAACgH,kBAAP;AACAnH,UAAAA,UAAU,CAACa,KAAX,GAAmBqG,GAAnB;AACAzL,UAAAA,QAAQ,CAAC+K,aAAT,CAAuB,MAAvB;AACD,SAJD;AAMArG,QAAAA,MAAM,CAAC8G,EAAP,CAAU,UAAV,EAAsB,UAAA3B,GAAG;AAAA,iBAAI8B,eAAe,CAAC,MAAD,EAAO9B,GAAP,CAAnB;AAAA,SAAzB;AAEAnF,QAAAA,MAAM,CAAC8G,EAAP,CAAU,UAAV,EAAsB,YAAM;AAAA,cAClBnB,QADkB,GACL3F,MADK,CAClB2F,QADkB;AAE1B,cAAMuB,UAAU,GAAG,IAAIhM,GAAJ,CAAQyK,QAAQ,CAACwB,OAAT,CAAiBC,OAAjB,CAAyBC,OAAjC,CAAnB;AAEA,cAAMvE,MAAM,GAAG,IAAI5H,GAAJ,CAAQyK,QAAQ,CAACwB,OAAT,CAAiB1I,GAAjB,CAAqByE,IAA7B,CAAf;;AAEA,cAAIgE,UAAU,CAACzH,MAAX,KAAsBqD,MAAM,CAACrD,MAA7B,IAAuCyH,UAAU,CAACzH,MAAX,KAAsB1B,IAAI,CAAC0B,MAAtE,EAA8E;AAC5EI,YAAAA,UAAU,CAACJ,MAAX,GAAoB,MAApB;AACD;;AAEDkG,UAAAA,QAAQ,CAACwB,OAAT,CAAiBC,OAAjB,CAAyBE,MAAzB,GAAkCzH,UAAU,CAACJ,MAA7C;;AAEA,cAAI1B,IAAI,CAAC0B,MAAL,KAAgByH,UAAU,CAACzH,MAA3B,IACAyH,UAAU,CAACK,QAAX,KAAwB,OAD5B,EACqC;AACnC,gBAAI,CAACjM,QAAQ,CAACkM,gBAAT,CAA0B,MAA1B,EAAgC7B,QAAhC,EAA0C5H,IAA1C,EAAgD8B,UAAhD,EAA4D9B,IAAI,CAAC0B,MAAjE,CAAL,EAA+E;AAC7E;AACD;;AACD,gBAAIqD,MAAM,CAACE,QAAP,IAAmBF,MAAM,CAACP,QAA9B,EAAwC;AACtC1C,cAAAA,UAAU,CAACa,KAAX,GAAmB,qCAAnB;AACApF,cAAAA,QAAQ,CAAC+K,aAAT,CAAuB,MAAvB;AACD;AACF;AACF,SAtBD;;AAuBA,YAAI1H,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,EAA9B,EAAkC;AAChCkB,UAAAA,UAAU,CAACc,cAAX,GAA4B,KAA5B;AACA8G,UAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,SAHD,MAGO;AACL5H,UAAAA,UAAU,CAACc,cAAX,GAA4B,IAA5B;AACD;;AACD,YAAI,KAAKjC,OAAL,GAAe,CAAnB,EAAsB;AACpBmB,UAAAA,UAAU,CAACI,YAAX,GAA2B,IAAIyH,IAAJ,EAAD,CAAaC,OAAb,EAA1B;;AACA9H,UAAAA,UAAU,CAACM,SAAX,GAAuB,YAAM;AAC3BH,YAAAA,MAAM,CAACiB,KAAP;;AACA,gBAAI,EAAE,MAAI,CAACvD,UAAL,KAAoBjB,YAAY,CAACkB,MAAjC,IACD,MAAI,CAACD,UAAL,KAAoBjB,YAAY,CAAC2E,MAAjC,IAA2C,CAACvB,UAAU,CAACE,IADtD,IAEF,MAAI,CAACrC,UAAL,KAAoBjB,YAAY,CAACyE,IAFjC,CAAJ,EAE4C;AAC1CrB,cAAAA,UAAU,CAACE,IAAX,GAAkB,KAAlB;AACA,kBAAI6H,YAAY,GAAG,KAAnB;;AACA,kBAAI,CAAC/H,UAAU,CAACc,cAAhB,EAAgC;AAC9BpE,gBAAAA,WAAW,CAAC,UAAD,EAAaiB,MAAb,EAAqBvB,aAArB,CAAX;AACAkH,gBAAAA,gBAAgB,CAAC,MAAD,EAAO1G,YAAY,CAACyE,IAApB,CAAhB;AACA3E,gBAAAA,WAAW,CAAC,SAAD,EAAYiB,MAAZ,EAAoBvB,aAApB,CAAX;AACAM,gBAAAA,WAAW,CAAC,SAAD,EAAYiB,MAAZ,EAAoBvB,aAApB,CAAX;AACA2L,gBAAAA,YAAY,GAAG,IAAf;AACD;;AACDrL,cAAAA,WAAW,CAAC,UAAD,EAAa,MAAb,EAAmBN,aAAnB,CAAX;;AACA,kBAAI,CAAC2L,YAAL,EAAmB;AACjBzE,gBAAAA,gBAAgB,CAAC,MAAD,EAAO1G,YAAY,CAACyE,IAApB,CAAhB;AACD;;AACD3E,cAAAA,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAkBN,aAAlB,CAAX;AACAM,cAAAA,WAAW,CAAC,SAAD,EAAY,MAAZ,EAAkBN,aAAlB,CAAX;AACD;;AACD,YAAA,MAAI,CAACyB,UAAL,GAAkBjB,YAAY,CAACkB,MAA/B;AACD,WAtBD;;AAuBAkC,UAAAA,UAAU,CAACK,SAAX,GAAuB2H,UAAU,CAAChI,UAAU,CAACM,SAAZ,EAAuB,KAAKzB,OAA5B,CAAjC;AACD;AACF;AACF;;;qCAEgBsD,M,EAAQ8F,K,EAAO;AAAA,UACtB/J,IADsB,GACD,IADC,CACtBA,IADsB;AAAA,UAChB8B,UADgB,GACD,IADC,CAChBA,UADgB;;AAG9B,UAAI,KAAKnC,UAAL,KAAoBjB,YAAY,CAAC2E,MAAjC,IAA2CvB,UAAU,CAACE,IAA1D,EAAgE;AAC9D,cAAMxE,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AAEDqF,MAAAA,KAAK,GAAGC,oBAAoB,CAACD,KAAD,CAA5B;;AAEA,UAAI,CAAClL,WAAW,CAAC8F,IAAZ,CAAiBV,MAAjB,CAAD,IAA6B,CAACnF,gBAAgB,CAAC6F,IAAjB,CAAsBoF,KAAtB,CAAlC,EAAgE;AAC9D,cAAMvM,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,gDAD4C,EAE5C,aAF4C,CAAxC,CAAN;AAID;;AAED,UAAMR,QAAQ,GAAGD,MAAM,CAACF,WAAP,EAAjB;;AAEA,UAAIhF,uBAAuB,CAAC+F,GAAxB,CAA4BZ,QAA5B,KAAyCA,QAAQ,CAAC+F,UAAT,CAAoB,MAApB,CAAzC,IAAwE/F,QAAQ,CAAC+F,UAAT,CAAoB,QAApB,CAA5E,EAA2G;AACzG;AACD;;AAED,UAAMvG,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY1D,IAAI,CAACQ,cAAjB,CAAb;AACA,UAAI0J,CAAC,GAAGxG,IAAI,CAACkD,MAAb;;AACA,aAAOsD,CAAC,EAAR,EAAY;AACV,YAAMtG,GAAG,GAAGF,IAAI,CAACwG,CAAD,CAAhB;;AACA,YAAItG,GAAG,CAACG,WAAJ,OAAsBG,QAA1B,EAAoC;AAClClE,UAAAA,IAAI,CAACQ,cAAL,CAAoBoD,GAApB,KAA4B,OAAOmG,KAAnC;AACA;AACD;AACF;;AACD/J,MAAAA,IAAI,CAACQ,cAAL,CAAoByD,MAApB,IAA8B8F,KAA9B;AACD;;;wBAllBkB;AACjB,aAAO,KAAK/J,IAAL,CAAUO,YAAjB;AACD,K;sBACgBA,Y,EAAc;AAAA,UACrBP,IADqB,GACZ,IADY,CACrBA,IADqB;;AAE7B,UAAI,KAAKL,UAAL,KAAoBjB,YAAY,CAAC6E,OAAjC,IAA4C,KAAK5D,UAAL,KAAoBjB,YAAY,CAACyE,IAAjF,EAAuF;AACrF,cAAM3F,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AACD,UAAI,KAAK/E,UAAL,KAAoBjB,YAAY,CAAC2E,MAAjC,IAA2CrD,IAAI,CAACC,WAApD,EAAiE;AAC/D,cAAMzC,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,wDAD4C,EAE5C,oBAF4C,CAAxC,CAAN;AAID;;AACD1E,MAAAA,IAAI,CAACO,YAAL,GAAoBA,YAApB;AACD;;;wBAEc;AAAA,UACLuB,UADK,GACU,IADV,CACLA,UADK;;AAEb,UAAIA,UAAU,CAACQ,aAAf,EAA8B;AAC5B;AACA,eAAO3E,QAAQ,CAACwM,iBAAT,CAA2BrI,UAAU,CAACQ,aAAtC,CAAP;AACD;;AACD,UAAI8E,GAAJ;AAEA,UAAM/E,cAAc,GAAGP,UAAU,CAACO,cAAX,GACrBP,UAAU,CAACO,cAAX,CAA0B+H,KAA1B,CAAgC,CAAhC,EAAmCtI,UAAU,CAACkB,sBAA9C,CADqB,GAErB,IAFF;;AAIA,cAAQ,KAAKzC,YAAb;AACE,aAAK,EAAL;AACA,aAAK,MAAL;AAAa;AACX6G,YAAAA,GAAG,GAAG,KAAKiD,YAAX;AACA;AACD;;AACD,aAAK,aAAL;AAAoB;AAClB,gBAAI,CAAChI,cAAL,EAAqB;AACnB,qBAAO,IAAP;AACD;;AACD+E,YAAAA,GAAG,GAAG3I,2BAA2B,CAAC4D,cAAD,EAAiB,KAAKqC,aAAtB,CAAjC;AACA;AACD;;AACD,aAAK,MAAL;AAAa;AACX,gBAAI,CAACrC,cAAL,EAAqB;AACnB,qBAAO,IAAP;AACD;;AACD,gBAAM+D,WAAW,GAAGkE,aAAa,CAAC,IAAD,CAAjC;AACAlD,YAAAA,GAAG,GAAGvJ,IAAI,CAAC6B,UAAL,CAAgB,KAAKgF,aAArB,EAAoC,CACxC,CAAC,IAAI6F,UAAJ,CAAelI,cAAf,CAAD,CADwC,EAExC;AAAEmI,cAAAA,IAAI,EAAEpE,WAAW,IAAI;AAAvB,aAFwC,CAApC,CAAN;AAIA;AACD;;AACD,aAAK,UAAL;AAAiB;AACfgB,YAAAA,GAAG,GAAG,KAAKqD,WAAX;AACA;AACD;;AACD,aAAK,MAAL;AAAa;AACX,gBAAI,KAAK9K,UAAL,KAAoBjB,YAAY,CAACyE,IAAjC,IAAyC,CAACd,cAA9C,EAA8D;AAC5D+E,cAAAA,GAAG,GAAG,IAAN;AACD;;AAED,gBAAI;AACFA,cAAAA,GAAG,GAAG7I,kBAAkB,CAAC8D,cAAD,CAAxB;AACD,aAFD,CAEE,OAAO2C,CAAP,EAAU;AACVoC,cAAAA,GAAG,GAAG,IAAN;AACD;;AACD;AACD;AAvCH;;AAyCAtF,MAAAA,UAAU,CAACQ,aAAX,GAA2B8E,GAA3B,CArDa,CAsDb;;AACA,aAAOzJ,QAAQ,CAACwM,iBAAT,CAA2B/C,GAA3B,CAAP;AACD;;;wBACkB;AAAA,UACTtF,UADS,GACM,IADN,CACTA,UADS;;AAEjB,UAAI,KAAKvB,YAAL,KAAsB,EAAtB,IAA4B,KAAKA,YAAL,KAAsB,MAAtD,EAA8D;AAC5D,cAAM/C,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AACD,UAAI,KAAK/E,UAAL,KAAoBjB,YAAY,CAAC6E,OAAjC,IAA4C,KAAK5D,UAAL,KAAoBjB,YAAY,CAACyE,IAAjF,EAAuF;AACrF,eAAO,EAAP;AACD;;AACD,UAAIrB,UAAU,CAACS,iBAAf,EAAkC;AAChC,eAAOT,UAAU,CAACS,iBAAlB;AACD;;AACD,UAAMF,cAAc,GAAGP,UAAU,CAACO,cAAX,GACrBP,UAAU,CAACO,cAAX,CAA0B+H,KAA1B,CAAgC,CAAhC,EAAmCtI,UAAU,CAACkB,sBAA9C,CADqB,GAErB,IAFF;;AAIA,UAAI,CAACX,cAAL,EAAqB;AACnB,eAAO,EAAP;AACD;;AAED,UAAMqI,gBAAgB,GAAGC,YAAY,CAAC,IAAD,CAAZ,IAAsBvN,cAAc,CAACwN,cAAf,CAA8BvI,cAA9B,CAAtB,IAAuE,OAAhG;AACA,UAAM+E,GAAG,GAAGhK,cAAc,CAACyN,MAAf,CAAsBxI,cAAtB,EAAsCqI,gBAAtC,CAAZ;AAEA5I,MAAAA,UAAU,CAACS,iBAAX,GAA+B6E,GAA/B;AACA,aAAOA,GAAP;AACD;;;wBACiB;AAAA,UACRpH,IADQ,GACa,IADb,CACRA,IADQ;AAAA,UACF8B,UADE,GACa,IADb,CACFA,UADE;;AAEhB,UAAI,KAAKvB,YAAL,KAAsB,EAAtB,IAA4B,KAAKA,YAAL,KAAsB,UAAtD,EAAkE;AAChE,cAAM/C,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AACD,UAAI,KAAK/E,UAAL,KAAoBjB,YAAY,CAACyE,IAArC,EAA2C;AACzC,eAAO,IAAP;AACD;;AACD,UAAIrB,UAAU,CAACU,gBAAf,EAAiC;AAC/B,eAAOV,UAAU,CAACU,gBAAlB;AACD;;AACD,UAAMH,cAAc,GAAGP,UAAU,CAACO,cAAX,GACrBP,UAAU,CAACO,cAAX,CAA0B+H,KAA1B,CAAgC,CAAhC,EAAmCtI,UAAU,CAACkB,sBAA9C,CADqB,GAErB,IAFF;;AAIA,UAAI,CAACX,cAAL,EAAqB;AACnB,eAAO,IAAP;AACD;;AAED,UAAM+D,WAAW,GAAGkE,aAAa,CAAC,IAAD,CAAjC;AACA,UAAIQ,MAAM,GAAG,KAAb;AACA,UAAIC,KAAK,GAAG,KAAZ;AACA,UAAMxF,MAAM,GAAGjI,QAAQ,CAACkI,KAAT,CAAeY,WAAf,CAAf;;AACA,UAAIb,MAAJ,EAAY;AACVuF,QAAAA,MAAM,GAAGvF,MAAM,CAACuF,MAAP,EAAT;AACAC,QAAAA,KAAK,GAAGxF,MAAM,CAACwF,KAAP,EAAR;;AACA,YAAI,CAACA,KAAD,IAAU,CAACD,MAAf,EAAuB;AACrB,iBAAO,IAAP;AACD;AACF;;AAED,UAAI,KAAKvK,YAAL,KAAsB,EAAtB,IAA4BuK,MAAhC,EAAwC;AACtC,eAAO,IAAP;AACD;;AAED,UAAMtJ,QAAQ,GAAGmJ,YAAY,CAAC,IAAD,CAAZ,IAAsBvN,cAAc,CAACwN,cAAf,CAA8BvI,cAA9B,CAAtB,IAAuE,OAAxF;AACA,UAAM2I,OAAO,GAAG5N,cAAc,CAACyN,MAAf,CAAsBxI,cAAtB,EAAsCb,QAAtC,CAAhB;;AAEA,UAAI,CAACwJ,OAAL,EAAc;AACZ,eAAO,IAAP;AACD;;AACD,UAAM5D,GAAG,GAAGxJ,QAAQ,CAAC8B,UAAT,CAAoB,KAAKgF,aAAzB,EAAwC,EAAxC,EAA4C;AACtDuG,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAElL,IAAI,CAACU,GADH;AAEPyK,UAAAA,YAAY,EAAE,IAAIxB,IAAJ,CAAStF,kBAAiB,CAAC,IAAD,EAAO,eAAP,CAA1B,CAFP;AAGP+G,UAAAA,WAAW,EAAEN,MAAM,GAAG,MAAH,GAAY,KAHxB;AAIPxJ,UAAAA,SAAS,EAAE;AAAE+J,YAAAA,aAAa,EAAE;AAAA,qBAAM/K,SAAN;AAAA,aAAjB;AAAkCgL,YAAAA,mBAAmB,EAAE;AAAA,qBAAM,EAAN;AAAA;AAAvD,WAJJ;AAKP9J,UAAAA,QAAQ,EAARA,QALO;AAMP+J,UAAAA,YAAY,EAAE,KAAK/L,cAAL,CAAoBgM;AAN3B;AAD6C,OAA5C,CAAZ;;AAUA,UAAI;AACFpN,QAAAA,iBAAiB,CAAC4M,OAAD,EAAU5D,GAAV,CAAjB;AACD,OAFD,CAEE,OAAOpC,CAAP,EAAU;AACVlD,QAAAA,UAAU,CAACU,gBAAX,GAA8B,IAA9B;AACA,eAAO,IAAP;AACD;;AACD4E,MAAAA,GAAG,CAACqE,KAAJ;AACA3J,MAAAA,UAAU,CAACU,gBAAX,GAA8B4E,GAA9B;AACA,aAAOA,GAAP;AACD;;;wBAEa;AACZ,aAAO,KAAKpH,IAAL,CAAUW,OAAjB;AACD,K;sBACW+K,G,EAAK;AAAA,UACP1L,IADO,GACc,IADd,CACPA,IADO;AAAA,UACD8B,UADC,GACc,IADd,CACDA,UADC;;AAEf,UAAI9B,IAAI,CAACC,WAAT,EAAsB;AACpB,cAAMzC,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAC5C,wDAD4C,EAE5C,oBAF4C,CAAxC,CAAN;AAID;;AACD1E,MAAAA,IAAI,CAACW,OAAL,GAAe+K,GAAf;AACAzI,MAAAA,YAAY,CAACnB,UAAU,CAACK,SAAZ,CAAZ;;AACA,UAAIuJ,GAAG,GAAG,CAAN,IAAW5J,UAAU,CAACM,SAA1B,EAAqC;AACnCN,QAAAA,UAAU,CAACK,SAAX,GAAuB2H,UAAU,CAC/BhI,UAAU,CAACM,SADoB,EAE/BuJ,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,GAAG,IAAK,IAAI/B,IAAJ,EAAD,CAAaC,OAAb,KAAyB9H,UAAU,CAACI,YAAxC,CAAf,CAF+B,CAAjC;AAID,OALD,MAKO;AACLJ,QAAAA,UAAU,CAACM,SAAX,GAAuB,IAAvB;AACAN,QAAAA,UAAU,CAACI,YAAX,GAA0B,CAA1B;AACD;AACF;;;wBAEqB;AACpB,aAAO,KAAKlC,IAAL,CAAUE,eAAjB;AACD,K;sBACmBwL,G,EAAK;AAAA,UACf1L,IADe,GACM,IADN,CACfA,IADe;AAAA,UACT8B,UADS,GACM,IADN,CACTA,UADS;;AAEvB,UAAI,EAAE,KAAKnC,UAAL,KAAoBjB,YAAY,CAACkB,MAAjC,IAA2C,KAAKD,UAAL,KAAoBjB,YAAY,CAAC2E,MAA9E,CAAJ,EAA2F;AACzF,cAAM7F,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AACD,UAAI5C,UAAU,CAACE,IAAf,EAAqB;AACnB,cAAMxE,YAAY,CAACiH,MAAb,CAAoB,KAAKC,aAAzB,EAAwC,CAAC,oCAAD,EAAuC,mBAAvC,CAAxC,CAAN;AACD;;AACD1E,MAAAA,IAAI,CAACE,eAAL,GAAuBwL,GAAvB;AACD;;;;EAzQ8B3N,6B;;AAypBjCO,4BAA4B,CAACgB,kBAAkB,CAACuM,SAApB,EAA+B,CAAC,kBAAD,CAA/B,CAA5B;;AAEA,SAASzG,gBAAT,CAA0B0G,GAA1B,EAA+BnM,UAA/B,EAA2C;AACzC,MAAImM,GAAG,CAACnM,UAAJ,KAAmBA,UAAvB,EAAmC;AACjC;AACD;;AAEDmM,EAAAA,GAAG,CAACnM,UAAJ,GAAiBA,UAAjB;AAEAnB,EAAAA,WAAW,CAAC,kBAAD,EAAqBsN,GAArB,CAAX;AACD;;AAED,SAAS5C,eAAT,CAAyB4C,GAAzB,EAA8BlE,QAA9B,EAAwC;AAAA,MAC9B5H,IAD8B,GACT8L,GADS,CAC9B9L,IAD8B;AAAA,MACxB8B,UADwB,GACTgK,GADS,CACxBhK,UADwB;AAAA,MAE9BiK,UAF8B,GAEfnE,QAFe,CAE9BmE,UAF8B;AAItC,MAAIC,UAAU,GAAG,CAAjB;AAEA,MAAM3C,OAAO,GAAG,EAAhB;AACA,MAAM3G,uBAAuB,GAAG,EAAhC;AACA,MAAMuJ,SAAS,GAAG,EAAlB;AARsC,MAS9BC,UAT8B,GASftE,QATe,CAS9BsE,UAT8B;AAUtC,MAAMhC,CAAC,GAAGiC,MAAM,CAACD,UAAU,CAACtF,MAAZ,CAAhB;;AACA,OAAK,IAAIwF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlC,CAApB,EAAuBkC,CAAC,IAAI,CAA5B,EAA+B;AAC7B,QAAMnF,CAAC,GAAGiF,UAAU,CAACE,CAAD,CAApB;AACA,QAAMC,EAAE,GAAGpF,CAAC,CAAClD,WAAF,EAAX;AACA,QAAMmD,CAAC,GAAGgF,UAAU,CAACE,CAAC,GAAG,CAAL,CAApB;;AACA,QAAIlN,qBAAqB,CAAC4F,GAAtB,CAA0BuH,EAA1B,CAAJ,EAAmC;AACjC,UAAIJ,SAAS,CAACI,EAAD,CAAT,KAAkB/L,SAAtB,EAAiC;AAC/B,eAAO+I,OAAO,CAAC4C,SAAS,CAACI,EAAD,CAAV,CAAd;AACD;;AACDhD,MAAAA,OAAO,CAACpC,CAAD,CAAP,GAAaC,CAAb;AACD,KALD,MAKO,IAAI+E,SAAS,CAACI,EAAD,CAAT,KAAkB/L,SAAtB,EAAiC;AACtC+I,MAAAA,OAAO,CAAC4C,SAAS,CAACI,EAAD,CAAV,CAAP,IAA0B,OAAOnF,CAAjC;AACD,KAFM,MAEA;AACLmC,MAAAA,OAAO,CAACpC,CAAD,CAAP,GAAaC,CAAb;AACD;;AACD+E,IAAAA,SAAS,CAACI,EAAD,CAAT,GAAgBpF,CAAhB;AACD;;AAED,MAAMkC,UAAU,GAAG,IAAIhM,GAAJ,CAAQyK,QAAQ,CAACwB,OAAT,CAAiB1I,GAAjB,CAAqByE,IAA7B,CAAnB;;AACA,MAAIrD,UAAU,CAACJ,MAAX,KAAsByH,UAAU,CAACzH,MAAjC,IACAyH,UAAU,CAACK,QAAX,KAAwB,OAD5B,EACqC;AACnC,QAAI,CAACjM,QAAQ,CAACkM,gBAAT,CAA0BqC,GAA1B,EAA+BlE,QAA/B,EAAyC5H,IAAzC,EAA+C8B,UAA/C,EAA2DA,UAAU,CAACJ,MAAtE,CAAL,EAAoF;AAClF;AACD;;AACD,QAAM4K,OAAO,GAAG1E,QAAQ,CAACyB,OAAT,CAAiB,+BAAjB,CAAhB;AACA,QAAMkD,IAAI,GAAG,IAAIvN,GAAJ,CAAQsN,OAAO,GAAGA,OAAO,CAACE,IAAR,GAAezI,WAAf,GAA6B0I,KAA7B,CAAmClP,QAAQ,CAACmP,yBAA5C,CAAH,GAA4E,EAA3F,CAAb;;AACA,SAAK,IAAMzI,MAAX,IAAqBoF,OAArB,EAA8B;AAC5B,UAAMnF,QAAQ,GAAGD,MAAM,CAACF,WAAP,EAAjB;;AACA,UAAI,CAAC5E,uBAAuB,CAAC2F,GAAxB,CAA4BZ,QAA5B,CAAD,IAA0C,CAACqI,IAAI,CAACzH,GAAL,CAASZ,QAAT,CAA/C,EAAmE;AACjExB,QAAAA,uBAAuB,CAACiK,IAAxB,CAA6B1I,MAA7B;AACD;AACF;AACF;;AAED,OAAK,IAAMA,OAAX,IAAqBoF,OAArB,EAA8B;AAC5B,QAAMnF,SAAQ,GAAGD,OAAM,CAACF,WAAP,EAAjB;;AACA,QAAI9E,wBAAwB,CAAC6F,GAAzB,CAA6BZ,SAA7B,CAAJ,EAA4C;AAC1CxB,MAAAA,uBAAuB,CAACiK,IAAxB,CAA6B1I,OAA7B;AACD;AACF;;AAED6H,EAAAA,GAAG,CAACjM,WAAJ,GAAkBsJ,UAAU,CAAChE,IAA7B;AAEA2G,EAAAA,GAAG,CAAChM,MAAJ,GAAaiM,UAAb;AACAD,EAAAA,GAAG,CAAC/L,UAAJ,GAAiB6H,QAAQ,CAACgF,aAAT,IAA0B7P,iBAAiB,CAACgP,UAAD,CAA3C,IAA2D,EAA5E;AAEAjK,EAAAA,UAAU,CAACW,eAAX,GAA6B4G,OAA7B;AACAvH,EAAAA,UAAU,CAACY,uBAAX,GAAqCA,uBAArC;AAEA,MAAM6F,aAAa,GAAGlE,kBAAiB,CAACyH,GAAD,EAAM,gBAAN,CAAjB,IAA4C,GAAlE;AACA,MAAMtD,YAAY,GAAGC,QAAQ,CAACF,aAAD,CAAR,IAA2B,CAAhD;AACA,MAAMG,WAAW,GAAG;AAAEC,IAAAA,gBAAgB,EAAE;AAApB,GAApB;AACA,MAAIkE,oBAAJ;;AACA,MAAIrE,YAAY,KAAK,CAArB,EAAwB;AACtBE,IAAAA,WAAW,CAACE,KAAZ,GAAoBJ,YAApB;AACAE,IAAAA,WAAW,CAACG,MAAZ,GAAqB,CAArB;AACAH,IAAAA,WAAW,CAACC,gBAAZ,GAA+B,IAA/B;AACD,GAnEqC,CAoEtC;;;AACA7G,EAAAA,UAAU,CAACO,cAAX,GAA4B2F,MAAM,CAAC8E,KAAP,CAAahL,UAAU,CAACiB,cAAxB,CAA5B;AACAjB,EAAAA,UAAU,CAACQ,aAAX,GAA2B,IAA3B;AACAR,EAAAA,UAAU,CAACS,iBAAX,GAA+B,IAA/B;AACAT,EAAAA,UAAU,CAACU,gBAAX,GAA8B,IAA9B;AACA4C,EAAAA,gBAAgB,CAAC0G,GAAD,EAAMpN,YAAY,CAAC4E,gBAAnB,CAAhB;;AAEA,MAAI,CAACxB,UAAU,CAACG,MAAhB,EAAwB;AACtB;AACA;AACD,GA9EqC,CAgFtC;AACA;;;AACA2F,EAAAA,QAAQ,CAACmB,EAAT,CAAY,MAAZ,EAAoB,UAAAgE,KAAK,EAAI;AAC3Bf,IAAAA,UAAU,IAAIe,KAAK,CAACnG,MAApB;AACA8B,IAAAA,WAAW,CAACG,MAAZ,GAAqBmD,UAArB;AACD,GAHD;AAKAlK,EAAAA,UAAU,CAACG,MAAX,CAAkB8G,EAAlB,CAAqB,MAArB,EAA6B,UAAAgE,KAAK,EAAI;AACpCjL,IAAAA,UAAU,CAACkB,sBAAX,IAAqC+J,KAAK,CAACnG,MAA3C;;AACA,QAAI9E,UAAU,CAACkB,sBAAX,IAAqClB,UAAU,CAACiB,cAApD,EAAoE;AAClEjB,MAAAA,UAAU,CAACiB,cAAX,IAA6B,CAA7B;;AACA,aAAOjB,UAAU,CAACkB,sBAAX,IAAqClB,UAAU,CAACiB,cAAvD,EAAuE;AACrEjB,QAAAA,UAAU,CAACiB,cAAX,IAA6B,CAA7B;AACD;;AACD,UAAMiK,MAAM,GAAGhF,MAAM,CAAC8E,KAAP,CAAahL,UAAU,CAACiB,cAAxB,CAAf;AACAjB,MAAAA,UAAU,CAACO,cAAX,CAA0B4K,IAA1B,CAA+BD,MAA/B,EAAuC,CAAvC,EAA0C,CAA1C,EAA6ClL,UAAU,CAACO,cAAX,CAA0BuE,MAAvE;AACA9E,MAAAA,UAAU,CAACO,cAAX,GAA4B2K,MAA5B;AACD;;AACDD,IAAAA,KAAK,CAACE,IAAN,CAAWnL,UAAU,CAACO,cAAtB,EAAsCP,UAAU,CAACkB,sBAAX,GAAoC+J,KAAK,CAACnG,MAAhF,EAAwF,CAAxF,EAA2FmG,KAAK,CAACnG,MAAjG;AACA9E,IAAAA,UAAU,CAACQ,aAAX,GAA2B,IAA3B;AACAR,IAAAA,UAAU,CAACS,iBAAX,GAA+B,IAA/B;AACAT,IAAAA,UAAU,CAACU,gBAAX,GAA8B,IAA9B;;AAEA,QAAIsJ,GAAG,CAACnM,UAAJ,KAAmBjB,YAAY,CAAC4E,gBAApC,EAAsD;AACpDwI,MAAAA,GAAG,CAACnM,UAAJ,GAAiBjB,YAAY,CAAC6E,OAA9B;AACD;;AACD/E,IAAAA,WAAW,CAAC,kBAAD,EAAqBsN,GAArB,CAAX;;AAEA,QAAIpD,WAAW,CAACE,KAAZ,KAAsBF,WAAW,CAACG,MAAlC,IAA4C/G,UAAU,CAACkB,sBAAX,KAAsCgJ,UAAtF,EAAkG;AAChG,UAAIa,oBAAoB,KAAKnE,WAAW,CAACG,MAAzC,EAAiD;AAC/C;AACA;AACAgE,QAAAA,oBAAoB,GAAGnE,WAAW,CAACG,MAAnC;AACArK,QAAAA,WAAW,CAAC,UAAD,EAAasN,GAAb,EAAkB5N,aAAlB,EAAiCwK,WAAjC,CAAX;AACD;AACF;AACF,GA7BD;AA8BA5G,EAAAA,UAAU,CAACG,MAAX,CAAkB8G,EAAlB,CAAqB,KAArB,EAA4B,YAAM;AAChC9F,IAAAA,YAAY,CAACnB,UAAU,CAACK,SAAZ,CAAZ;AACAL,IAAAA,UAAU,CAACM,SAAX,GAAuB,IAAvB;AACAN,IAAAA,UAAU,CAACI,YAAX,GAA0B,CAA1B;AACAJ,IAAAA,UAAU,CAACG,MAAX,GAAoB,IAApB;AACAzD,IAAAA,WAAW,CAAC,UAAD,EAAasN,GAAb,EAAkB5N,aAAlB,EAAiCwK,WAAjC,CAAX;AACAtD,IAAAA,gBAAgB,CAAC0G,GAAD,EAAMpN,YAAY,CAACyE,IAAnB,CAAhB;AACA3E,IAAAA,WAAW,CAAC,MAAD,EAASsN,GAAT,EAAc5N,aAAd,EAA6BwK,WAA7B,CAAX;AACAlK,IAAAA,WAAW,CAAC,SAAD,EAAYsN,GAAZ,EAAiB5N,aAAjB,EAAgCwK,WAAhC,CAAX;AACD,GATD;AAUD;;AAED,SAASgB,yBAAT,CAAmCoC,GAAnC,EAAwC;AAAA,MAC9BhK,UAD8B,GACPgK,GADO,CAC9BhK,UAD8B;AAAA,MAClBrC,MADkB,GACPqM,GADO,CAClBrM,MADkB;AAAA,MAE9BwC,MAF8B,GAEnBH,UAFmB,CAE9BG,MAF8B;AAItC,MAAI2G,KAAK,GAAG,CAAZ;AACA,MAAID,gBAAgB,GAAG,KAAvB;AACA,MAAM/B,MAAM,GAAG3E,MAAM,CAACoH,OAAP,IAAkBZ,QAAQ,CAAClL,QAAQ,CAACgJ,gBAAT,CAA0BtE,MAAM,CAACoH,OAAjC,EAA0C,gBAA1C,CAAD,CAAzC;;AACA,MAAIzC,MAAJ,EAAY;AACVgC,IAAAA,KAAK,GAAGhC,MAAR;AACA+B,IAAAA,gBAAgB,GAAG,IAAnB;AACD;;AACD,MAAMuE,YAAY,GAAG;AACnBvE,IAAAA,gBAAgB,EAAhBA,gBADmB;AAEnBC,IAAAA,KAAK,EAALA,KAFmB;AAGnBC,IAAAA,MAAM,EAAE;AAHW,GAArB;;AAMA,MAAI/G,UAAU,CAACe,cAAf,EAA+B;AAC7BrE,IAAAA,WAAW,CAAC,WAAD,EAAciB,MAAd,EAAsBvB,aAAtB,EAAqCgP,YAArC,CAAX;AACD;;AAEDjL,EAAAA,MAAM,CAAC8G,EAAP,CAAU,SAAV,EAAqB,UAAAoE,GAAG,EAAI;AAC1BA,IAAAA,GAAG,CAACpE,EAAJ,CAAO,UAAP,EAAmB,YAAM;AACvBjH,MAAAA,UAAU,CAACc,cAAX,GAA4B,IAA5B;;AAEA,UAAI,CAACd,UAAU,CAACe,cAAhB,EAAgC;AAC9B;AACD;;AAED,UAAMuK,QAAQ,GAAG;AACfzE,QAAAA,gBAAgB,EAAhBA,gBADe;AAEfC,QAAAA,KAAK,EAALA,KAFe;AAGfC,QAAAA,MAAM,EAAED;AAHO,OAAjB;AAKApK,MAAAA,WAAW,CAAC,UAAD,EAAaiB,MAAb,EAAqBvB,aAArB,EAAoCkP,QAApC,CAAX;AACA5O,MAAAA,WAAW,CAAC,MAAD,EAASiB,MAAT,EAAiBvB,aAAjB,EAAgCkP,QAAhC,CAAX;AACA5O,MAAAA,WAAW,CAAC,SAAD,EAAYiB,MAAZ,EAAoBvB,aAApB,EAAmCkP,QAAnC,CAAX;AACD,KAfD;AAgBD,GAjBD;AAkBD;;AAED,SAAS9C,aAAT,CAAuBwB,GAAvB,EAA4B;AAAA,MAClB9L,IADkB,GACT8L,GADS,CAClB9L,IADkB;AAE1B,SAAOA,IAAI,CAACsF,gBAAL,IAAyBjB,kBAAiB,CAACyH,GAAD,EAAM,cAAN,CAAjD;AACD;;AAED,SAASnB,YAAT,CAAsBmB,GAAtB,EAA2B;AAAA,MACjB9L,IADiB,GACR8L,GADQ,CACjB9L,IADiB;;AAEzB,MAAIA,IAAI,CAAC6F,eAAT,EAA0B;AACxB,WAAO7F,IAAI,CAAC6F,eAAZ;AACD;;AACD,MAAMwH,iBAAiB,GAAG/P,QAAQ,CAACkI,KAAT,CAAenB,kBAAiB,CAACyH,GAAD,EAAM,cAAN,CAAhC,CAA1B;;AACA,MAAIuB,iBAAJ,EAAuB;AACrB,WAAOjQ,cAAc,CAAC0I,WAAf,CAA2BuH,iBAAiB,CAAC1H,UAAlB,CAA6BC,GAA7B,CAAiC,SAAjC,CAA3B,CAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAASvB,kBAAT,CAA2ByH,GAA3B,EAAgC5H,QAAhC,EAA0C;AAAA,MAChCpC,UADgC,GACjBgK,GADiB,CAChChK,UADgC;AAExC,MAAM4B,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAY5B,UAAU,CAACW,eAAvB,CAAb;AACA,MAAIyH,CAAC,GAAGxG,IAAI,CAACkD,MAAb;;AACA,SAAOsD,CAAC,EAAR,EAAY;AACV,QAAMtG,GAAG,GAAGF,IAAI,CAACwG,CAAD,CAAhB;;AACA,QAAItG,GAAG,CAACG,WAAJ,OAAsBG,QAA1B,EAAoC;AAClC,aAAOpC,UAAU,CAACW,eAAX,CAA2BmB,GAA3B,CAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASoG,oBAAT,CAA8BD,KAA9B,EAAqC;AACnC,SAAOA,KAAK,CAACuD,OAAN,CAAc,sBAAd,EAAsC,EAAtC,EAA0CA,OAA1C,CAAkD,sBAAlD,EAA0E,EAA1E,CAAP;AACD;;AAED,SAASpH,WAAT,CAAqBqH,QAArB,EAA+B;AAC7B;AACA;AACA;AACA;AAEA,MAAI1P,IAAI,CAACkI,MAAL,CAAYwH,QAAZ,CAAJ,EAA2B;AACzB,WAAO;AACLpH,MAAAA,MAAM,EAAEoH,QAAQ,CAACC,OADZ;AAELpH,MAAAA,WAAW,EAAEmH,QAAQ,CAAC/C,IAAT,KAAkB,EAAlB,GAAuB,IAAvB,GAA8B+C,QAAQ,CAAC/C;AAF/C,KAAP;AAID,GALD,MAKO,IAAIrM,aAAa,CAACoP,QAAD,CAAjB,EAA6B;AAClC,WAAO;AACLpH,MAAAA,MAAM,EAAE6B,MAAM,CAACC,IAAP,CAAYsF,QAAZ,CADH;AAELnH,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID,GALM,MAKA,IAAIqH,WAAW,CAACC,MAAZ,CAAmBH,QAAnB,CAAJ,EAAkC;AACvC,WAAO;AACLpH,MAAAA,MAAM,EAAE6B,MAAM,CAACC,IAAP,CAAYsF,QAAQ,CAACpH,MAArB,EAA6BoH,QAAQ,CAACvB,UAAtC,EAAkDuB,QAAQ,CAAC1G,UAA3D,CADH;AAELT,MAAAA,WAAW,EAAE;AAFR,KAAP;AAID,GALM,MAKA,IAAItI,QAAQ,CAACiI,MAAT,CAAgBwH,QAAhB,CAAJ,EAA+B;AACpC,QAAM1M,QAAQ,GAAG,EAAjB;;AADoC,+CAEhB0M,QAAQ,CAACI,QAFO;AAAA;;AAAA;AAEpC,0DAAuC;AAAA,YAA5BC,KAA4B;AACrC,YAAIlC,GAAG,SAAP;;AACA,YAAI7N,IAAI,CAACkI,MAAL,CAAY6H,KAAK,CAAC7D,KAAlB,CAAJ,EAA8B;AAC5B,cAAM8D,IAAI,GAAGD,KAAK,CAAC7D,KAAnB;AACA2B,UAAAA,GAAG,GAAG;AACJoC,YAAAA,IAAI,EAAEF,KAAK,CAACE,IADR;AAEJ/D,YAAAA,KAAK,EAAE8D,IAAI,CAACL,OAFR;AAGJvC,YAAAA,OAAO,EAAE;AACP8C,cAAAA,QAAQ,EAAEF,IAAI,CAACC,IADR;AAEP1H,cAAAA,WAAW,EAAEyH,IAAI,CAACrD,IAFX;AAGPwD,cAAAA,WAAW,EAAEH,IAAI,CAACI;AAHX;AAHL,WAAN;AASD,SAXD,MAWO;AACLvC,UAAAA,GAAG,GAAGkC,KAAN;AACD;;AAED/M,QAAAA,QAAQ,CAAC8L,IAAT,CAAcjB,GAAd;AACD;AApBmC;AAAA;AAAA;AAAA;AAAA;;AAsBpC,WAAO;AAAE7K,MAAAA,QAAQ,EAARA;AAAF,KAAP;AACD,GA5C4B,CA8C7B;;;AACA,SAAO;AACLsF,IAAAA,MAAM,EAAE6B,MAAM,CAACC,IAAP,CAAYsF,QAAZ,EAAsB,OAAtB,CADH;AAELnH,IAAAA,WAAW,EAAE;AAFR,GAAP;AAID;;AAED8H,OAAO,CAAClQ,cAAR,GAAyBsB,kBAAzB","sourcesContent":["\"use strict\";\n\nconst HTTP_STATUS_CODES = require(\"http\").STATUS_CODES;\nconst { spawnSync } = require(\"child_process\");\nconst { URL } = require(\"whatwg-url\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst tough = require(\"tough-cookie\");\nconst MIMEType = require(\"whatwg-mimetype\");\n\nconst xhrUtils = require(\"./xhr-utils\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { documentBaseURLSerialized } = require(\"../helpers/document-base-url\");\nconst { asciiCaseInsensitiveMatch } = require(\"../helpers/strings\");\nconst idlUtils = require(\"../generated/utils\");\nconst Document = require(\"../generated/Document\");\nconst Blob = require(\"../generated/Blob\");\nconst FormData = require(\"../generated/FormData\");\nconst XMLHttpRequestEventTargetImpl = require(\"./XMLHttpRequestEventTarget-impl\").implementation;\nconst XMLHttpRequestUpload = require(\"../generated/XMLHttpRequestUpload\");\nconst ProgressEvent = require(\"../generated/ProgressEvent\");\nconst { isArrayBuffer } = require(\"../generated/utils\");\nconst { parseIntoDocument } = require(\"../../browser/parser\");\nconst { fragmentSerialization } = require(\"../domparsing/serialization\");\nconst { setupForSimpleEventAccessors } = require(\"../helpers/create-event-accessor\");\nconst { parseJSONFromBytes } = require(\"../helpers/json\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { copyToArrayBufferInNewRealm } = require(\"../helpers/binary-data\");\n\nconst { READY_STATES } = xhrUtils;\n\nconst syncWorkerFile = require.resolve ? require.resolve(\"./xhr-sync-worker.js\") : null;\n\nconst tokenRegexp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\nconst fieldValueRegexp = /^[ \\t]*(?:[\\x21-\\x7E\\x80-\\xFF](?:[ \\t][\\x21-\\x7E\\x80-\\xFF])?)*[ \\t]*$/;\n\nconst forbiddenRequestHeaders = new Set([\n  \"accept-charset\",\n  \"accept-encoding\",\n  \"access-control-request-headers\",\n  \"access-control-request-method\",\n  \"connection\",\n  \"content-length\",\n  \"cookie\",\n  \"cookie2\",\n  \"date\",\n  \"dnt\",\n  \"expect\",\n  \"host\",\n  \"keep-alive\",\n  \"origin\",\n  \"referer\",\n  \"te\",\n  \"trailer\",\n  \"transfer-encoding\",\n  \"upgrade\",\n  \"via\"\n]);\nconst forbiddenResponseHeaders = new Set([\n  \"set-cookie\",\n  \"set-cookie2\"\n]);\nconst uniqueResponseHeaders = new Set([\n  \"content-type\",\n  \"content-length\",\n  \"user-agent\",\n  \"referer\",\n  \"host\",\n  \"authorization\",\n  \"proxy-authorization\",\n  \"if-modified-since\",\n  \"if-unmodified-since\",\n  \"from\",\n  \"location\",\n  \"max-forwards\"\n]);\nconst corsSafeResponseHeaders = new Set([\n  \"cache-control\",\n  \"content-language\",\n  \"content-type\",\n  \"expires\",\n  \"last-modified\",\n  \"pragma\"\n]);\n\nconst allowedRequestMethods = new Set([\"OPTIONS\", \"GET\", \"HEAD\", \"POST\", \"PUT\", \"DELETE\"]);\nconst forbiddenRequestMethods = new Set([\"TRACK\", \"TRACE\", \"CONNECT\"]);\n\nclass XMLHttpRequestImpl extends XMLHttpRequestEventTargetImpl {\n  constructor(window) {\n    super(window);\n\n    // Avoid running `_ownerDocument` getter multiple times in the constructor:\n    const { _ownerDocument } = this;\n\n    this.upload = XMLHttpRequestUpload.createImpl(window);\n\n    this.readyState = READY_STATES.UNSENT;\n    this.responseURL = \"\";\n    this.status = 0;\n    this.statusText = \"\";\n\n    this.flag = {\n      synchronous: false,\n      withCredentials: false,\n      mimeType: null,\n      auth: null,\n      method: undefined,\n      responseType: \"\",\n      requestHeaders: {},\n      referrer: _ownerDocument.URL,\n      uri: \"\",\n      timeout: 0,\n      body: undefined,\n      formData: false,\n      preflight: false,\n      requestManager: _ownerDocument._requestManager,\n      strictSSL: window._resourceLoader._strictSSL,\n      proxy: window._resourceLoader._proxy,\n      cookieJar: _ownerDocument._cookieJar,\n      encoding: _ownerDocument._encoding,\n      origin: window._origin,\n      userAgent: window.navigator.userAgent\n    };\n\n    this.properties = {\n      beforeSend: false,\n      send: false,\n      client: null,\n\n      timeoutStart: 0,\n      timeoutId: 0,\n      timeoutFn: null,\n\n      responseBuffer: null,\n      responseCache: null,\n      responseTextCache: null,\n      responseXMLCache: null,\n\n      responseHeaders: {},\n      filteredResponseHeaders: [],\n\n      error: \"\",\n      uploadComplete: false,\n      uploadListener: false,\n\n      // Signifies that we're calling abort() from xhr-utils.js because of a window shutdown.\n      // In that case the termination reason is \"fatal\", not \"end-user abort\".\n      abortError: false,\n\n      cookieJar: _ownerDocument._cookieJar,\n      bufferStepSize: 1 * 1024 * 1024, // pre-allocate buffer increase step size. init value is 1MB\n      totalReceivedChunkSize: 0\n    };\n  }\n\n  get responseType() {\n    return this.flag.responseType;\n  }\n  set responseType(responseType) {\n    const { flag } = this;\n    if (this.readyState === READY_STATES.LOADING || this.readyState === READY_STATES.DONE) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    if (this.readyState === READY_STATES.OPENED && flag.synchronous) {\n      throw DOMException.create(this._globalObject, [\n        \"The object does not support the operation or argument.\",\n        \"InvalidAccessError\"\n      ]);\n    }\n    flag.responseType = responseType;\n  }\n\n  get response() {\n    const { properties } = this;\n    if (properties.responseCache) {\n      // Needed because of: https://github.com/jsdom/webidl2js/issues/149\n      return idlUtils.tryWrapperForImpl(properties.responseCache);\n    }\n    let res;\n\n    const responseBuffer = properties.responseBuffer ?\n      properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) :\n      null;\n\n    switch (this.responseType) {\n      case \"\":\n      case \"text\": {\n        res = this.responseText;\n        break;\n      }\n      case \"arraybuffer\": {\n        if (!responseBuffer) {\n          return null;\n        }\n        res = copyToArrayBufferInNewRealm(responseBuffer, this._globalObject);\n        break;\n      }\n      case \"blob\": {\n        if (!responseBuffer) {\n          return null;\n        }\n        const contentType = finalMIMEType(this);\n        res = Blob.createImpl(this._globalObject, [\n          [new Uint8Array(responseBuffer)],\n          { type: contentType || \"\" }\n        ]);\n        break;\n      }\n      case \"document\": {\n        res = this.responseXML;\n        break;\n      }\n      case \"json\": {\n        if (this.readyState !== READY_STATES.DONE || !responseBuffer) {\n          res = null;\n        }\n\n        try {\n          res = parseJSONFromBytes(responseBuffer);\n        } catch (e) {\n          res = null;\n        }\n        break;\n      }\n    }\n    properties.responseCache = res;\n    // Needed because of: https://github.com/jsdom/webidl2js/issues/149\n    return idlUtils.tryWrapperForImpl(res);\n  }\n  get responseText() {\n    const { properties } = this;\n    if (this.responseType !== \"\" && this.responseType !== \"text\") {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    if (this.readyState !== READY_STATES.LOADING && this.readyState !== READY_STATES.DONE) {\n      return \"\";\n    }\n    if (properties.responseTextCache) {\n      return properties.responseTextCache;\n    }\n    const responseBuffer = properties.responseBuffer ?\n      properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) :\n      null;\n\n    if (!responseBuffer) {\n      return \"\";\n    }\n\n    const fallbackEncoding = finalCharset(this) || whatwgEncoding.getBOMEncoding(responseBuffer) || \"UTF-8\";\n    const res = whatwgEncoding.decode(responseBuffer, fallbackEncoding);\n\n    properties.responseTextCache = res;\n    return res;\n  }\n  get responseXML() {\n    const { flag, properties } = this;\n    if (this.responseType !== \"\" && this.responseType !== \"document\") {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    if (this.readyState !== READY_STATES.DONE) {\n      return null;\n    }\n    if (properties.responseXMLCache) {\n      return properties.responseXMLCache;\n    }\n    const responseBuffer = properties.responseBuffer ?\n      properties.responseBuffer.slice(0, properties.totalReceivedChunkSize) :\n      null;\n\n    if (!responseBuffer) {\n      return null;\n    }\n\n    const contentType = finalMIMEType(this);\n    let isHTML = false;\n    let isXML = false;\n    const parsed = MIMEType.parse(contentType);\n    if (parsed) {\n      isHTML = parsed.isHTML();\n      isXML = parsed.isXML();\n      if (!isXML && !isHTML) {\n        return null;\n      }\n    }\n\n    if (this.responseType === \"\" && isHTML) {\n      return null;\n    }\n\n    const encoding = finalCharset(this) || whatwgEncoding.getBOMEncoding(responseBuffer) || \"UTF-8\";\n    const resText = whatwgEncoding.decode(responseBuffer, encoding);\n\n    if (!resText) {\n      return null;\n    }\n    const res = Document.createImpl(this._globalObject, [], {\n      options: {\n        url: flag.uri,\n        lastModified: new Date(getResponseHeader(this, \"last-modified\")),\n        parsingMode: isHTML ? \"html\" : \"xml\",\n        cookieJar: { setCookieSync: () => undefined, getCookieStringSync: () => \"\" },\n        encoding,\n        parseOptions: this._ownerDocument._parseOptions\n      }\n    });\n    try {\n      parseIntoDocument(resText, res);\n    } catch (e) {\n      properties.responseXMLCache = null;\n      return null;\n    }\n    res.close();\n    properties.responseXMLCache = res;\n    return res;\n  }\n\n  get timeout() {\n    return this.flag.timeout;\n  }\n  set timeout(val) {\n    const { flag, properties } = this;\n    if (flag.synchronous) {\n      throw DOMException.create(this._globalObject, [\n        \"The object does not support the operation or argument.\",\n        \"InvalidAccessError\"\n      ]);\n    }\n    flag.timeout = val;\n    clearTimeout(properties.timeoutId);\n    if (val > 0 && properties.timeoutFn) {\n      properties.timeoutId = setTimeout(\n        properties.timeoutFn,\n        Math.max(0, val - ((new Date()).getTime() - properties.timeoutStart))\n      );\n    } else {\n      properties.timeoutFn = null;\n      properties.timeoutStart = 0;\n    }\n  }\n\n  get withCredentials() {\n    return this.flag.withCredentials;\n  }\n  set withCredentials(val) {\n    const { flag, properties } = this;\n    if (!(this.readyState === READY_STATES.UNSENT || this.readyState === READY_STATES.OPENED)) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    if (properties.send) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    flag.withCredentials = val;\n  }\n\n  abort() {\n    const { properties } = this;\n    // Terminate the request\n    clearTimeout(properties.timeoutId);\n    properties.timeoutFn = null;\n    properties.timeoutStart = 0;\n\n    const { client } = properties;\n    if (client) {\n      client.abort();\n      properties.client = null;\n    }\n\n    if (properties.abortError) {\n      // Special case that ideally shouldn't be going through the public API at all.\n      // Run the https://xhr.spec.whatwg.org/#handle-errors \"fatal\" steps.\n      this.readyState = READY_STATES.DONE;\n      properties.send = false;\n      xhrUtils.setResponseToNetworkError(this);\n      return;\n    }\n\n    if ((this.readyState === READY_STATES.OPENED && properties.send) ||\n        this.readyState === READY_STATES.HEADERS_RECEIVED ||\n        this.readyState === READY_STATES.LOADING) {\n      xhrUtils.requestErrorSteps(this, \"abort\");\n    }\n\n    if (this.readyState === READY_STATES.DONE) {\n      this.readyState = READY_STATES.UNSENT;\n\n      xhrUtils.setResponseToNetworkError(this);\n    }\n  }\n  getAllResponseHeaders() {\n    const { properties, readyState } = this;\n    if (readyState === READY_STATES.UNSENT || readyState === READY_STATES.OPENED) {\n      return \"\";\n    }\n    return Object.keys(properties.responseHeaders)\n      .filter(key => properties.filteredResponseHeaders.indexOf(key) === -1)\n      .map(key => [key.toLowerCase(), properties.responseHeaders[key]].join(\": \"))\n      .join(\"\\r\\n\");\n  }\n\n  getResponseHeader(header) {\n    const { properties, readyState } = this;\n    if (readyState === READY_STATES.UNSENT || readyState === READY_STATES.OPENED) {\n      return null;\n    }\n    const lcHeader = header.toLowerCase();\n    if (properties.filteredResponseHeaders.find(filtered => lcHeader === filtered.toLowerCase())) {\n      return null;\n    }\n    return getResponseHeader(this, lcHeader);\n  }\n\n  open(method, uri, asynchronous, user, password) {\n    const { flag, properties, _ownerDocument } = this;\n    if (!_ownerDocument) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    if (!tokenRegexp.test(method)) {\n      throw DOMException.create(this._globalObject, [\n        \"The string did not match the expected pattern.\",\n        \"SyntaxError\"\n      ]);\n    }\n    const upperCaseMethod = method.toUpperCase();\n    if (forbiddenRequestMethods.has(upperCaseMethod)) {\n      throw DOMException.create(this._globalObject, [\"The operation is insecure.\", \"SecurityError\"]);\n    }\n\n    const { client } = properties;\n    if (client && typeof client.abort === \"function\") {\n      client.abort();\n    }\n\n    if (allowedRequestMethods.has(upperCaseMethod)) {\n      method = upperCaseMethod;\n    }\n    if (typeof asynchronous !== \"undefined\") {\n      flag.synchronous = !asynchronous;\n    } else {\n      flag.synchronous = false;\n    }\n    if (flag.responseType && flag.synchronous) {\n      throw DOMException.create(this._globalObject, [\n        \"The object does not support the operation or argument.\",\n        \"InvalidAccessError\"\n      ]);\n    }\n    if (flag.synchronous && flag.timeout) {\n      throw DOMException.create(this._globalObject, [\n        \"The object does not support the operation or argument.\",\n        \"InvalidAccessError\"\n      ]);\n    }\n    flag.method = method;\n\n    let urlObj;\n    try {\n      urlObj = new URL(uri, documentBaseURLSerialized(_ownerDocument));\n    } catch (e) {\n      throw DOMException.create(this._globalObject, [\n        \"The string did not match the expected pattern.\",\n        \"SyntaxError\"\n      ]);\n    }\n\n    if (user || (password && !urlObj.username)) {\n      flag.auth = {\n        user,\n        pass: password\n      };\n      urlObj.username = \"\";\n      urlObj.password = \"\";\n    }\n\n    flag.uri = urlObj.href;\n    flag.requestHeaders = {};\n    flag.preflight = false;\n\n    properties.send = false;\n    properties.uploadListener = false;\n    properties.abortError = false;\n    this.responseURL = \"\";\n    readyStateChange(this, READY_STATES.OPENED);\n  }\n\n  overrideMimeType(mime) {\n    const { readyState } = this;\n    if (readyState === READY_STATES.LOADING || readyState === READY_STATES.DONE) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    this.flag.overrideMIMEType = \"application/octet-stream\";\n\n    // Waiting for better spec: https://github.com/whatwg/xhr/issues/157\n    const parsed = MIMEType.parse(mime);\n    if (parsed) {\n      this.flag.overrideMIMEType = parsed.essence;\n\n      const charset = parsed.parameters.get(\"charset\");\n      if (charset) {\n        this.flag.overrideCharset = whatwgEncoding.labelToName(charset);\n      }\n    }\n  }\n\n  // TODO: Add support for URLSearchParams and ReadableStream\n  send(body) {\n    const { flag, properties, upload, _ownerDocument } = this;\n    // Not per spec, but per tests: https://github.com/whatwg/xhr/issues/65\n    if (!_ownerDocument) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    if (this.readyState !== READY_STATES.OPENED || properties.send) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    properties.beforeSend = true;\n\n    try {\n      if (flag.method === \"GET\" || flag.method === \"HEAD\") {\n        body = null;\n      }\n\n      if (body !== null) {\n        let encoding = null;\n        let mimeType = null;\n\n        if (Document.isImpl(body)) {\n          encoding = \"UTF-8\";\n          mimeType = (body._parsingMode === \"html\" ? \"text/html\" : \"application/xml\") + \";charset=UTF-8\";\n          flag.body = fragmentSerialization(body, { requireWellFormed: false });\n        } else {\n          if (typeof body === \"string\") {\n            encoding = \"UTF-8\";\n          }\n          const { buffer, formData, contentType } = extractBody(body);\n          mimeType = contentType;\n          flag.body = buffer || formData;\n          flag.formData = Boolean(formData);\n        }\n\n        const existingContentType = xhrUtils.getRequestHeader(flag.requestHeaders, \"content-type\");\n        if (mimeType !== null && existingContentType === null) {\n          flag.requestHeaders[\"Content-Type\"] = mimeType;\n        } else if (existingContentType !== null && encoding !== null) {\n          // Waiting for better spec: https://github.com/whatwg/xhr/issues/188. This seems like a good guess at what\n          // the spec will be, in the meantime.\n          const parsed = MIMEType.parse(existingContentType);\n          if (parsed) {\n            const charset = parsed.parameters.get(\"charset\");\n            if (charset && !asciiCaseInsensitiveMatch(charset, encoding) && encoding !== null) {\n              parsed.parameters.set(\"charset\", encoding);\n              xhrUtils.updateRequestHeader(flag.requestHeaders, \"content-type\", parsed.toString());\n            }\n          }\n        }\n      }\n    } finally {\n      if (properties.beforeSend) {\n        properties.beforeSend = false;\n      } else {\n        throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n      }\n    }\n\n    if (Object.keys(upload._eventListeners).length > 0) {\n      properties.uploadListener = true;\n    }\n\n    // request doesn't like zero-length bodies\n    if (flag.body && flag.body.byteLength === 0) {\n      flag.body = null;\n    }\n\n    if (flag.synchronous) {\n      const flagStr = JSON.stringify(flag, function (k, v) {\n        if (this === flag && k === \"requestManager\") {\n          return null;\n        }\n        if (this === flag && k === \"pool\" && v) {\n          return { maxSockets: v.maxSockets };\n        }\n        return v;\n      });\n      const res = spawnSync(\n        process.execPath,\n        [syncWorkerFile],\n        { input: flagStr, maxBuffer: Infinity }\n      );\n      if (res.status !== 0) {\n        throw new Error(res.stderr.toString());\n      }\n      if (res.error) {\n        if (typeof res.error === \"string\") {\n          res.error = new Error(res.error);\n        }\n        throw res.error;\n      }\n\n      const response = JSON.parse(res.stdout.toString());\n      const resProp = response.properties;\n      if (resProp.responseBuffer && resProp.responseBuffer.data) {\n        resProp.responseBuffer = Buffer.from(resProp.responseBuffer.data);\n      }\n      if (resProp.cookieJar) {\n        resProp.cookieJar = tough.CookieJar.deserializeSync(\n          resProp.cookieJar,\n          _ownerDocument._cookieJar.store\n        );\n      }\n\n      this.readyState = READY_STATES.LOADING;\n      this.status = response.status;\n      this.statusText = response.statusText;\n      this.responseURL = response.responseURL;\n      Object.assign(this.properties, response.properties);\n\n      if (resProp.error) {\n        xhrUtils.dispatchError(this);\n        throw DOMException.create(this._globalObject, [resProp.error, \"NetworkError\"]);\n      } else {\n        const { responseBuffer } = properties;\n        const contentLength = getResponseHeader(this, \"content-length\") || \"0\";\n        const bufferLength = parseInt(contentLength) || responseBuffer.length;\n        const progressObj = { lengthComputable: false };\n        if (bufferLength !== 0) {\n          progressObj.total = bufferLength;\n          progressObj.loaded = bufferLength;\n          progressObj.lengthComputable = true;\n        }\n        fireAnEvent(\"progress\", this, ProgressEvent, progressObj);\n        readyStateChange(this, READY_STATES.DONE);\n        fireAnEvent(\"load\", this, ProgressEvent, progressObj);\n        fireAnEvent(\"loadend\", this, ProgressEvent, progressObj);\n      }\n    } else {\n      properties.send = true;\n\n      fireAnEvent(\"loadstart\", this, ProgressEvent);\n\n      const client = xhrUtils.createClient(this);\n\n      properties.client = client;\n      // For new client, reset totalReceivedChunkSize and bufferStepSize\n      properties.totalReceivedChunkSize = 0;\n      properties.bufferStepSize = 1 * 1024 * 1024;\n\n      properties.origin = flag.origin;\n\n      client.on(\"error\", err => {\n        client.removeAllListeners();\n        properties.error = err;\n        xhrUtils.dispatchError(this);\n      });\n\n      client.on(\"response\", res => receiveResponse(this, res));\n\n      client.on(\"redirect\", () => {\n        const { response } = client;\n        const destUrlObj = new URL(response.request.headers.Referer);\n\n        const urlObj = new URL(response.request.uri.href);\n\n        if (destUrlObj.origin !== urlObj.origin && destUrlObj.origin !== flag.origin) {\n          properties.origin = \"null\";\n        }\n\n        response.request.headers.Origin = properties.origin;\n\n        if (flag.origin !== destUrlObj.origin &&\n            destUrlObj.protocol !== \"data:\") {\n          if (!xhrUtils.validCORSHeaders(this, response, flag, properties, flag.origin)) {\n            return;\n          }\n          if (urlObj.username || urlObj.password) {\n            properties.error = \"Userinfo forbidden in cors redirect\";\n            xhrUtils.dispatchError(this);\n          }\n        }\n      });\n      if (body !== null && body !== \"\") {\n        properties.uploadComplete = false;\n        setDispatchProgressEvents(this);\n      } else {\n        properties.uploadComplete = true;\n      }\n      if (this.timeout > 0) {\n        properties.timeoutStart = (new Date()).getTime();\n        properties.timeoutFn = () => {\n          client.abort();\n          if (!(this.readyState === READY_STATES.UNSENT ||\n              (this.readyState === READY_STATES.OPENED && !properties.send) ||\n              this.readyState === READY_STATES.DONE)) {\n            properties.send = false;\n            let stateChanged = false;\n            if (!properties.uploadComplete) {\n              fireAnEvent(\"progress\", upload, ProgressEvent);\n              readyStateChange(this, READY_STATES.DONE);\n              fireAnEvent(\"timeout\", upload, ProgressEvent);\n              fireAnEvent(\"loadend\", upload, ProgressEvent);\n              stateChanged = true;\n            }\n            fireAnEvent(\"progress\", this, ProgressEvent);\n            if (!stateChanged) {\n              readyStateChange(this, READY_STATES.DONE);\n            }\n            fireAnEvent(\"timeout\", this, ProgressEvent);\n            fireAnEvent(\"loadend\", this, ProgressEvent);\n          }\n          this.readyState = READY_STATES.UNSENT;\n        };\n        properties.timeoutId = setTimeout(properties.timeoutFn, this.timeout);\n      }\n    }\n  }\n\n  setRequestHeader(header, value) {\n    const { flag, properties } = this;\n\n    if (this.readyState !== READY_STATES.OPENED || properties.send) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    value = normalizeHeaderValue(value);\n\n    if (!tokenRegexp.test(header) || !fieldValueRegexp.test(value)) {\n      throw DOMException.create(this._globalObject, [\n        \"The string did not match the expected pattern.\",\n        \"SyntaxError\"\n      ]);\n    }\n\n    const lcHeader = header.toLowerCase();\n\n    if (forbiddenRequestHeaders.has(lcHeader) || lcHeader.startsWith(\"sec-\") || lcHeader.startsWith(\"proxy-\")) {\n      return;\n    }\n\n    const keys = Object.keys(flag.requestHeaders);\n    let n = keys.length;\n    while (n--) {\n      const key = keys[n];\n      if (key.toLowerCase() === lcHeader) {\n        flag.requestHeaders[key] += \", \" + value;\n        return;\n      }\n    }\n    flag.requestHeaders[header] = value;\n  }\n}\n\nsetupForSimpleEventAccessors(XMLHttpRequestImpl.prototype, [\"readystatechange\"]);\n\nfunction readyStateChange(xhr, readyState) {\n  if (xhr.readyState === readyState) {\n    return;\n  }\n\n  xhr.readyState = readyState;\n\n  fireAnEvent(\"readystatechange\", xhr);\n}\n\nfunction receiveResponse(xhr, response) {\n  const { flag, properties } = xhr;\n  const { statusCode } = response;\n\n  let byteOffset = 0;\n\n  const headers = {};\n  const filteredResponseHeaders = [];\n  const headerMap = {};\n  const { rawHeaders } = response;\n  const n = Number(rawHeaders.length);\n  for (let i = 0; i < n; i += 2) {\n    const k = rawHeaders[i];\n    const kl = k.toLowerCase();\n    const v = rawHeaders[i + 1];\n    if (uniqueResponseHeaders.has(kl)) {\n      if (headerMap[kl] !== undefined) {\n        delete headers[headerMap[kl]];\n      }\n      headers[k] = v;\n    } else if (headerMap[kl] !== undefined) {\n      headers[headerMap[kl]] += \", \" + v;\n    } else {\n      headers[k] = v;\n    }\n    headerMap[kl] = k;\n  }\n\n  const destUrlObj = new URL(response.request.uri.href);\n  if (properties.origin !== destUrlObj.origin &&\n      destUrlObj.protocol !== \"data:\") {\n    if (!xhrUtils.validCORSHeaders(xhr, response, flag, properties, properties.origin)) {\n      return;\n    }\n    const acehStr = response.headers[\"access-control-expose-headers\"];\n    const aceh = new Set(acehStr ? acehStr.trim().toLowerCase().split(xhrUtils.headerListSeparatorRegexp) : []);\n    for (const header in headers) {\n      const lcHeader = header.toLowerCase();\n      if (!corsSafeResponseHeaders.has(lcHeader) && !aceh.has(lcHeader)) {\n        filteredResponseHeaders.push(header);\n      }\n    }\n  }\n\n  for (const header in headers) {\n    const lcHeader = header.toLowerCase();\n    if (forbiddenResponseHeaders.has(lcHeader)) {\n      filteredResponseHeaders.push(header);\n    }\n  }\n\n  xhr.responseURL = destUrlObj.href;\n\n  xhr.status = statusCode;\n  xhr.statusText = response.statusMessage || HTTP_STATUS_CODES[statusCode] || \"\";\n\n  properties.responseHeaders = headers;\n  properties.filteredResponseHeaders = filteredResponseHeaders;\n\n  const contentLength = getResponseHeader(xhr, \"content-length\") || \"0\";\n  const bufferLength = parseInt(contentLength) || 0;\n  const progressObj = { lengthComputable: false };\n  let lastProgressReported;\n  if (bufferLength !== 0) {\n    progressObj.total = bufferLength;\n    progressObj.loaded = 0;\n    progressObj.lengthComputable = true;\n  }\n  // pre-allocate buffer.\n  properties.responseBuffer = Buffer.alloc(properties.bufferStepSize);\n  properties.responseCache = null;\n  properties.responseTextCache = null;\n  properties.responseXMLCache = null;\n  readyStateChange(xhr, READY_STATES.HEADERS_RECEIVED);\n\n  if (!properties.client) {\n    // The request was aborted in reaction to the readystatechange event.\n    return;\n  }\n\n  // Can't use the client since the client gets the post-ungzipping bytes (which can be greater than the\n  // Content-Length).\n  response.on(\"data\", chunk => {\n    byteOffset += chunk.length;\n    progressObj.loaded = byteOffset;\n  });\n\n  properties.client.on(\"data\", chunk => {\n    properties.totalReceivedChunkSize += chunk.length;\n    if (properties.totalReceivedChunkSize >= properties.bufferStepSize) {\n      properties.bufferStepSize *= 2;\n      while (properties.totalReceivedChunkSize >= properties.bufferStepSize) {\n        properties.bufferStepSize *= 2;\n      }\n      const tmpBuf = Buffer.alloc(properties.bufferStepSize);\n      properties.responseBuffer.copy(tmpBuf, 0, 0, properties.responseBuffer.length);\n      properties.responseBuffer = tmpBuf;\n    }\n    chunk.copy(properties.responseBuffer, properties.totalReceivedChunkSize - chunk.length, 0, chunk.length);\n    properties.responseCache = null;\n    properties.responseTextCache = null;\n    properties.responseXMLCache = null;\n\n    if (xhr.readyState === READY_STATES.HEADERS_RECEIVED) {\n      xhr.readyState = READY_STATES.LOADING;\n    }\n    fireAnEvent(\"readystatechange\", xhr);\n\n    if (progressObj.total !== progressObj.loaded || properties.totalReceivedChunkSize === byteOffset) {\n      if (lastProgressReported !== progressObj.loaded) {\n        // This is a necessary check in the gzip case where we can be getting new data from the client, as it\n        // un-gzips, but no new data has been gotten from the response, so we should not fire a progress event.\n        lastProgressReported = progressObj.loaded;\n        fireAnEvent(\"progress\", xhr, ProgressEvent, progressObj);\n      }\n    }\n  });\n  properties.client.on(\"end\", () => {\n    clearTimeout(properties.timeoutId);\n    properties.timeoutFn = null;\n    properties.timeoutStart = 0;\n    properties.client = null;\n    fireAnEvent(\"progress\", xhr, ProgressEvent, progressObj);\n    readyStateChange(xhr, READY_STATES.DONE);\n    fireAnEvent(\"load\", xhr, ProgressEvent, progressObj);\n    fireAnEvent(\"loadend\", xhr, ProgressEvent, progressObj);\n  });\n}\n\nfunction setDispatchProgressEvents(xhr) {\n  const { properties, upload } = xhr;\n  const { client } = properties;\n\n  let total = 0;\n  let lengthComputable = false;\n  const length = client.headers && parseInt(xhrUtils.getRequestHeader(client.headers, \"content-length\"));\n  if (length) {\n    total = length;\n    lengthComputable = true;\n  }\n  const initProgress = {\n    lengthComputable,\n    total,\n    loaded: 0\n  };\n\n  if (properties.uploadListener) {\n    fireAnEvent(\"loadstart\", upload, ProgressEvent, initProgress);\n  }\n\n  client.on(\"request\", req => {\n    req.on(\"response\", () => {\n      properties.uploadComplete = true;\n\n      if (!properties.uploadListener) {\n        return;\n      }\n\n      const progress = {\n        lengthComputable,\n        total,\n        loaded: total\n      };\n      fireAnEvent(\"progress\", upload, ProgressEvent, progress);\n      fireAnEvent(\"load\", upload, ProgressEvent, progress);\n      fireAnEvent(\"loadend\", upload, ProgressEvent, progress);\n    });\n  });\n}\n\nfunction finalMIMEType(xhr) {\n  const { flag } = xhr;\n  return flag.overrideMIMEType || getResponseHeader(xhr, \"content-type\");\n}\n\nfunction finalCharset(xhr) {\n  const { flag } = xhr;\n  if (flag.overrideCharset) {\n    return flag.overrideCharset;\n  }\n  const parsedContentType = MIMEType.parse(getResponseHeader(xhr, \"content-type\"));\n  if (parsedContentType) {\n    return whatwgEncoding.labelToName(parsedContentType.parameters.get(\"charset\"));\n  }\n  return null;\n}\n\nfunction getResponseHeader(xhr, lcHeader) {\n  const { properties } = xhr;\n  const keys = Object.keys(properties.responseHeaders);\n  let n = keys.length;\n  while (n--) {\n    const key = keys[n];\n    if (key.toLowerCase() === lcHeader) {\n      return properties.responseHeaders[key];\n    }\n  }\n  return null;\n}\n\nfunction normalizeHeaderValue(value) {\n  return value.replace(/^[\\x09\\x0A\\x0D\\x20]+/, \"\").replace(/[\\x09\\x0A\\x0D\\x20]+$/, \"\");\n}\n\nfunction extractBody(bodyInit) {\n  // https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n  // except we represent the body as a Node.js Buffer instead,\n  // or a special case for FormData since we want request to handle that. Probably it would be\n  // cleaner (and allow a future without request) if we did the form encoding ourself.\n\n  if (Blob.isImpl(bodyInit)) {\n    return {\n      buffer: bodyInit._buffer,\n      contentType: bodyInit.type === \"\" ? null : bodyInit.type\n    };\n  } else if (isArrayBuffer(bodyInit)) {\n    return {\n      buffer: Buffer.from(bodyInit),\n      contentType: null\n    };\n  } else if (ArrayBuffer.isView(bodyInit)) {\n    return {\n      buffer: Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength),\n      contentType: null\n    };\n  } else if (FormData.isImpl(bodyInit)) {\n    const formData = [];\n    for (const entry of bodyInit._entries) {\n      let val;\n      if (Blob.isImpl(entry.value)) {\n        const blob = entry.value;\n        val = {\n          name: entry.name,\n          value: blob._buffer,\n          options: {\n            filename: blob.name,\n            contentType: blob.type,\n            knownLength: blob.size\n          }\n        };\n      } else {\n        val = entry;\n      }\n\n      formData.push(val);\n    }\n\n    return { formData };\n  }\n\n  // Must be a string\n  return {\n    buffer: Buffer.from(bodyInit, \"utf-8\"),\n    contentType: \"text/plain;charset=UTF-8\"\n  };\n}\n\nexports.implementation = XMLHttpRequestImpl;\n"]},"metadata":{},"sourceType":"script"}