{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar QueueItem = function QueueItem(onLoad, onError, dependentItem) {\n  _classCallCheck(this, QueueItem);\n\n  this.onLoad = onLoad;\n  this.onError = onError;\n  this.data = null;\n  this.error = null;\n  this.dependentItem = dependentItem;\n};\n/**\n * AsyncResourceQueue is the queue in charge of run the async scripts\n * and notify when they finish.\n */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  function AsyncResourceQueue() {\n    _classCallCheck(this, AsyncResourceQueue);\n\n    this.items = new Set();\n    this.dependentItems = new Set();\n  }\n\n  _createClass(AsyncResourceQueue, [{\n    key: \"count\",\n    value: function count() {\n      return this.items.size + this.dependentItems.size;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify() {\n      if (this._listener) {\n        this._listener();\n      }\n    }\n  }, {\n    key: \"_check\",\n    value: function _check(item) {\n      var _this = this;\n\n      var promise;\n\n      if (item.onError && item.error) {\n        promise = item.onError(item.error);\n      } else if (item.onLoad && item.data) {\n        promise = item.onLoad(item.data);\n      }\n\n      promise.then(function () {\n        _this.items.delete(item);\n\n        _this.dependentItems.delete(item);\n\n        if (_this.count() === 0) {\n          _this._notify();\n        }\n      });\n    }\n  }, {\n    key: \"setListener\",\n    value: function setListener(listener) {\n      this._listener = listener;\n    }\n  }, {\n    key: \"push\",\n    value: function push(request, onLoad, onError, dependentItem) {\n      var q = this;\n      var item = new QueueItem(onLoad, onError, dependentItem);\n      q.items.add(item);\n      return request.then(function (data) {\n        item.data = data;\n\n        if (dependentItem && !dependentItem.finished) {\n          q.dependentItems.add(item);\n          return q.items.delete(item);\n        }\n\n        if (onLoad) {\n          return q._check(item);\n        }\n\n        q.items.delete(item);\n\n        if (q.count() === 0) {\n          q._notify();\n        }\n\n        return null;\n      }).catch(function (err) {\n        item.error = err;\n\n        if (dependentItem && !dependentItem.finished) {\n          q.dependentItems.add(item);\n          return q.items.delete(item);\n        }\n\n        if (onError) {\n          return q._check(item);\n        }\n\n        q.items.delete(item);\n\n        if (q.count() === 0) {\n          q._notify();\n        }\n\n        return null;\n      });\n    }\n  }, {\n    key: \"notifyItem\",\n    value: function notifyItem(syncItem) {\n      var _iterator = _createForOfIteratorHelper(this.dependentItems),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n\n          if (item.dependentItem === syncItem) {\n            this._check(item);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return AsyncResourceQueue;\n}();","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/browser/resources/async-resource-queue.js"],"names":["QueueItem","onLoad","onError","dependentItem","data","error","module","exports","items","Set","dependentItems","size","_listener","item","promise","then","delete","count","_notify","listener","request","q","add","finished","_check","catch","err","syncItem"],"mappings":"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","sourcesContent":["\"use strict\";\n\nclass QueueItem {\n  constructor(onLoad, onError, dependentItem) {\n    this.onLoad = onLoad;\n    this.onError = onError;\n    this.data = null;\n    this.error = null;\n    this.dependentItem = dependentItem;\n  }\n}\n\n/**\n * AsyncResourceQueue is the queue in charge of run the async scripts\n * and notify when they finish.\n */\nmodule.exports = class AsyncResourceQueue {\n  constructor() {\n    this.items = new Set();\n    this.dependentItems = new Set();\n  }\n\n  count() {\n    return this.items.size + this.dependentItems.size;\n  }\n\n  _notify() {\n    if (this._listener) {\n      this._listener();\n    }\n  }\n\n  _check(item) {\n    let promise;\n\n    if (item.onError && item.error) {\n      promise = item.onError(item.error);\n    } else if (item.onLoad && item.data) {\n      promise = item.onLoad(item.data);\n    }\n\n    promise\n      .then(() => {\n        this.items.delete(item);\n        this.dependentItems.delete(item);\n\n        if (this.count() === 0) {\n          this._notify();\n        }\n      });\n  }\n\n  setListener(listener) {\n    this._listener = listener;\n  }\n\n  push(request, onLoad, onError, dependentItem) {\n    const q = this;\n\n    const item = new QueueItem(onLoad, onError, dependentItem);\n\n    q.items.add(item);\n\n    return request\n      .then(data => {\n        item.data = data;\n\n        if (dependentItem && !dependentItem.finished) {\n          q.dependentItems.add(item);\n          return q.items.delete(item);\n        }\n\n        if (onLoad) {\n          return q._check(item);\n        }\n\n        q.items.delete(item);\n\n        if (q.count() === 0) {\n          q._notify();\n        }\n\n        return null;\n      })\n      .catch(err => {\n        item.error = err;\n\n        if (dependentItem && !dependentItem.finished) {\n          q.dependentItems.add(item);\n          return q.items.delete(item);\n        }\n\n        if (onError) {\n          return q._check(item);\n        }\n\n        q.items.delete(item);\n\n        if (q.count() === 0) {\n          q._notify();\n        }\n\n        return null;\n      });\n  }\n\n  notifyItem(syncItem) {\n    for (const item of this.dependentItems) {\n      if (item.dependentItem === syncItem) {\n        this._check(item);\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}