{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar MIMEType = require(\"whatwg-mimetype\");\n\nvar whatwgEncoding = require(\"whatwg-encoding\");\n\nvar _require = require(\"whatwg-url\"),\n    parseURL = _require.parseURL,\n    serializeURL = _require.serializeURL;\n\nvar sniffHTMLEncoding = require(\"html-encoding-sniffer\");\n\nvar window = require(\"../../browser/Window\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require2 = require(\"../window/navigation\"),\n    evaluateJavaScriptURL = _require2.evaluateJavaScriptURL;\n\nvar _require3 = require(\"../../browser/parser\"),\n    parseIntoDocument = _require3.parseIntoDocument;\n\nvar _require4 = require(\"../helpers/document-base-url\"),\n    documentBaseURL = _require4.documentBaseURL;\n\nvar _require5 = require(\"../helpers/events\"),\n    fireAnEvent = _require5.fireAnEvent;\n\nvar _require6 = require(\"../attributes\"),\n    getAttributeValue = _require6.getAttributeValue;\n\nvar idlUtils = require(\"../generated/utils\");\n\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n    return;\n  }\n\n  var dummyPromise = Promise.resolve();\n\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n\n  document._queue.push(dummyPromise, onLoad);\n}\n\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  var resourceLoader = document._resourceLoader;\n  var request;\n\n  function onFrameLoaded(data) {\n    var sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n\n    if (request.response) {\n      var contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n\n    var encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n    var html = whatwgEncoding.decode(data, contentDoc._encoding);\n\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      var DOMException = contentDoc._globalObject.DOMException;\n\n      if (error.constructor.name === \"DOMException\" && error.code === DOMException.SYNTAX_ERR && contentDoc._parsingMode === \"xml\") {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        var element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n\n    contentDoc.close();\n    return new Promise(function (resolve, reject) {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\n\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n\n  return Object.keys(frame._eventListeners).length === 0;\n}\n\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n\n  var parentDoc = frame._ownerDocument; // https://html.spec.whatwg.org/#process-the-iframe-attributes\n\n  var url;\n  var srcAttribute = getAttributeValue(frame, \"src\");\n\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, {\n      baseURL: documentBaseURL(parentDoc) || undefined\n    }) || parseURL(\"about:blank\");\n  }\n\n  var serializedURL = serializeURL(url);\n  var wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" || serializedURL === \"about:blank\" ? parentDoc.URL : serializedURL,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n  var contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  var parent = parentDoc._defaultView;\n  var contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n\n  var noQueue = canDispatchEvents(frame, attaching); // Handle about:blank with a simulated load of an empty document.\n\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", function () {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    var result = evaluateJavaScriptURL(contentWindow, url);\n\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", function () {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\n\nfunction refreshAccessors(document) {\n  var _defaultView = document._defaultView;\n\n  if (!_defaultView) {\n    return;\n  }\n\n  var frames = document.querySelectorAll(\"iframe,frame\"); // delete accessors for all frames\n\n  for (var i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, function (frame, i) {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        return frame.contentWindow;\n      }\n    });\n  });\n}\n\nvar HTMLFrameElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLFrameElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLFrameElementImpl);\n\n  function HTMLFrameElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLFrameElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._contentDocument = null;\n    return _this;\n  }\n\n  _createClass(HTMLFrameElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldVal) {\n      _get(_getPrototypeOf(HTMLFrameElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldVal);\n\n      if (name === \"src\") {\n        // iframe should never load in a document without a Window\n        // (e.g. implementation.createHTMLDocument)\n        if (this._attached && this._ownerDocument._defaultView) {\n          loadFrame(this);\n        }\n      }\n    }\n  }, {\n    key: \"_detach\",\n    value: function _detach() {\n      _get(_getPrototypeOf(HTMLFrameElementImpl.prototype), \"_detach\", this).call(this);\n\n      if (this.contentWindow) {\n        this.contentWindow.close();\n      }\n\n      refreshAccessors(this._ownerDocument);\n    }\n  }, {\n    key: \"_attach\",\n    value: function _attach() {\n      _get(_getPrototypeOf(HTMLFrameElementImpl.prototype), \"_attach\", this).call(this);\n\n      if (this._ownerDocument._defaultView) {\n        loadFrame(this, true);\n      }\n\n      refreshAccessors(this._ownerDocument);\n    }\n  }, {\n    key: \"contentDocument\",\n    get: function get() {\n      return this._contentDocument;\n    }\n  }, {\n    key: \"contentWindow\",\n    get: function get() {\n      return this.contentDocument ? this.contentDocument._defaultView : null;\n    }\n  }]);\n\n  return HTMLFrameElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement-impl.js"],"names":["MIMEType","require","whatwgEncoding","parseURL","serializeURL","sniffHTMLEncoding","window","HTMLElementImpl","implementation","evaluateJavaScriptURL","parseIntoDocument","documentBaseURL","fireAnEvent","getAttributeValue","idlUtils","fireLoadEvent","document","frame","attaching","dummyPromise","Promise","resolve","onLoad","_queue","push","fetchFrame","serializedURL","contentDoc","resourceLoader","_resourceLoader","request","onFrameLoaded","data","sniffOptions","defaultEncoding","_encoding","response","contentType","parse","headers","transportLayerEncodingLabel","parameters","get","isXML","_parsingMode","essence","encoding","html","decode","error","DOMException","_globalObject","constructor","name","code","SYNTAX_ERR","element","createElementNS","textContent","message","childNodes","length","removeChild","lastChild","appendChild","close","reject","addEventListener","fetch","canDispatchEvents","Object","keys","_eventListeners","loadFrame","_contentDocument","_defaultView","parentDoc","_ownerDocument","url","srcAttribute","baseURL","undefined","wnd","createWindow","parsingMode","scheme","URL","referrer","cookieJar","_cookieJar","pool","_pool","runScripts","_runScripts","commonForOrigin","_commonForOrigin","pretendToBeVisual","_pretendToBeVisual","implForWrapper","_document","parent","contentWindow","_parent","_top","top","_frameElement","_virtualConsole","_origin","_currentOriginData","windowsInSameOrigin","noQueue","result","body","refreshAccessors","frames","querySelectorAll","i","_length","Array","prototype","forEach","call","defineProperty","configurable","enumerable","HTMLFrameElementImpl","globalObject","args","privateData","value","oldVal","_attached","contentDocument","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst { parseURL, serializeURL } = require(\"whatwg-url\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\n\nconst window = require(\"../../browser/Window\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { evaluateJavaScriptURL } = require(\"../window/navigation\");\nconst { parseIntoDocument } = require(\"../../browser/parser\");\nconst { documentBaseURL } = require(\"../helpers/document-base-url\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { getAttributeValue } = require(\"../attributes\");\nconst idlUtils = require(\"../generated/utils\");\n\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n\n    return;\n  }\n\n  const dummyPromise = Promise.resolve();\n\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n\n  document._queue.push(dummyPromise, onLoad);\n}\n\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  const resourceLoader = document._resourceLoader;\n\n  let request;\n\n  function onFrameLoaded(data) {\n    const sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n\n    if (request.response) {\n      const contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n\n    const encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n\n    const html = whatwgEncoding.decode(data, contentDoc._encoding);\n\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      const { DOMException } = contentDoc._globalObject;\n\n      if (\n        error.constructor.name === \"DOMException\" &&\n        error.code === DOMException.SYNTAX_ERR &&\n        contentDoc._parsingMode === \"xml\"\n      ) {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        const element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n\n    contentDoc.close();\n\n    return new Promise((resolve, reject) => {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\n\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n\n  return Object.keys(frame._eventListeners).length === 0;\n}\n\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n\n  const parentDoc = frame._ownerDocument;\n\n  // https://html.spec.whatwg.org/#process-the-iframe-attributes\n  let url;\n  const srcAttribute = getAttributeValue(frame, \"src\");\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, { baseURL: documentBaseURL(parentDoc) || undefined }) || parseURL(\"about:blank\");\n  }\n  const serializedURL = serializeURL(url);\n\n  const wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" || serializedURL === \"about:blank\" ? parentDoc.URL : serializedURL,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n\n  const contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  const parent = parentDoc._defaultView;\n  const contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n\n  const noQueue = canDispatchEvents(frame, attaching);\n\n  // Handle about:blank with a simulated load of an empty document.\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    const result = evaluateJavaScriptURL(contentWindow, url);\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\n\nfunction refreshAccessors(document) {\n  const { _defaultView } = document;\n\n  if (!_defaultView) {\n    return;\n  }\n\n  const frames = document.querySelectorAll(\"iframe,frame\");\n\n  // delete accessors for all frames\n  for (let i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, (frame, i) => {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return frame.contentWindow;\n      }\n    });\n  });\n}\n\nclass HTMLFrameElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._contentDocument = null;\n  }\n  _attrModified(name, value, oldVal) {\n    super._attrModified(name, value, oldVal);\n    if (name === \"src\") {\n      // iframe should never load in a document without a Window\n      // (e.g. implementation.createHTMLDocument)\n      if (this._attached && this._ownerDocument._defaultView) {\n        loadFrame(this);\n      }\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (this.contentWindow) {\n      this.contentWindow.close();\n    }\n\n    refreshAccessors(this._ownerDocument);\n  }\n\n  _attach() {\n    super._attach();\n\n    if (this._ownerDocument._defaultView) {\n      loadFrame(this, true);\n    }\n    refreshAccessors(this._ownerDocument);\n  }\n\n  get contentDocument() {\n    return this._contentDocument;\n  }\n\n  get contentWindow() {\n    return this.contentDocument ? this.contentDocument._defaultView : null;\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}