{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar Node = require(\"./Node.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\nvar interfaceName = \"TreeWalker\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'TreeWalker'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"TreeWalker\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor TreeWalker is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var TreeWalker = /*#__PURE__*/function () {\n    function TreeWalker() {\n      _classCallCheck(this, TreeWalker);\n\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    _createClass(TreeWalker, [{\n      key: \"parentNode\",\n      value: function parentNode() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].parentNode());\n      }\n    }, {\n      key: \"firstChild\",\n      value: function firstChild() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].firstChild());\n      }\n    }, {\n      key: \"lastChild\",\n      value: function lastChild() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].lastChild());\n      }\n    }, {\n      key: \"previousSibling\",\n      value: function previousSibling() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].previousSibling());\n      }\n    }, {\n      key: \"nextSibling\",\n      value: function nextSibling() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].nextSibling());\n      }\n    }, {\n      key: \"previousNode\",\n      value: function previousNode() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].previousNode());\n      }\n    }, {\n      key: \"nextNode\",\n      value: function nextNode() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].nextNode());\n      }\n    }, {\n      key: \"root\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.getSameObject(this, \"root\", function () {\n          return utils.tryWrapperForImpl(esValue[implSymbol][\"root\"]);\n        });\n      }\n    }, {\n      key: \"whatToShow\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return esValue[implSymbol][\"whatToShow\"];\n      }\n    }, {\n      key: \"filter\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"filter\"]);\n      }\n    }, {\n      key: \"currentNode\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"currentNode\"]);\n      },\n      set: function set(V) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        V = Node.convert(V, {\n          context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\"\n        });\n        esValue[implSymbol][\"currentNode\"] = V;\n      }\n    }]);\n\n    return TreeWalker;\n  }();\n\n  Object.defineProperties(TreeWalker.prototype, _defineProperty({\n    parentNode: {\n      enumerable: true\n    },\n    firstChild: {\n      enumerable: true\n    },\n    lastChild: {\n      enumerable: true\n    },\n    previousSibling: {\n      enumerable: true\n    },\n    nextSibling: {\n      enumerable: true\n    },\n    previousNode: {\n      enumerable: true\n    },\n    nextNode: {\n      enumerable: true\n    },\n    root: {\n      enumerable: true\n    },\n    whatToShow: {\n      enumerable: true\n    },\n    filter: {\n      enumerable: true\n    },\n    currentNode: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"TreeWalker\",\n    configurable: true\n  }));\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = TreeWalker;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: TreeWalker\n  });\n};\n\nvar Impl = require(\"../traversal/TreeWalker-impl.js\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/generated/TreeWalker.js"],"names":["conversions","require","utils","Node","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","TreeWalker","esValue","tryWrapperForImpl","parentNode","firstChild","lastChild","previousSibling","nextSibling","previousNode","nextNode","getSameObject","V","defineProperties","enumerable","root","whatToShow","filter","currentNode","Symbol","toStringTag","writable"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"TreeWalker\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'TreeWalker'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"TreeWalker\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor TreeWalker is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  class TreeWalker {\n    constructor() {\n      throw new TypeError(\"Illegal constructor\");\n    }\n\n    parentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].parentNode());\n    }\n\n    firstChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].firstChild());\n    }\n\n    lastChild() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].lastChild());\n    }\n\n    previousSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousSibling());\n    }\n\n    nextSibling() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextSibling());\n    }\n\n    previousNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].previousNode());\n    }\n\n    nextNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].nextNode());\n    }\n\n    get root() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.getSameObject(this, \"root\", () => {\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"root\"]);\n      });\n    }\n\n    get whatToShow() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol][\"whatToShow\"];\n    }\n\n    get filter() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"filter\"]);\n    }\n\n    get currentNode() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"currentNode\"]);\n    }\n\n    set currentNode(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      V = Node.convert(V, { context: \"Failed to set the 'currentNode' property on 'TreeWalker': The provided value\" });\n\n      esValue[implSymbol][\"currentNode\"] = V;\n    }\n  }\n  Object.defineProperties(TreeWalker.prototype, {\n    parentNode: { enumerable: true },\n    firstChild: { enumerable: true },\n    lastChild: { enumerable: true },\n    previousSibling: { enumerable: true },\n    nextSibling: { enumerable: true },\n    previousNode: { enumerable: true },\n    nextNode: { enumerable: true },\n    root: { enumerable: true },\n    whatToShow: { enumerable: true },\n    filter: { enumerable: true },\n    currentNode: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"TreeWalker\", configurable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = TreeWalker;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: TreeWalker\n  });\n};\n\nconst Impl = require(\"../traversal/TreeWalker-impl.js\");\n"]},"metadata":{},"sourceType":"script"}