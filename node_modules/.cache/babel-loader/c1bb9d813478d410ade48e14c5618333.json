{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nexports.convert = function convert(value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (!utils.isObject(value)) {\n    throw new TypeError(\"\".concat(context, \" is not an object.\"));\n  }\n\n  function callTheUserObjectsOperation(event) {\n    var thisArg = utils.tryWrapperForImpl(this);\n    var O = value;\n    var X = O;\n\n    if (typeof O !== \"function\") {\n      X = O[\"handleEvent\"];\n\n      if (typeof X !== \"function\") {\n        throw new TypeError(\"\".concat(context, \" does not correctly implement EventListener.\"));\n      }\n\n      thisArg = O;\n    }\n\n    event = utils.tryWrapperForImpl(event);\n    var callResult = Reflect.apply(X, thisArg, [event]);\n  }\n\n  callTheUserObjectsOperation[utils.wrapperSymbol] = value;\n  callTheUserObjectsOperation.objectReference = value;\n  return callTheUserObjectsOperation;\n};\n\nexports.install = function (globalObject, globalNames) {};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js"],"names":["conversions","require","utils","exports","convert","value","context","isObject","TypeError","callTheUserObjectsOperation","event","thisArg","tryWrapperForImpl","O","X","callResult","Reflect","apply","wrapperSymbol","objectReference","install","globalObject","globalNames"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEAE,OAAO,CAACC,OAAR,GAAkB,SAASA,OAAT,CAAiBC,KAAjB,EAAiE;AAAA,iFAAJ,EAAI;AAAA,0BAAvCC,OAAuC;AAAA,MAAvCA,OAAuC,6BAA7B,oBAA6B;;AACjF,MAAI,CAACJ,KAAK,CAACK,QAAN,CAAeF,KAAf,CAAL,EAA4B;AAC1B,UAAM,IAAIG,SAAJ,WAAiBF,OAAjB,wBAAN;AACD;;AAED,WAASG,2BAAT,CAAqCC,KAArC,EAA4C;AAC1C,QAAIC,OAAO,GAAGT,KAAK,CAACU,iBAAN,CAAwB,IAAxB,CAAd;AACA,QAAIC,CAAC,GAAGR,KAAR;AACA,QAAIS,CAAC,GAAGD,CAAR;;AAEA,QAAI,OAAOA,CAAP,KAAa,UAAjB,EAA6B;AAC3BC,MAAAA,CAAC,GAAGD,CAAC,CAAC,aAAD,CAAL;;AACA,UAAI,OAAOC,CAAP,KAAa,UAAjB,EAA6B;AAC3B,cAAM,IAAIN,SAAJ,WAAiBF,OAAjB,kDAAN;AACD;;AACDK,MAAAA,OAAO,GAAGE,CAAV;AACD;;AAEDH,IAAAA,KAAK,GAAGR,KAAK,CAACU,iBAAN,CAAwBF,KAAxB,CAAR;AAEA,QAAIK,UAAU,GAAGC,OAAO,CAACC,KAAR,CAAcH,CAAd,EAAiBH,OAAjB,EAA0B,CAACD,KAAD,CAA1B,CAAjB;AACD;;AAEDD,EAAAA,2BAA2B,CAACP,KAAK,CAACgB,aAAP,CAA3B,GAAmDb,KAAnD;AACAI,EAAAA,2BAA2B,CAACU,eAA5B,GAA8Cd,KAA9C;AAEA,SAAOI,2BAAP;AACD,CA3BD;;AA6BAN,OAAO,CAACiB,OAAR,GAAkB,UAACC,YAAD,EAAeC,WAAf,EAA+B,CAAE,CAAnD","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = function convert(value, { context = \"The provided value\" } = {}) {\n  if (!utils.isObject(value)) {\n    throw new TypeError(`${context} is not an object.`);\n  }\n\n  function callTheUserObjectsOperation(event) {\n    let thisArg = utils.tryWrapperForImpl(this);\n    let O = value;\n    let X = O;\n\n    if (typeof O !== \"function\") {\n      X = O[\"handleEvent\"];\n      if (typeof X !== \"function\") {\n        throw new TypeError(`${context} does not correctly implement EventListener.`);\n      }\n      thisArg = O;\n    }\n\n    event = utils.tryWrapperForImpl(event);\n\n    let callResult = Reflect.apply(X, thisArg, [event]);\n  }\n\n  callTheUserObjectsOperation[utils.wrapperSymbol] = value;\n  callTheUserObjectsOperation.objectReference = value;\n\n  return callTheUserObjectsOperation;\n};\n\nexports.install = (globalObject, globalNames) => {};\n"]},"metadata":{},"sourceType":"script"}