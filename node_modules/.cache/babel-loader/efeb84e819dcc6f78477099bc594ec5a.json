{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\MOHAM\\\\Desktop\\\\TeamFClient\\\\src\\\\App.js\";\nimport './App.css';\nimport { BrowserRouter, Route, withRouter, Link, useHistory, Switch } from 'react-router-dom';\nimport PlayerCard from './Components/PlayerCard';\nimport { browserHistory } from 'react-router';\nimport logo from './images/Logo.png';\nimport Login from './Auth/Login';\nimport Signup from './Auth/Signup';\nimport { useState, useEffect } from 'react';\nimport MyPlayer from './Components/MyPlayer';\nimport axios from 'axios';\nimport { axiosWithAuth } from './Components/axiosWithAuth';\nimport Home from './Components/Home';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './PrivateRoute';\nimport { getId } from './actions/postActions';\nimport Nav from './Nav';\nimport Animation from './Components/Animation';\nimport Edit from './Edit';\nimport NotFound from './NotFound';\nimport BadgeGrinders from './Components/BadgeGrinders';\nimport ForgotPassword from './Components/ForgotPassword';\nimport Chat from './Components/Chat/Chat';\nimport Join from './Components/Join/Join';\nimport Reset from './Components/Reset';\n\nconst App = props => {\n  // const token = window.localStorage.getItem('token')\n  // const [user, setUser] = useState([])\n  // useEffect(() => {\n  //     props.getId()\n  //     // console.log(props.One)\n  // }, [])\n  // const Cred = {\n  //     Status: 'online',\n  // }\n  // const userId = props.One._id\n  // console.log(userId)\n  // useEffect(() => {\n  //     if (token !== null && token !== '') {\n  //         axiosWithAuth()\n  //             .patch(`/player/{ _id: ${props.One._id}, __v: 0 }`, Cred)\n  //             .then((res) => {})\n  //             .catch((err) => {})\n  //     }\n  // })\n  // let history = useHistory()\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Join\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/chat\",\n          component: Chat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  One: state.getId.UserId\n});\n\nexport default connect(mapStateToProps, {\n  getId\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/TeamFClient/src/App.js"],"names":["BrowserRouter","Route","withRouter","Link","useHistory","Switch","PlayerCard","browserHistory","logo","Login","Signup","useState","useEffect","MyPlayer","axios","axiosWithAuth","Home","Provider","createStore","applyMiddleware","connect","PrivateRoute","getId","Nav","Animation","Edit","NotFound","BadgeGrinders","ForgotPassword","Chat","Join","Reset","App","props","mapStateToProps","state","One","UserId"],"mappings":";;AAAA,OAAO,WAAP;AACA,SACIA,aADJ,EAEIC,KAFJ,EAGIC,UAHJ,EAIIC,IAJJ,EAKIC,UALJ,EAMIC,MANJ,QAOO,kBAPP;AAQA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,aAAD;AAAA,6BAEI,QAAC,MAAD;AAAA,gCAiBI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAkBI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAxDD;;KAAMG,G;;AA0DN,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,GAAG,EAAED,KAAK,CAACb,KAAN,CAAYe;AADe,CAAZ,CAAxB;;AAIA,eAAejB,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAoCU,GAApC,CAAf","sourcesContent":["import './App.css'\r\nimport {\r\n    BrowserRouter,\r\n    Route,\r\n    withRouter,\r\n    Link,\r\n    useHistory,\r\n    Switch,\r\n} from 'react-router-dom'\r\nimport PlayerCard from './Components/PlayerCard'\r\nimport { browserHistory } from 'react-router'\r\nimport logo from './images/Logo.png'\r\nimport Login from './Auth/Login'\r\nimport Signup from './Auth/Signup'\r\nimport { useState, useEffect } from 'react'\r\nimport MyPlayer from './Components/MyPlayer'\r\nimport axios from 'axios'\r\nimport { axiosWithAuth } from './Components/axiosWithAuth'\r\nimport Home from './Components/Home'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport { getId } from './actions/postActions'\r\nimport Nav from './Nav'\r\nimport Animation from './Components/Animation'\r\nimport Edit from './Edit'\r\nimport NotFound from './NotFound'\r\nimport BadgeGrinders from './Components/BadgeGrinders'\r\nimport ForgotPassword from './Components/ForgotPassword'\r\nimport Chat from './Components/Chat/Chat'\r\nimport Join from './Components/Join/Join'\r\n\r\nimport Reset from './Components/Reset'\r\nconst App = (props) => {\r\n    // const token = window.localStorage.getItem('token')\r\n    // const [user, setUser] = useState([])\r\n    // useEffect(() => {\r\n    //     props.getId()\r\n    //     // console.log(props.One)\r\n    // }, [])\r\n\r\n    // const Cred = {\r\n    //     Status: 'online',\r\n    // }\r\n    // const userId = props.One._id\r\n    // console.log(userId)\r\n\r\n    // useEffect(() => {\r\n    //     if (token !== null && token !== '') {\r\n    //         axiosWithAuth()\r\n    //             .patch(`/player/{ _id: ${props.One._id}, __v: 0 }`, Cred)\r\n    //             .then((res) => {})\r\n    //             .catch((err) => {})\r\n    //     }\r\n    // })\r\n\r\n    // let history = useHistory()\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                {/* <Nav /> */}\r\n                <Switch>\r\n                    {/* <Route exact path=\"/\" exact component={Home} />\r\n                    <Route path=\"/Login\" exact component={Login} />\r\n                    <Route exact path=\"/Signup\" exact component={Signup} />\r\n                    <PrivateRoute\r\n                        path=\"/myPlayer/:id\"\r\n                        exact\r\n                        component={MyPlayer}\r\n                    />\r\n                    <PrivateRoute path=\"/edit/:id\" exact component={Edit} />\r\n                    <PrivateRoute path=\"/find\" exact component={PlayerCard} />\r\n                    <PrivateRoute\r\n                        path=\"/badge\"\r\n                        exact\r\n                        component={BadgeGrinders}\r\n                    /> */}\r\n                    {/* <Route path=\"/forgot\" exact component={ForgotPassword} /> */}\r\n                    <Route path=\"/\" exact component={Join} />\r\n                    <Route path=\"/chat\" component={Chat} />\r\n\r\n                    {/* <Route path=\"/Reset/:id/:token\" exact component={Reset} />\r\n\r\n                    <Route component={NotFound} /> */}\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    One: state.getId.UserId,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getId })(App)\r\n"]},"metadata":{},"sourceType":"module"}