{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar vm = require(\"vm\");\n\nvar whatwgEncoding = require(\"whatwg-encoding\");\n\nvar MIMEType = require(\"whatwg-mimetype\");\n\nvar _require = require(\"whatwg-url\"),\n    serializeURL = _require.serializeURL;\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar reportException = require(\"../helpers/runtime-script-errors\");\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree,\n    cloningSteps = _require2.cloningSteps;\n\nvar _require3 = require(\"../helpers/strings\"),\n    asciiLowercase = _require3.asciiLowercase;\n\nvar _require4 = require(\"../helpers/text\"),\n    childTextContent = _require4.childTextContent;\n\nvar _require5 = require(\"../helpers/events\"),\n    fireAnEvent = _require5.fireAnEvent;\n\nvar _require6 = require(\"../helpers/document-base-url\"),\n    parseURLToResultingURLRecord = _require6.parseURLToResultingURLRecord;\n\nvar nodeTypes = require(\"../node-type\");\n\nvar jsMIMETypes = new Set([\"application/ecmascript\", \"application/javascript\", \"application/x-ecmascript\", \"application/x-javascript\", \"text/ecmascript\", \"text/javascript\", \"text/javascript1.0\", \"text/javascript1.1\", \"text/javascript1.2\", \"text/javascript1.3\", \"text/javascript1.4\", \"text/javascript1.5\", \"text/jscript\", \"text/livescript\", \"text/x-ecmascript\", \"text/x-javascript\"]);\n\nvar HTMLScriptElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLScriptElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLScriptElementImpl);\n\n  function HTMLScriptElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLScriptElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this._alreadyStarted = false;\n    _this._parserInserted = false; // set by the parser\n\n    return _this;\n  }\n\n  _createClass(HTMLScriptElementImpl, [{\n    key: \"_attach\",\n    value: function _attach() {\n      _get(_getPrototypeOf(HTMLScriptElementImpl.prototype), \"_attach\", this).call(this); // In our current terribly-hacky document.write() implementation, we parse in a div them move elements into the main\n      // document. Thus _eval() will bail early when it gets in _poppedOffStackOfOpenElements(), since we're not attached\n      // then. Instead, we'll let it eval here.\n\n\n      if (!this._parserInserted || this._isMovingDueToDocumentWrite) {\n        this._eval();\n      }\n    }\n  }, {\n    key: \"_canRunScript\",\n    value: function _canRunScript() {\n      var document = this._ownerDocument; // Equivalent to the spec's \"scripting is disabled\" check.\n\n      if (!document._defaultView || document._defaultView._runScripts !== \"dangerously\" || document._scriptingDisabled) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_fetchExternalScript\",\n    value: function _fetchExternalScript() {\n      var _this2 = this;\n\n      var document = this._ownerDocument;\n      var resourceLoader = document._resourceLoader;\n\n      var defaultEncoding = whatwgEncoding.labelToName(this.getAttributeNS(null, \"charset\")) || document._encoding;\n\n      var request;\n\n      if (!this._canRunScript()) {\n        return;\n      }\n\n      var src = this.getAttributeNS(null, \"src\");\n      var url = parseURLToResultingURLRecord(src, this._ownerDocument);\n\n      if (url === null) {\n        return;\n      }\n\n      var urlString = serializeURL(url);\n\n      var onLoadExternalScript = function onLoadExternalScript(data) {\n        var _request = request,\n            response = _request.response;\n        var contentType;\n\n        if (response && response.statusCode !== undefined && response.statusCode >= 400) {\n          throw new Error(\"Status code: \" + response.statusCode);\n        }\n\n        if (response) {\n          contentType = MIMEType.parse(response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n        }\n\n        var encoding = whatwgEncoding.getBOMEncoding(data) || contentType && whatwgEncoding.labelToName(contentType.parameters.get(\"charset\")) || defaultEncoding;\n        var script = whatwgEncoding.decode(data, encoding);\n\n        _this2._innerEval(script, urlString);\n      };\n\n      request = resourceLoader.fetch(urlString, {\n        element: this,\n        onLoad: onLoadExternalScript\n      });\n    }\n  }, {\n    key: \"_fetchInternalScript\",\n    value: function _fetchInternalScript() {\n      var _this3 = this;\n\n      var document = this._ownerDocument;\n\n      if (!this._canRunScript()) {\n        return;\n      }\n\n      document._queue.push(null, function () {\n        _this3._innerEval(_this3.text, document.URL);\n\n        fireAnEvent(\"load\", _this3);\n      }, null, false, this);\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLScriptElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n\n      if (this._attached && !this._startedEval && name === \"src\" && oldValue === null && value !== null) {\n        this._fetchExternalScript();\n      }\n    }\n  }, {\n    key: \"_poppedOffStackOfOpenElements\",\n    value: function _poppedOffStackOfOpenElements() {\n      // This seems to roughly correspond to\n      // https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-incdata:prepare-a-script, although we certainly\n      // don't implement the full semantics.\n      this._eval();\n    } // Vaguely similar to https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script, but we have a long way\n    // to go before it's aligned.\n\n  }, {\n    key: \"_eval\",\n    value: function _eval() {\n      if (this._alreadyStarted) {\n        return;\n      } // TODO: this text check doesn't seem completely the same as the spec, which e.g. will try to execute scripts with\n      // child element nodes. Spec bug? https://github.com/whatwg/html/issues/3419\n\n\n      if (!this.hasAttributeNS(null, \"src\") && this.text.length === 0) {\n        return;\n      }\n\n      if (!this._attached) {\n        return;\n      }\n\n      var scriptBlocksTypeString = this._getTypeString();\n\n      var type = getType(scriptBlocksTypeString);\n\n      if (type !== \"classic\") {\n        // TODO: implement modules, and then change the check to `type === null`.\n        return;\n      }\n\n      this._alreadyStarted = true; // TODO: implement nomodule here, **but only after we support modules**.\n      // At this point we completely depart from the spec.\n\n      if (this.hasAttributeNS(null, \"src\")) {\n        this._fetchExternalScript();\n      } else {\n        this._fetchInternalScript();\n      }\n    }\n  }, {\n    key: \"_innerEval\",\n    value: function _innerEval(text, filename) {\n      this._ownerDocument._writeAfterElement = this;\n      processJavaScript(this, text, filename);\n      delete this._ownerDocument._writeAfterElement;\n    }\n  }, {\n    key: \"_getTypeString\",\n    value: function _getTypeString() {\n      var typeAttr = this.getAttributeNS(null, \"type\");\n      var langAttr = this.getAttributeNS(null, \"language\");\n\n      if (typeAttr === \"\") {\n        return \"text/javascript\";\n      }\n\n      if (typeAttr === null && langAttr === \"\") {\n        return \"text/javascript\";\n      }\n\n      if (typeAttr === null && langAttr === null) {\n        return \"text/javascript\";\n      }\n\n      if (typeAttr !== null) {\n        return typeAttr.trim();\n      }\n\n      if (langAttr !== null) {\n        return \"text/\" + langAttr;\n      }\n\n      return null;\n    }\n  }, {\n    key: cloningSteps,\n    // https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model\n    value: function value(copy, node) {\n      copy._alreadyStarted = node._alreadyStarted;\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return childTextContent(this);\n    },\n    set: function set(text) {\n      this.textContent = text;\n    }\n  }]);\n\n  return HTMLScriptElementImpl;\n}(HTMLElementImpl);\n\nfunction processJavaScript(element, code, filename) {\n  var document = element.ownerDocument;\n  var window = document && document._global;\n\n  if (window) {\n    document._currentScript = element;\n    var lineOffset = 0;\n\n    if (!element.hasAttributeNS(null, \"src\")) {\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.childrenIterator(element)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n\n          if (child.nodeType === nodeTypes.TEXT_NODE) {\n            if (child.sourceCodeLocation) {\n              lineOffset = child.sourceCodeLocation.startLine - 1;\n            }\n\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    try {\n      vm.runInContext(code, window, {\n        filename: filename,\n        lineOffset: lineOffset,\n        displayErrors: false\n      });\n    } catch (e) {\n      reportException(window, e, filename);\n    } finally {\n      document._currentScript = null;\n    }\n  }\n}\n\nfunction getType(typeString) {\n  var lowercased = asciiLowercase(typeString); // Cannot use whatwg-mimetype parsing because that strips whitespace. The spec demands a strict string comparison.\n  // That is, the type=\"\" attribute is not really related to MIME types at all.\n\n  if (jsMIMETypes.has(lowercased)) {\n    return \"classic\";\n  }\n\n  if (lowercased === \"module\") {\n    return \"module\";\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  implementation: HTMLScriptElementImpl\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLScriptElement-impl.js"],"names":["vm","require","whatwgEncoding","MIMEType","serializeURL","HTMLElementImpl","implementation","reportException","domSymbolTree","cloningSteps","asciiLowercase","childTextContent","fireAnEvent","parseURLToResultingURLRecord","nodeTypes","jsMIMETypes","Set","HTMLScriptElementImpl","globalObject","args","privateData","_alreadyStarted","_parserInserted","_isMovingDueToDocumentWrite","_eval","document","_ownerDocument","_defaultView","_runScripts","_scriptingDisabled","resourceLoader","_resourceLoader","defaultEncoding","labelToName","getAttributeNS","_encoding","request","_canRunScript","src","url","urlString","onLoadExternalScript","data","response","contentType","statusCode","undefined","Error","parse","headers","encoding","getBOMEncoding","parameters","get","script","decode","_innerEval","fetch","element","onLoad","_queue","push","text","URL","name","value","oldValue","_attached","_startedEval","_fetchExternalScript","hasAttributeNS","length","scriptBlocksTypeString","_getTypeString","type","getType","_fetchInternalScript","filename","_writeAfterElement","processJavaScript","typeAttr","langAttr","trim","copy","node","textContent","code","ownerDocument","window","_global","_currentScript","lineOffset","childrenIterator","child","nodeType","TEXT_NODE","sourceCodeLocation","startLine","runInContext","displayErrors","e","typeString","lowercased","has","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst vm = require(\"vm\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst MIMEType = require(\"whatwg-mimetype\");\nconst { serializeURL } = require(\"whatwg-url\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst reportException = require(\"../helpers/runtime-script-errors\");\nconst { domSymbolTree, cloningSteps } = require(\"../helpers/internal-constants\");\nconst { asciiLowercase } = require(\"../helpers/strings\");\nconst { childTextContent } = require(\"../helpers/text\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\nconst nodeTypes = require(\"../node-type\");\n\nconst jsMIMETypes = new Set([\n  \"application/ecmascript\",\n  \"application/javascript\",\n  \"application/x-ecmascript\",\n  \"application/x-javascript\",\n  \"text/ecmascript\",\n  \"text/javascript\",\n  \"text/javascript1.0\",\n  \"text/javascript1.1\",\n  \"text/javascript1.2\",\n  \"text/javascript1.3\",\n  \"text/javascript1.4\",\n  \"text/javascript1.5\",\n  \"text/jscript\",\n  \"text/livescript\",\n  \"text/x-ecmascript\",\n  \"text/x-javascript\"\n]);\n\nclass HTMLScriptElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._alreadyStarted = false;\n    this._parserInserted = false; // set by the parser\n  }\n\n  _attach() {\n    super._attach();\n\n\n    // In our current terribly-hacky document.write() implementation, we parse in a div them move elements into the main\n    // document. Thus _eval() will bail early when it gets in _poppedOffStackOfOpenElements(), since we're not attached\n    // then. Instead, we'll let it eval here.\n    if (!this._parserInserted || this._isMovingDueToDocumentWrite) {\n      this._eval();\n    }\n  }\n\n  _canRunScript() {\n    const document = this._ownerDocument;\n    // Equivalent to the spec's \"scripting is disabled\" check.\n    if (!document._defaultView || document._defaultView._runScripts !== \"dangerously\" || document._scriptingDisabled) {\n      return false;\n    }\n\n    return true;\n  }\n\n  _fetchExternalScript() {\n    const document = this._ownerDocument;\n    const resourceLoader = document._resourceLoader;\n    const defaultEncoding = whatwgEncoding.labelToName(this.getAttributeNS(null, \"charset\")) || document._encoding;\n    let request;\n\n    if (!this._canRunScript()) {\n      return;\n    }\n\n    const src = this.getAttributeNS(null, \"src\");\n    const url = parseURLToResultingURLRecord(src, this._ownerDocument);\n    if (url === null) {\n      return;\n    }\n    const urlString = serializeURL(url);\n\n    const onLoadExternalScript = data => {\n      const { response } = request;\n      let contentType;\n\n      if (response && response.statusCode !== undefined && response.statusCode >= 400) {\n        throw new Error(\"Status code: \" + response.statusCode);\n      }\n\n      if (response) {\n        contentType = MIMEType.parse(response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      }\n\n      const encoding = whatwgEncoding.getBOMEncoding(data) ||\n        (contentType && whatwgEncoding.labelToName(contentType.parameters.get(\"charset\"))) ||\n        defaultEncoding;\n      const script = whatwgEncoding.decode(data, encoding);\n\n      this._innerEval(script, urlString);\n    };\n\n    request = resourceLoader.fetch(urlString, {\n      element: this,\n      onLoad: onLoadExternalScript\n    });\n  }\n\n  _fetchInternalScript() {\n    const document = this._ownerDocument;\n\n    if (!this._canRunScript()) {\n      return;\n    }\n\n    document._queue.push(null, () => {\n      this._innerEval(this.text, document.URL);\n\n      fireAnEvent(\"load\", this);\n    }, null, false, this);\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (this._attached && !this._startedEval && name === \"src\" && oldValue === null && value !== null) {\n      this._fetchExternalScript();\n    }\n  }\n\n  _poppedOffStackOfOpenElements() {\n    // This seems to roughly correspond to\n    // https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-incdata:prepare-a-script, although we certainly\n    // don't implement the full semantics.\n    this._eval();\n  }\n\n  // Vaguely similar to https://html.spec.whatwg.org/multipage/scripting.html#prepare-a-script, but we have a long way\n  // to go before it's aligned.\n  _eval() {\n    if (this._alreadyStarted) {\n      return;\n    }\n\n    // TODO: this text check doesn't seem completely the same as the spec, which e.g. will try to execute scripts with\n    // child element nodes. Spec bug? https://github.com/whatwg/html/issues/3419\n    if (!this.hasAttributeNS(null, \"src\") && this.text.length === 0) {\n      return;\n    }\n\n    if (!this._attached) {\n      return;\n    }\n\n    const scriptBlocksTypeString = this._getTypeString();\n    const type = getType(scriptBlocksTypeString);\n\n    if (type !== \"classic\") {\n      // TODO: implement modules, and then change the check to `type === null`.\n      return;\n    }\n\n    this._alreadyStarted = true;\n\n    // TODO: implement nomodule here, **but only after we support modules**.\n\n    // At this point we completely depart from the spec.\n\n    if (this.hasAttributeNS(null, \"src\")) {\n      this._fetchExternalScript();\n    } else {\n      this._fetchInternalScript();\n    }\n  }\n\n  _innerEval(text, filename) {\n    this._ownerDocument._writeAfterElement = this;\n    processJavaScript(this, text, filename);\n    delete this._ownerDocument._writeAfterElement;\n  }\n\n  _getTypeString() {\n    const typeAttr = this.getAttributeNS(null, \"type\");\n    const langAttr = this.getAttributeNS(null, \"language\");\n\n    if (typeAttr === \"\") {\n      return \"text/javascript\";\n    }\n\n    if (typeAttr === null && langAttr === \"\") {\n      return \"text/javascript\";\n    }\n\n    if (typeAttr === null && langAttr === null) {\n      return \"text/javascript\";\n    }\n\n    if (typeAttr !== null) {\n      return typeAttr.trim();\n    }\n\n    if (langAttr !== null) {\n      return \"text/\" + langAttr;\n    }\n\n    return null;\n  }\n\n  get text() {\n    return childTextContent(this);\n  }\n\n  set text(text) {\n    this.textContent = text;\n  }\n\n  // https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model\n  [cloningSteps](copy, node) {\n    copy._alreadyStarted = node._alreadyStarted;\n  }\n}\n\nfunction processJavaScript(element, code, filename) {\n  const document = element.ownerDocument;\n  const window = document && document._global;\n\n  if (window) {\n    document._currentScript = element;\n\n    let lineOffset = 0;\n    if (!element.hasAttributeNS(null, \"src\")) {\n      for (const child of domSymbolTree.childrenIterator(element)) {\n        if (child.nodeType === nodeTypes.TEXT_NODE) {\n          if (child.sourceCodeLocation) {\n            lineOffset = child.sourceCodeLocation.startLine - 1;\n          }\n          break;\n        }\n      }\n    }\n\n    try {\n      vm.runInContext(code, window, { filename, lineOffset, displayErrors: false });\n    } catch (e) {\n      reportException(window, e, filename);\n    } finally {\n      document._currentScript = null;\n    }\n  }\n}\n\nfunction getType(typeString) {\n  const lowercased = asciiLowercase(typeString);\n  // Cannot use whatwg-mimetype parsing because that strips whitespace. The spec demands a strict string comparison.\n  // That is, the type=\"\" attribute is not really related to MIME types at all.\n  if (jsMIMETypes.has(lowercased)) {\n    return \"classic\";\n  }\n  if (lowercased === \"module\") {\n    return \"module\";\n  }\n  return null;\n}\n\nmodule.exports = {\n  implementation: HTMLScriptElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}