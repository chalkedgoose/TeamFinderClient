{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar Node = require(\"./Node.js\");\n\nvar ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\n\nvar ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar AbstractRange = require(\"./AbstractRange.js\");\n\nvar interfaceName = \"Range\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (value) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new TypeError(\"\".concat(context, \" is not of type 'Range'.\"));\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  var ctor = globalObject[ctorRegistrySymbol][\"Range\"];\n\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Range is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  AbstractRange._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject) {\n  var wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  var _Object$definePropert;\n\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  if (globalObject.AbstractRange === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate Range before AbstractRange\");\n  }\n\n  var Range = /*#__PURE__*/function (_globalObject$Abstrac) {\n    _inherits(Range, _globalObject$Abstrac);\n\n    var _super = _createSuper(Range);\n\n    function Range() {\n      var _this;\n\n      _classCallCheck(this, Range);\n\n      return _possibleConstructorReturn(_this, exports.setup(Object.create((this instanceof Range ? this.constructor : void 0).prototype), globalObject, undefined));\n    }\n\n    _createClass(Range, [{\n      key: \"setStart\",\n      value: function setStart(node, offset) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'setStart' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setStart' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg = arguments[1];\n          _curArg = conversions[\"unsigned long\"](_curArg, {\n            context: \"Failed to execute 'setStart' on 'Range': parameter 2\"\n          });\n          args.push(_curArg);\n        }\n        return (_esValue$implSymbol = esValue[implSymbol]).setStart.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"setEnd\",\n      value: function setEnd(node, offset) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'setEnd' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setEnd' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n          _curArg2 = conversions[\"unsigned long\"](_curArg2, {\n            context: \"Failed to execute 'setEnd' on 'Range': parameter 2\"\n          });\n          args.push(_curArg2);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).setEnd.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"setStartBefore\",\n      value: function setStartBefore(node) {\n        var _esValue$implSymbol3;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setStartBefore' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setStartBefore' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol3 = esValue[implSymbol]).setStartBefore.apply(_esValue$implSymbol3, args);\n      }\n    }, {\n      key: \"setStartAfter\",\n      value: function setStartAfter(node) {\n        var _esValue$implSymbol4;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setStartAfter' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setStartAfter' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol4 = esValue[implSymbol]).setStartAfter.apply(_esValue$implSymbol4, args);\n      }\n    }, {\n      key: \"setEndBefore\",\n      value: function setEndBefore(node) {\n        var _esValue$implSymbol5;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setEndBefore' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setEndBefore' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol5 = esValue[implSymbol]).setEndBefore.apply(_esValue$implSymbol5, args);\n      }\n    }, {\n      key: \"setEndAfter\",\n      value: function setEndAfter(node) {\n        var _esValue$implSymbol6;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'setEndAfter' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'setEndAfter' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol6 = esValue[implSymbol]).setEndAfter.apply(_esValue$implSymbol6, args);\n      }\n    }, {\n      key: \"collapse\",\n      value: function collapse() {\n        var _esValue$implSymbol7;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n\n          if (curArg !== undefined) {\n            curArg = conversions[\"boolean\"](curArg, {\n              context: \"Failed to execute 'collapse' on 'Range': parameter 1\"\n            });\n          } else {\n            curArg = false;\n          }\n\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol7 = esValue[implSymbol]).collapse.apply(_esValue$implSymbol7, args);\n      }\n    }, {\n      key: \"selectNode\",\n      value: function selectNode(node) {\n        var _esValue$implSymbol8;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'selectNode' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'selectNode' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol8 = esValue[implSymbol]).selectNode.apply(_esValue$implSymbol8, args);\n      }\n    }, {\n      key: \"selectNodeContents\",\n      value: function selectNodeContents(node) {\n        var _esValue$implSymbol9;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'selectNodeContents' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'selectNodeContents' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol9 = esValue[implSymbol]).selectNodeContents.apply(_esValue$implSymbol9, args);\n      }\n    }, {\n      key: \"compareBoundaryPoints\",\n      value: function compareBoundaryPoints(how, sourceRange) {\n        var _esValue$implSymbol10;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'compareBoundaryPoints' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"unsigned short\"](curArg, {\n            context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg3 = arguments[1];\n          _curArg3 = exports.convert(_curArg3, {\n            context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 2\"\n          });\n          args.push(_curArg3);\n        }\n        return (_esValue$implSymbol10 = esValue[implSymbol]).compareBoundaryPoints.apply(_esValue$implSymbol10, args);\n      }\n    }, {\n      key: \"deleteContents\",\n      value: function deleteContents() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return esValue[implSymbol].deleteContents();\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"extractContents\",\n      value: function extractContents() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return utils.tryWrapperForImpl(esValue[implSymbol].extractContents());\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"cloneContents\",\n      value: function cloneContents() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          return utils.tryWrapperForImpl(esValue[implSymbol].cloneContents());\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"insertNode\",\n      value: function insertNode(node) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'insertNode' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'insertNode' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol11;\n\n          return (_esValue$implSymbol11 = esValue[implSymbol]).insertNode.apply(_esValue$implSymbol11, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"surroundContents\",\n      value: function surroundContents(newParent) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'surroundContents' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'surroundContents' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol12;\n\n          return (_esValue$implSymbol12 = esValue[implSymbol]).surroundContents.apply(_esValue$implSymbol12, args);\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"cloneRange\",\n      value: function cloneRange() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol].cloneRange());\n      }\n    }, {\n      key: \"detach\",\n      value: function detach() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return esValue[implSymbol].detach();\n      }\n    }, {\n      key: \"isPointInRange\",\n      value: function isPointInRange(node, offset) {\n        var _esValue$implSymbol13;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'isPointInRange' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'isPointInRange' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg4 = arguments[1];\n          _curArg4 = conversions[\"unsigned long\"](_curArg4, {\n            context: \"Failed to execute 'isPointInRange' on 'Range': parameter 2\"\n          });\n          args.push(_curArg4);\n        }\n        return (_esValue$implSymbol13 = esValue[implSymbol]).isPointInRange.apply(_esValue$implSymbol13, args);\n      }\n    }, {\n      key: \"comparePoint\",\n      value: function comparePoint(node, offset) {\n        var _esValue$implSymbol14;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 2) {\n          throw new TypeError(\"Failed to execute 'comparePoint' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'comparePoint' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg5 = arguments[1];\n          _curArg5 = conversions[\"unsigned long\"](_curArg5, {\n            context: \"Failed to execute 'comparePoint' on 'Range': parameter 2\"\n          });\n          args.push(_curArg5);\n        }\n        return (_esValue$implSymbol14 = esValue[implSymbol]).comparePoint.apply(_esValue$implSymbol14, args);\n      }\n    }, {\n      key: \"intersectsNode\",\n      value: function intersectsNode(node) {\n        var _esValue$implSymbol15;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'intersectsNode' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = Node.convert(curArg, {\n            context: \"Failed to execute 'intersectsNode' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol15 = esValue[implSymbol]).intersectsNode.apply(_esValue$implSymbol15, args);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return esValue[implSymbol].toString();\n      }\n    }, {\n      key: \"createContextualFragment\",\n      value: function createContextualFragment(fragment) {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        if (arguments.length < 1) {\n          throw new TypeError(\"Failed to execute 'createContextualFragment' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\");\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'createContextualFragment' on 'Range': parameter 1\"\n          });\n          args.push(curArg);\n        }\n        ceReactionsPreSteps_helpers_custom_elements(globalObject);\n\n        try {\n          var _esValue$implSymbol16;\n\n          return utils.tryWrapperForImpl((_esValue$implSymbol16 = esValue[implSymbol]).createContextualFragment.apply(_esValue$implSymbol16, args));\n        } finally {\n          ceReactionsPostSteps_helpers_custom_elements(globalObject);\n        }\n      }\n    }, {\n      key: \"commonAncestorContainer\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new TypeError(\"Illegal invocation\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"commonAncestorContainer\"]);\n      }\n    }]);\n\n    return Range;\n  }(globalObject.AbstractRange);\n\n  Object.defineProperties(Range.prototype, (_Object$definePropert = {\n    setStart: {\n      enumerable: true\n    },\n    setEnd: {\n      enumerable: true\n    },\n    setStartBefore: {\n      enumerable: true\n    },\n    setStartAfter: {\n      enumerable: true\n    },\n    setEndBefore: {\n      enumerable: true\n    },\n    setEndAfter: {\n      enumerable: true\n    },\n    collapse: {\n      enumerable: true\n    },\n    selectNode: {\n      enumerable: true\n    },\n    selectNodeContents: {\n      enumerable: true\n    },\n    compareBoundaryPoints: {\n      enumerable: true\n    },\n    deleteContents: {\n      enumerable: true\n    },\n    extractContents: {\n      enumerable: true\n    },\n    cloneContents: {\n      enumerable: true\n    },\n    insertNode: {\n      enumerable: true\n    },\n    surroundContents: {\n      enumerable: true\n    },\n    cloneRange: {\n      enumerable: true\n    },\n    detach: {\n      enumerable: true\n    },\n    isPointInRange: {\n      enumerable: true\n    },\n    comparePoint: {\n      enumerable: true\n    },\n    intersectsNode: {\n      enumerable: true\n    },\n    toString: {\n      enumerable: true\n    },\n    createContextualFragment: {\n      enumerable: true\n    },\n    commonAncestorContainer: {\n      enumerable: true\n    }\n  }, _defineProperty(_Object$definePropert, Symbol.toStringTag, {\n    value: \"Range\",\n    configurable: true\n  }), _defineProperty(_Object$definePropert, \"START_TO_START\", {\n    value: 0,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"START_TO_END\", {\n    value: 1,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"END_TO_END\", {\n    value: 2,\n    enumerable: true\n  }), _defineProperty(_Object$definePropert, \"END_TO_START\", {\n    value: 3,\n    enumerable: true\n  }), _Object$definePropert));\n  Object.defineProperties(Range, {\n    START_TO_START: {\n      value: 0,\n      enumerable: true\n    },\n    START_TO_END: {\n      value: 1,\n      enumerable: true\n    },\n    END_TO_END: {\n      value: 2,\n      enumerable: true\n    },\n    END_TO_START: {\n      value: 3,\n      enumerable: true\n    }\n  });\n\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n\n  globalObject[ctorRegistrySymbol][interfaceName] = Range;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Range\n  });\n};\n\nvar Impl = require(\"../range/Range-impl.js\");","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/generated/Range.js"],"names":["conversions","require","utils","Node","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","AbstractRange","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","context","implForWrapper","TypeError","makeWrapper","globalObject","undefined","Error","ctor","Object","create","prototype","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","Range","node","offset","esValue","arguments","length","args","curArg","push","setStart","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","collapse","selectNode","selectNodeContents","how","sourceRange","compareBoundaryPoints","deleteContents","tryWrapperForImpl","extractContents","cloneContents","insertNode","newParent","surroundContents","cloneRange","detach","isPointInRange","comparePoint","intersectsNode","toString","fragment","createContextualFragment","defineProperties","enumerable","commonAncestorContainer","Symbol","toStringTag","START_TO_START","START_TO_END","END_TO_END","END_TO_START","writable"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst AbstractRange = require(\"./AbstractRange.js\");\n\nconst interfaceName = \"Range\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new TypeError(`${context} is not of type 'Range'.`);\n};\n\nfunction makeWrapper(globalObject) {\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    throw new Error(\"Internal error: invalid global object\");\n  }\n\n  const ctor = globalObject[ctorRegistrySymbol][\"Range\"];\n  if (ctor === undefined) {\n    throw new Error(\"Internal error: constructor Range is not installed on the passed global object\");\n  }\n\n  return Object.create(ctor.prototype);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  AbstractRange._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = globalObject => {\n  const wrapper = makeWrapper(globalObject);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  if (globalObject.AbstractRange === undefined) {\n    throw new Error(\"Internal error: attempting to evaluate Range before AbstractRange\");\n  }\n  class Range extends globalObject.AbstractRange {\n    constructor() {\n      return exports.setup(Object.create(new.target.prototype), globalObject, undefined);\n    }\n\n    setStart(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'setStart' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setStart' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setStart' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStart(...args);\n    }\n\n    setEnd(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'setEnd' on 'Range': 2 arguments required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setEnd' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setEnd' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEnd(...args);\n    }\n\n    setStartBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'setStartBefore' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setStartBefore' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartBefore(...args);\n    }\n\n    setStartAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'setStartAfter' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setStartAfter' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartAfter(...args);\n    }\n\n    setEndBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'setEndBefore' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setEndBefore' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndBefore(...args);\n    }\n\n    setEndAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'setEndAfter' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'setEndAfter' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndAfter(...args);\n    }\n\n    collapse() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, { context: \"Failed to execute 'collapse' on 'Range': parameter 1\" });\n        } else {\n          curArg = false;\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].collapse(...args);\n    }\n\n    selectNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'selectNode' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'selectNode' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNode(...args);\n    }\n\n    selectNodeContents(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'selectNodeContents' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'selectNodeContents' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNodeContents(...args);\n    }\n\n    compareBoundaryPoints(how, sourceRange) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'compareBoundaryPoints' on 'Range': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned short\"](curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = exports.convert(curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].compareBoundaryPoints(...args);\n    }\n\n    deleteContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].deleteContents();\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    extractContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].extractContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    cloneContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].cloneContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    insertNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'insertNode' on 'Range': 1 argument required, but only \" + arguments.length + \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'insertNode' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].insertNode(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    surroundContents(newParent) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'surroundContents' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'surroundContents' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].surroundContents(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    cloneRange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].cloneRange());\n    }\n\n    detach() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].detach();\n    }\n\n    isPointInRange(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'isPointInRange' on 'Range': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'isPointInRange' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'isPointInRange' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].isPointInRange(...args);\n    }\n\n    comparePoint(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 2) {\n        throw new TypeError(\n          \"Failed to execute 'comparePoint' on 'Range': 2 arguments required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'comparePoint' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'comparePoint' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].comparePoint(...args);\n    }\n\n    intersectsNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'intersectsNode' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(curArg, { context: \"Failed to execute 'intersectsNode' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].intersectsNode(...args);\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    createContextualFragment(fragment) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      if (arguments.length < 1) {\n        throw new TypeError(\n          \"Failed to execute 'createContextualFragment' on 'Range': 1 argument required, but only \" +\n            arguments.length +\n            \" present.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createContextualFragment' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].createContextualFragment(...args));\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get commonAncestorContainer() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new TypeError(\"Illegal invocation\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"commonAncestorContainer\"]);\n    }\n  }\n  Object.defineProperties(Range.prototype, {\n    setStart: { enumerable: true },\n    setEnd: { enumerable: true },\n    setStartBefore: { enumerable: true },\n    setStartAfter: { enumerable: true },\n    setEndBefore: { enumerable: true },\n    setEndAfter: { enumerable: true },\n    collapse: { enumerable: true },\n    selectNode: { enumerable: true },\n    selectNodeContents: { enumerable: true },\n    compareBoundaryPoints: { enumerable: true },\n    deleteContents: { enumerable: true },\n    extractContents: { enumerable: true },\n    cloneContents: { enumerable: true },\n    insertNode: { enumerable: true },\n    surroundContents: { enumerable: true },\n    cloneRange: { enumerable: true },\n    detach: { enumerable: true },\n    isPointInRange: { enumerable: true },\n    comparePoint: { enumerable: true },\n    intersectsNode: { enumerable: true },\n    toString: { enumerable: true },\n    createContextualFragment: { enumerable: true },\n    commonAncestorContainer: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"Range\", configurable: true },\n    START_TO_START: { value: 0, enumerable: true },\n    START_TO_END: { value: 1, enumerable: true },\n    END_TO_END: { value: 2, enumerable: true },\n    END_TO_START: { value: 3, enumerable: true }\n  });\n  Object.defineProperties(Range, {\n    START_TO_START: { value: 0, enumerable: true },\n    START_TO_END: { value: 1, enumerable: true },\n    END_TO_END: { value: 2, enumerable: true },\n    END_TO_START: { value: 3, enumerable: true }\n  });\n  if (globalObject[ctorRegistrySymbol] === undefined) {\n    globalObject[ctorRegistrySymbol] = Object.create(null);\n  }\n  globalObject[ctorRegistrySymbol][interfaceName] = Range;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Range\n  });\n};\n\nconst Impl = require(\"../range/Range-impl.js\");\n"]},"metadata":{},"sourceType":"script"}