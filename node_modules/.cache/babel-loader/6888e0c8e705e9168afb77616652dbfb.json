{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar _require = require(\"../helpers/details\"),\n    isSummaryForParentDetails = _require.isSummaryForParentDetails;\n\nvar focusing = require(\"../helpers/focusing\");\n\nvar _require2 = require(\"../helpers/namespaces\"),\n    HTML_NS = _require2.HTML_NS,\n    SVG_NS = _require2.SVG_NS;\n\nvar DOMStringMap = require(\"../generated/DOMStringMap\");\n\nvar tabIndexReflectAllowedHTMLElements = new Set([\"a\", \"area\", \"button\", \"frame\", \"iframe\", \"input\", \"object\", \"select\", \"textarea\"]);\n\nvar HTMLOrSVGElementImpl = /*#__PURE__*/function () {\n  function HTMLOrSVGElementImpl() {\n    _classCallCheck(this, HTMLOrSVGElementImpl);\n  }\n\n  _createClass(HTMLOrSVGElementImpl, [{\n    key: \"_initHTMLOrSVGElement\",\n    value: function _initHTMLOrSVGElement() {\n      this._tabIndex = 0;\n      this._dataset = DOMStringMap.createImpl(this._globalObject, [], {\n        element: this\n      });\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!focusing.isFocusableAreaElement(this)) {\n        return;\n      }\n\n      var ownerDocument = this._ownerDocument;\n      var previous = ownerDocument._lastFocusedElement;\n\n      if (previous === this) {\n        return;\n      }\n\n      ownerDocument._lastFocusedElement = null;\n\n      if (previous) {\n        focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n        focusing.fireFocusEventWithTargetAdjustment(\"focusout\", previous, this, {\n          bubbles: true\n        });\n      } else {\n        var frameElement = ownerDocument._defaultView._frameElement;\n\n        if (frameElement) {\n          var frameLastFocusedElement = frameElement.ownerDocument._lastFocusedElement;\n          frameElement.ownerDocument._lastFocusedElement = null;\n          focusing.fireFocusEventWithTargetAdjustment(\"blur\", frameLastFocusedElement, null);\n          focusing.fireFocusEventWithTargetAdjustment(\"focusout\", frameLastFocusedElement, null, {\n            bubbles: true\n          });\n          frameElement.ownerDocument._lastFocusedElement = frameElement;\n        }\n      }\n\n      ownerDocument._lastFocusedElement = this;\n      focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n      focusing.fireFocusEventWithTargetAdjustment(\"focusin\", this, previous, {\n        bubbles: true\n      });\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n        return;\n      }\n\n      this._ownerDocument._lastFocusedElement = null;\n      focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n      focusing.fireFocusEventWithTargetAdjustment(\"focusout\", this, this._ownerDocument, {\n        bubbles: true\n      });\n      focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n      focusing.fireFocusEventWithTargetAdjustment(\"focusin\", this._ownerDocument, this, {\n        bubbles: true\n      });\n    }\n  }, {\n    key: \"dataset\",\n    get: function get() {\n      return this._dataset;\n    } // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n\n  }, {\n    key: \"tabIndex\",\n    get: function get() {\n      if (!this.hasAttributeNS(null, \"tabindex\")) {\n        if (this.namespaceURI === HTML_NS && (tabIndexReflectAllowedHTMLElements.has(this._localName) || this._localName === \"summary\" && isSummaryForParentDetails(this)) || this.namespaceURI === SVG_NS && this._localName === \"a\") {\n          return 0;\n        }\n\n        return -1;\n      }\n\n      return conversions.long(this.getAttributeNS(null, \"tabindex\"));\n    },\n    set: function set(value) {\n      this.setAttributeNS(null, \"tabindex\", String(value));\n    }\n  }]);\n\n  return HTMLOrSVGElementImpl;\n}();\n\nexports.implementation = HTMLOrSVGElementImpl;","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLOrSVGElement-impl.js"],"names":["conversions","require","isSummaryForParentDetails","focusing","HTML_NS","SVG_NS","DOMStringMap","tabIndexReflectAllowedHTMLElements","Set","HTMLOrSVGElementImpl","_tabIndex","_dataset","createImpl","_globalObject","element","isFocusableAreaElement","ownerDocument","_ownerDocument","previous","_lastFocusedElement","fireFocusEventWithTargetAdjustment","bubbles","frameElement","_defaultView","_frameElement","frameLastFocusedElement","hasAttributeNS","namespaceURI","has","_localName","long","getAttributeNS","value","setAttributeNS","String","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst { isSummaryForParentDetails } = require(\"../helpers/details\");\nconst focusing = require(\"../helpers/focusing\");\nconst { HTML_NS, SVG_NS } = require(\"../helpers/namespaces\");\nconst DOMStringMap = require(\"../generated/DOMStringMap\");\n\nconst tabIndexReflectAllowedHTMLElements = new Set([\n  \"a\", \"area\", \"button\", \"frame\", \"iframe\",\n  \"input\", \"object\", \"select\", \"textarea\"\n]);\n\nclass HTMLOrSVGElementImpl {\n  _initHTMLOrSVGElement() {\n    this._tabIndex = 0;\n    this._dataset = DOMStringMap.createImpl(this._globalObject, [], { element: this });\n  }\n\n  get dataset() {\n    return this._dataset;\n  }\n\n  // TODO this should be [Reflect]able if we added default value support to webidl2js's [Reflect]\n  get tabIndex() {\n    if (!this.hasAttributeNS(null, \"tabindex\")) {\n      if ((this.namespaceURI === HTML_NS && (tabIndexReflectAllowedHTMLElements.has(this._localName) ||\n                                             (this._localName === \"summary\" && isSummaryForParentDetails(this)))) ||\n          (this.namespaceURI === SVG_NS && this._localName === \"a\")) {\n        return 0;\n      }\n      return -1;\n    }\n    return conversions.long(this.getAttributeNS(null, \"tabindex\"));\n  }\n\n  set tabIndex(value) {\n    this.setAttributeNS(null, \"tabindex\", String(value));\n  }\n\n  focus() {\n    if (!focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n    const ownerDocument = this._ownerDocument;\n    const previous = ownerDocument._lastFocusedElement;\n\n    if (previous === this) {\n      return;\n    }\n\n    ownerDocument._lastFocusedElement = null;\n    if (previous) {\n      focusing.fireFocusEventWithTargetAdjustment(\"blur\", previous, this);\n      focusing.fireFocusEventWithTargetAdjustment(\"focusout\", previous, this, { bubbles: true });\n    } else {\n      const frameElement = ownerDocument._defaultView._frameElement;\n      if (frameElement) {\n        const frameLastFocusedElement = frameElement.ownerDocument._lastFocusedElement;\n        frameElement.ownerDocument._lastFocusedElement = null;\n        focusing.fireFocusEventWithTargetAdjustment(\"blur\", frameLastFocusedElement, null);\n        focusing.fireFocusEventWithTargetAdjustment(\"focusout\", frameLastFocusedElement, null, { bubbles: true });\n        frameElement.ownerDocument._lastFocusedElement = frameElement;\n      }\n    }\n\n    ownerDocument._lastFocusedElement = this;\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this, previous);\n    focusing.fireFocusEventWithTargetAdjustment(\"focusin\", this, previous, { bubbles: true });\n  }\n\n  blur() {\n    if (this._ownerDocument._lastFocusedElement !== this || !focusing.isFocusableAreaElement(this)) {\n      return;\n    }\n\n    this._ownerDocument._lastFocusedElement = null;\n    focusing.fireFocusEventWithTargetAdjustment(\"blur\", this, this._ownerDocument);\n    focusing.fireFocusEventWithTargetAdjustment(\"focusout\", this, this._ownerDocument, { bubbles: true });\n    focusing.fireFocusEventWithTargetAdjustment(\"focus\", this._ownerDocument, this);\n    focusing.fireFocusEventWithTargetAdjustment(\"focusin\", this._ownerDocument, this, { bubbles: true });\n  }\n}\n\nexports.implementation = HTMLOrSVGElementImpl;\n"]},"metadata":{},"sourceType":"script"}