{"ast":null,"code":"\"use strict\";\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar MessageEvent = require(\"./generated/MessageEvent\");\n\nvar idlUtils = require(\"./generated/utils\");\n\nvar _require = require(\"../utils\"),\n    isValidTargetOrigin = _require.isValidTargetOrigin;\n\nvar _require2 = require(\"./helpers/events\"),\n    fireAnEvent = _require2.fireAnEvent;\n\nmodule.exports = function (globalObject) {\n  return function (message, targetOrigin) {\n    var _this = this;\n\n    if (arguments.length < 2) {\n      throw new TypeError(\"'postMessage' requires 2 arguments: 'message' and 'targetOrigin'\");\n    }\n\n    targetOrigin = String(targetOrigin);\n\n    if (!isValidTargetOrigin(targetOrigin)) {\n      // TODO: Fix me\n      throw DOMException.create(globalObject, [\"Failed to execute 'postMessage' on 'Window': \" + \"Invalid target origin '\" + targetOrigin + \"' in a call to 'postMessage'.\", \"SyntaxError\"]);\n    } // TODO: targetOrigin === '/' - requires reference to source window\n    // See https://github.com/jsdom/jsdom/pull/1140#issuecomment-111587499\n\n\n    if (targetOrigin !== \"*\" && targetOrigin !== idlUtils.implForWrapper(globalObject._document)._origin) {\n      return;\n    } // TODO: event.source - requires reference to source window\n    // TODO: event.origin - requires reference to source window\n    // TODO: event.ports\n    // TODO: event.data - structured clone message - requires cloning DOM nodes\n\n\n    setTimeout(function () {\n      fireAnEvent(\"message\", _this, MessageEvent, {\n        data: message\n      });\n    }, 0);\n  };\n};","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/post-message.js"],"names":["DOMException","require","MessageEvent","idlUtils","isValidTargetOrigin","fireAnEvent","module","exports","globalObject","message","targetOrigin","arguments","length","TypeError","String","create","implForWrapper","_document","_origin","setTimeout","data"],"mappings":"AAAA;;AACA,IAAMA,YAAY,GAAGC,OAAO,CAAC,gCAAD,CAA5B;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA5B;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAxB;;eACgCA,OAAO,CAAC,UAAD,C;IAA/BG,mB,YAAAA,mB;;gBACgBH,OAAO,CAAC,kBAAD,C;IAAvBI,W,aAAAA,W;;AAERC,MAAM,CAACC,OAAP,GAAiB,UAAUC,YAAV,EAAwB;AACvC,SAAO,UAAUC,OAAV,EAAmBC,YAAnB,EAAiC;AAAA;;AACtC,QAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAM,IAAIC,SAAJ,CAAc,kEAAd,CAAN;AACD;;AAEDH,IAAAA,YAAY,GAAGI,MAAM,CAACJ,YAAD,CAArB;;AAEA,QAAI,CAACN,mBAAmB,CAACM,YAAD,CAAxB,EAAwC;AACtC;AACA,YAAMV,YAAY,CAACe,MAAb,CAAoBP,YAApB,EAAkC,CACtC,kDACA,yBADA,GAC4BE,YAD5B,GAC2C,+BAFL,EAGtC,aAHsC,CAAlC,CAAN;AAKD,KAdqC,CAgBtC;AACA;;;AACA,QAAIA,YAAY,KAAK,GAAjB,IAAwBA,YAAY,KAAKP,QAAQ,CAACa,cAAT,CAAwBR,YAAY,CAACS,SAArC,EAAgDC,OAA7F,EAAsG;AACpG;AACD,KApBqC,CAsBtC;AACA;AACA;AACA;;;AACAC,IAAAA,UAAU,CAAC,YAAM;AACfd,MAAAA,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAkBH,YAAlB,EAAgC;AAAEkB,QAAAA,IAAI,EAAEX;AAAR,OAAhC,CAAX;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GA7BD;AA8BD,CA/BD","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst MessageEvent = require(\"./generated/MessageEvent\");\nconst idlUtils = require(\"./generated/utils\");\nconst { isValidTargetOrigin } = require(\"../utils\");\nconst { fireAnEvent } = require(\"./helpers/events\");\n\nmodule.exports = function (globalObject) {\n  return function (message, targetOrigin) {\n    if (arguments.length < 2) {\n      throw new TypeError(\"'postMessage' requires 2 arguments: 'message' and 'targetOrigin'\");\n    }\n\n    targetOrigin = String(targetOrigin);\n\n    if (!isValidTargetOrigin(targetOrigin)) {\n      // TODO: Fix me\n      throw DOMException.create(globalObject, [\n        \"Failed to execute 'postMessage' on 'Window': \" +\n        \"Invalid target origin '\" + targetOrigin + \"' in a call to 'postMessage'.\",\n        \"SyntaxError\"\n      ]);\n    }\n\n    // TODO: targetOrigin === '/' - requires reference to source window\n    // See https://github.com/jsdom/jsdom/pull/1140#issuecomment-111587499\n    if (targetOrigin !== \"*\" && targetOrigin !== idlUtils.implForWrapper(globalObject._document)._origin) {\n      return;\n    }\n\n    // TODO: event.source - requires reference to source window\n    // TODO: event.origin - requires reference to source window\n    // TODO: event.ports\n    // TODO: event.data - structured clone message - requires cloning DOM nodes\n    setTimeout(() => {\n      fireAnEvent(\"message\", this, MessageEvent, { data: message });\n    }, 0);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}