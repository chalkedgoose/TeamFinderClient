{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMTokenList = require(\"../generated/DOMTokenList\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar _require = require(\"../helpers/stylesheets\"),\n    fetchStylesheet = _require.fetchStylesheet;\n\nvar _require2 = require(\"../helpers/document-base-url\"),\n    parseURLToResultingURLRecord = _require2.parseURLToResultingURLRecord;\n\nvar whatwgURL = require(\"whatwg-url\"); // Important reading: \"appropriate times to obtain the resource\" in\n// https://html.spec.whatwg.org/multipage/semantics.html#link-type-stylesheet\n\n\nvar HTMLLinkElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLLinkElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLLinkElementImpl);\n\n  function HTMLLinkElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLLinkElementImpl);\n\n    _this = _super.call(this, globalObject, args, privateData);\n    _this.sheet = null;\n    return _this;\n  }\n\n  _createClass(HTMLLinkElementImpl, [{\n    key: \"_attach\",\n    value: function _attach() {\n      _get(_getPrototypeOf(HTMLLinkElementImpl.prototype), \"_attach\", this).call(this);\n\n      maybeFetchAndProcess(this);\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLLinkElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n\n      if (name === \"href\") {\n        // TODO crossorigin=\"\" or type=\"\"\n        maybeFetchAndProcess(this);\n      }\n\n      if (name === \"rel\" && this._relList !== undefined) {\n        this._relList.attrModified();\n      }\n    }\n  }, {\n    key: \"relList\",\n    get: function get() {\n      if (this._relList === undefined) {\n        this._relList = DOMTokenList.createImpl(this._globalObject, [], {\n          element: this,\n          attributeLocalName: \"rel\",\n          supportedTokens: new Set([\"stylesheet\"])\n        });\n      }\n\n      return this._relList;\n    }\n  }, {\n    key: \"_accept\",\n    get: function get() {\n      return \"text/css,*/*;q=0.1\";\n    }\n  }]);\n\n  return HTMLLinkElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLLinkElementImpl\n}; // https://html.spec.whatwg.org/multipage/links.html#link-type-stylesheet\n\nfunction maybeFetchAndProcess(el) {\n  if (!isExternalResourceLink(el)) {\n    return;\n  } // Browsing-context connected\n\n\n  if (!el.isConnected || !el._ownerDocument._defaultView) {\n    return;\n  }\n\n  fetchAndProcess(el);\n} // https://html.spec.whatwg.org/multipage/semantics.html#default-fetch-and-process-the-linked-resource\n// TODO: refactor into general link-fetching like the spec.\n\n\nfunction fetchAndProcess(el) {\n  var href = el.getAttributeNS(null, \"href\");\n\n  if (href === null || href === \"\") {\n    return;\n  }\n\n  var url = parseURLToResultingURLRecord(href, el._ownerDocument);\n\n  if (url === null) {\n    return;\n  } // TODO handle crossorigin=\"\", nonce, integrity=\"\", referrerpolicy=\"\"\n\n\n  var serialized = whatwgURL.serializeURL(url);\n  fetchStylesheet(el, serialized);\n}\n\nfunction isExternalResourceLink(el) {\n  // for our purposes, only stylesheets can be external resource links\n  var wrapper = idlUtils.wrapperForImpl(el);\n\n  if (!/(?:[ \\t\\n\\r\\f]|^)stylesheet(?:[ \\t\\n\\r\\f]|$)/i.test(wrapper.rel)) {\n    // rel is a space-separated list of tokens, and the original rel types\n    // are case-insensitive.\n    return false;\n  }\n\n  return el.hasAttributeNS(null, \"href\");\n}","map":{"version":3,"sources":["C:/Users/MOHAM/Desktop/Team-Finder-Client/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLinkElement-impl.js"],"names":["DOMTokenList","require","HTMLElementImpl","implementation","idlUtils","fetchStylesheet","parseURLToResultingURLRecord","whatwgURL","HTMLLinkElementImpl","globalObject","args","privateData","sheet","maybeFetchAndProcess","name","value","oldValue","_relList","undefined","attrModified","createImpl","_globalObject","element","attributeLocalName","supportedTokens","Set","module","exports","el","isExternalResourceLink","isConnected","_ownerDocument","_defaultView","fetchAndProcess","href","getAttributeNS","url","serialized","serializeURL","wrapper","wrapperForImpl","test","rel","hasAttributeNS"],"mappings":"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","sourcesContent":["\"use strict\";\nconst DOMTokenList = require(\"../generated/DOMTokenList\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst { fetchStylesheet } = require(\"../helpers/stylesheets\");\nconst { parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\nconst whatwgURL = require(\"whatwg-url\");\n\n// Important reading: \"appropriate times to obtain the resource\" in\n// https://html.spec.whatwg.org/multipage/semantics.html#link-type-stylesheet\n\nclass HTMLLinkElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this.sheet = null;\n  }\n\n  get relList() {\n    if (this._relList === undefined) {\n      this._relList = DOMTokenList.createImpl(this._globalObject, [], {\n        element: this,\n        attributeLocalName: \"rel\",\n        supportedTokens: new Set([\"stylesheet\"])\n      });\n    }\n    return this._relList;\n  }\n\n  _attach() {\n    super._attach();\n    maybeFetchAndProcess(this);\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"href\") { // TODO crossorigin=\"\" or type=\"\"\n      maybeFetchAndProcess(this);\n    }\n\n    if (name === \"rel\" && this._relList !== undefined) {\n      this._relList.attrModified();\n    }\n  }\n\n  get _accept() {\n    return \"text/css,*/*;q=0.1\";\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLLinkElementImpl\n};\n\n// https://html.spec.whatwg.org/multipage/links.html#link-type-stylesheet\nfunction maybeFetchAndProcess(el) {\n  if (!isExternalResourceLink(el)) {\n    return;\n  }\n\n  // Browsing-context connected\n  if (!el.isConnected || !el._ownerDocument._defaultView) {\n    return;\n  }\n\n  fetchAndProcess(el);\n}\n\n// https://html.spec.whatwg.org/multipage/semantics.html#default-fetch-and-process-the-linked-resource\n// TODO: refactor into general link-fetching like the spec.\nfunction fetchAndProcess(el) {\n  const href = el.getAttributeNS(null, \"href\");\n\n  if (href === null || href === \"\") {\n    return;\n  }\n\n  const url = parseURLToResultingURLRecord(href, el._ownerDocument);\n  if (url === null) {\n    return;\n  }\n\n  // TODO handle crossorigin=\"\", nonce, integrity=\"\", referrerpolicy=\"\"\n\n  const serialized = whatwgURL.serializeURL(url);\n\n  fetchStylesheet(el, serialized);\n}\n\nfunction isExternalResourceLink(el) {\n  // for our purposes, only stylesheets can be external resource links\n  const wrapper = idlUtils.wrapperForImpl(el);\n  if (!/(?:[ \\t\\n\\r\\f]|^)stylesheet(?:[ \\t\\n\\r\\f]|$)/i.test(wrapper.rel)) {\n    // rel is a space-separated list of tokens, and the original rel types\n    // are case-insensitive.\n    return false;\n  }\n\n  return el.hasAttributeNS(null, \"href\");\n}\n"]},"metadata":{},"sourceType":"script"}